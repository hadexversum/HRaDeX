[{"path":"https://hadexversum.github.io/HRaDeX/articles/example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Experimental example","text":"document adapted version Supplement HRaDeX manuscript. describe exemplary step--step analysis experimental data using hadexversum family tools: HaDeX, HRaDeX compaHRaDeX. analyzed protein eEF1Bα subunit human guanine-nucleotide exchange factor (GEF) complex (eEF1B), measured Mass Spectrometry Lab Institute Biochemistry Biophysics Polish Academy Sciences published Bondarchuk et al. one-state classification, focus pure alpha state. comparative analysis conducted pure alpha state alpha presence gamma component. present visualization methods hadexversum, without making strict interpretations. purpose, suggest contacting research group published original research topic.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/example.html","id":"general-information","dir":"Articles","previous_headings":"HaDeX","what":"General information","title":"Experimental example","text":"HaDeX general-use tool widely understood data analysis peptide level. provides many features investigating directly mass measurements checking experiment quality. HaDeX provides many methods quality control experiment -depth analysis measurements, uncertainty, statistical significance. commonly used forms visualization available, also new methods proposed. summary results wrapped comprehensive, downloadable report. document, focus visualization forms corresponding high-resolution data.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/example.html","id":"peptide-level-uptake-analysis","dir":"Articles","previous_headings":"HaDeX","what":"Peptide-level uptake analysis","title":"Experimental example","text":"see uptake level (uncertainty measurement) position peptide protein sequence, use comparison plot. readability purposes, type plot, can present data single time point. However, quick glimpse plot enables general view exchanged regions.  Let’s suppose aim comparative analysis two biological states. case, use -called Woods plot, differences uptake peptide information differences statistically significant desired level. comparison plot, present data single time point.  plot presents results measurement done 150 min exchange. shows one significant exchange region - positions 5 50 two regions values barely significance level.","code":"HaDeX::plot_state_comparison(uptake_dat,                              fractional = T,                              time_t = 150) +   labs(title = \"Comparison plot for eEF1Bα\") diff_p_uptake_dat <- create_p_diff_uptake_dataset(alpha_dat,                                                   state_1 = \"Alpha_KSCN\",                                                   state_2 = \"ALPHA_Gamma\")  HaDeX::plot_differential(diff_p_uptake_dat = diff_p_uptake_dat,                          fractional = T,                           show_houde_interval = T,                           time_t = 150) +   labs(title = \"Differential plot in 150 min between eEF1Bα and eEF1Bα with eEF1Bγ\",        y = \"Fractional DU [%]\")"},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/example.html","id":"general-information-1","dir":"Articles","previous_headings":"HRaDeX","what":"General information","title":"Experimental example","text":"HRaDeX provides classification results one biological state time. get data comparative purposes, classification process conducted twice, selected states, classification parameters. Adjusting parameters can challenging, especially longer proteins due calculation time. document, discuss results. detailed description workflow available dedicated article.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/example.html","id":"high-resolution-dynamics-analysis","dir":"Articles","previous_headings":"HRaDeX","what":"High-resolution dynamics analysis","title":"Experimental example","text":"Firstly, upload experimental data. parameter options adjusted content file. , need decide default parameters sufficient adjusted. additional knowledge specificity analyzed protein helpful. peptides strong “medium” exchange phase shifted towards default “slow” exchange, “slow” exchange slow, close bottom limit class exchange. cases, broadening medium class desired. case example, use default limits, sufficient fit results good, small rss. default parameters follows: parameters must confirmed clicking button, avoid unnecessary calculations selecting parameters. , results. Let’s start discussing fitting results example peptide - peptide DVAAF alpha protein. , plot two parts - normalized uptake curve fitted model uptake curve measurements, better understanding uptake pattern. Let’s look closely left plot. Measurement points marked circles, uncertainty measurement shown error bars. Mass spectrometry accurate method, error bars hardly visible, although present. black line indicates final fitted curve, color lines indicating three components final model. described , red line presents fast component, green line medium exchange component, blue line slow component. Although populations sum one, population intensity impacts final classification.  model parameters shown , resulting classification color table. can see, population fast-exchanging group biggest, thus final color close red. However, groups present interfere purity color. noticeable slow exchanging group pushing classification color towards blue, resulting violet-ish shade. small addition green leads subdued color. can find legend, understanding color scale classification result located.  Color legend:  peptide assigned color code, aggregate data obtain simplified high-resolution result. mid-step towards high-resolution also used method verification. case, see peptides regions classified similarly, data aggregation justified. residue protein structure, aggregate values using selected method. methods described article discussing workflow. , use “weighted” approach. classification whole sequence presented . However, presenting classification results linear way quite satisfying. Adding spatial information, obtained different sources, provides additional depth analysis. , can make additional observations. First, let’s look first part protein. Although green region classification linear plot interrupted red regions, spatially green regions close, surrounded red region, outer side protein - suspect. second part protein, regions similar classifications close well. can see clearly blue regions slow exchange close, located one specific place. linking two parts protein red - expect, singular structure, easily accessed solvent, without structural protection exchange. discussed one biological state, second one, reasoning similar.","code":"get_example_fit_k_params() #>     start lower upper #> k_1  2.00   1.0  30.0 #> k_2  0.10   0.1   1.0 #> k_3  0.01   0.0   0.1 plot_double_uc(example_kin_dat, example_fit_dat) example_fit_dat #>    id   Protein      State sequence start end max_uptake       n_1      k_1 #> 1 106 db_eEF1Ba Alpha_KSCN    DVAAF   217 221          4 0.4973603 9.334761 #>         n_2       k_2       n_3        k_3          rss       bic class_name #> 1 0.1422123 0.9999962 0.3623463 0.06211226 7.381055e-06 -52.08054         NA #>     k_est fitted   color #> 1 4.79825      3 #7F245C HRaDeX::plot_cov_class(fit_values) HRaDeX::plot_hires(hires_params) HRaDeX::plot_3d_structure_hires(pdb_file_path = \"../data/Model_eEF1Balpha.pdb\",                                 hires_params = hires_params)"},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/example.html","id":"high-resolution-comparative-analysis","dir":"Articles","previous_headings":"compaHRaDeX","what":"High-resolution comparative analysis","title":"Experimental example","text":"ultimate goal experiment usually comparative analysis two biological states provides information exchange changed specific factors. case, prepared classification analysis two biological states alpha: pure state (discussed alpha without complex) second state (alpha presence gamma). present classification results states, first one bottom second one top. can see bore eye regions difference. Unfortunately, hard estimate difference colors. can quantify color difference one number, calculating simple distance populations used obtain classification color. case, see great difference region 10-50 sequence, second region 140-155, third 200-210, roughly estimating. Choosing 0.2 threshold distance value, can present regions difference 3D structure, presented . distance populations plot shows us regions interest, doesn’t show direction change - region protected exchange contrary. account , propose rough estimate exchange rate based parameters model, defined workflow description article. can see obvious difference first part protein, region shown Woods plot . also see small difference Woods’s plot second part protein. Although results somehow analogical, high-resolution approach accounts whole time course.","code":"HRaDeX::plot_two_states(hires_params, hires_params_2) two_states <- HRaDeX::create_two_state_dataset(hires_params, hires_params_2) HRaDeX::plot_color_distance(two_states) color_positions <- HRaDeX::prepare_diff_data(two_states,                                              \"dist\",                                              0.2) HRaDeX::plot_3d_structure_blank(pdb_file_path = \"../data/Model_eEF1Balpha.pdb\") %>%   r3dmol::m_set_style(sel = r3dmol::m_sel(resi = color_positions),             style = r3dmol::m_style_cartoon(color = \"aquamarine\")) HRaDeX::plot_k_distance(two_states) #> Warning: Removed 4 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://hadexversum.github.io/HRaDeX/articles/example.html","id":"availability","dir":"Articles","previous_headings":"","what":"Availability","title":"Experimental example","text":"HaDeX available web-server, R package, standalone software. first version already published second version advanced state - HaDeX2. HRaDeX compaHRaDeX use code HRaDeX R package. HRaDeX application available , open source code. compaHRaDeX available , well application source code.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"hradex","dir":"Articles","previous_headings":"","what":"HRaDeX","title":"How to use the apps?","text":"HRaDeX GUI application classification process one biological state time. workflow described dedicated article. explain elements GUI, regard every parameter.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"input-file","dir":"Articles","previous_headings":"HRaDeX > Settings","what":"Input file","title":"How to use the apps?","text":"required experimental file cluster file DynamX 3.0 2.0. future options available, currently one supported. message upload result. none provided user, loaded example file. analysis initiated clicking “Calculate things!” button.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"select-state","dir":"Articles","previous_headings":"HRaDeX > Settings > Uptake calculations","what":"Select state","title":"How to use the apps?","text":"one state supplied data file, possibility select one. classification process done one state time. state reselected, process initiated button, previous results overwritten.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"omit-residues","dir":"Articles","previous_headings":"HRaDeX > Settings > Uptake calculations","what":"Omit residues","title":"How to use the apps?","text":"first residue known undergo fast back-exchange, cause measured mass increase, described literature 1, 2. offer possibility either omit first residue (first two) - depending user’s approach matter.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"use-replicate-data","dir":"Articles","previous_headings":"HRaDeX > Settings > Uptake calculations","what":"Use replicate data","title":"How to use the apps?","text":"data required format - cluster format, contains unaggregated centroid values spectrum - every charge value peptides every technical replicate. use replicate data option allows use data aggregated replicate level, . Using option, many measurement points time point replicates. Without option, one measurement point time point.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"sequence-from-the-data","dir":"Articles","previous_headings":"HRaDeX > Settings > Sequence","what":"Sequence from the data","title":"How to use the apps?","text":"sequence reconstructed based experimental data.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"sequence-from-the-pdb-file","dir":"Articles","previous_headings":"HRaDeX > Settings > Sequence","what":"Sequence from the pdb file","title":"How to use the apps?","text":"sequence read pdb file.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"move-the-start-of-the-sequence","dir":"Articles","previous_headings":"HRaDeX > Settings > Sequence","what":"Move the start of the sequence","title":"How to use the apps?","text":"sequence experimental file different one pdb file, can shift position peptides experimental data. shift value can positivie - ‘data’ information beggining sequence. shift value set negative number, data shifted cut. peptides start position left shift, disregarded “cut” peptide.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"non-deuterated-control","dir":"Articles","previous_headings":"HRaDeX > Settings > Deuterium uptake controls","what":"Non-deuterated control","title":"How to use the apps?","text":"time point measurement associated non-deuterated sample.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"full-deuterated-control","dir":"Articles","previous_headings":"HRaDeX > Settings > Deuterium uptake controls","what":"Full deuterated control","title":"How to use the apps?","text":"time point measurement associated fully deuterated sample.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"use-as-fd","dir":"Articles","previous_headings":"HRaDeX > Settings > Deuterium uptake controls","what":"Use as FD","title":"How to use the apps?","text":"least two approaches fully deuterated sample: 1) measurement done conditions measurement time points, case time exchange long, commonly 24h. measurement different time points, shown plot (value 100% using fractional values). 2) sample obtained different experiment measurements, treated measurement . shown uptake plot used normalization value. Checking box equivalent approach . 2.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"fractional-values","dir":"Articles","previous_headings":"HRaDeX > Settings > Deuterium uptake controls","what":"Fractional values","title":"How to use the apps?","text":"Fractional values normalized regard full deuterated sample, shown percentaged. chosen, values daltons, requirement sum n equal 1, valid.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"select-workflow","dir":"Articles","previous_headings":"HRaDeX > Settings > Workflow","what":"Select workflow","title":"How to use the apps?","text":"multiple choices workflow type. advise using 3exp/2exp/1exp - case try three models select best. data set contains sufficient time point number perform 2-exponent fitting, workflow 2exp/1exp selected avoid unnecessary calculations. detailed description fitted functions workflow description article.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"limits-and-boundaries","dir":"Articles","previous_headings":"HRaDeX > Settings > Class definition","what":"Limits and boundaries","title":"How to use the apps?","text":"table contains upper lower limits exchange group, initial values. plot table shows graphical representation values - color represents possible values based limits, solid lines represents initial values. plotted values D = 1 - exp(-kt), k fitted exchange rate.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"reset-the-values","dir":"Articles","previous_headings":"HRaDeX > Settings > Class definition","what":"Reset the values","title":"How to use the apps?","text":"Clicking button resets values table default values.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"number-of-iterations","dir":"Articles","previous_headings":"HRaDeX > Settings > Fit options","what":"Number of iterations","title":"How to use the apps?","text":"Maximal number performed iterations fitting process.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"method","dir":"Articles","previous_headings":"HRaDeX > Settings > Fit options","what":"Method","title":"How to use the apps?","text":"Used method Levenberg-Marquardt nonlinear least squares algorithm. information check used package documentation.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"structure","dir":"Articles","previous_headings":"HRaDeX > Settings","what":"Structure","title":"How to use the apps?","text":"possible, place upload PDB file 3D structure analysed protein. high-resolution classification results can presented given structure. required order perform classification process.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"overview","dir":"Articles","previous_headings":"HRaDeX > Tabs","what":"Overview","title":"How to use the apps?","text":"summary classification process. Classification results peptides aggregated residue level using selected method aggregation. information check article. results presented linear form. PDB file supplied, results presented 3D structure available tab Structure.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"hires-params","dir":"Articles","previous_headings":"HRaDeX > Tabs","what":"Hires params","title":"How to use the apps?","text":"numerical data presented first plot Overview tab. classification colors presented position column.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"fit-params","dir":"Articles","previous_headings":"HRaDeX > Tabs","what":"Fit params","title":"How to use the apps?","text":"table contains parameters fitted function peptides - based uptake curves. Upon clicking row selected peptide, scaled uptake curve fitted model presented table, alongside regular uptake curve.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"plots","dir":"Articles","previous_headings":"HRaDeX > Tabs","what":"Plots","title":"How to use the apps?","text":"tab uptake plots peptides presented one one. particularly useful getting sense accuracy fitting process general overview method. may take displayed, depending number peptides supplied data file.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"plots-data","dir":"Articles","previous_headings":"HRaDeX > Tabs","what":"Plots Data","title":"How to use the apps?","text":"table contains numerical data used plotting uptake curves - experimental data! parameters fitted functions found Fit params tab.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"structure-1","dir":"Articles","previous_headings":"HRaDeX > Tabs","what":"Structure","title":"How to use the apps?","text":"file provided, high-resolution classification results can presented 3D protein structure.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"about","dir":"Articles","previous_headings":"HRaDeX > Tabs","what":"About","title":"How to use the apps?","text":"Basic information teamt developed HRaDeX.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"compahradex","dir":"Articles","previous_headings":"","what":"compaHRaDeX","title":"How to use the apps?","text":"compaHRaDeX GUI application comparison results classification process (performed HRaDeX) two biological states time.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/gui_guide.html","id":"input-files","dir":"Articles","previous_headings":"compaHRaDeX > Settings","what":"Input files","title":"How to use the apps?","text":"processed two biological states using HRaDeX, need comparative analysis. necessary perform one? fit_data_.csv uc_data_.csv first state fit_data_.csv uc_data_.csv second state PDB file structure protein. fit_data_.csv found Fit params tab HRaDeX, uc_data_.csv UC Data tab. course, can perform comparative analysis providing desired files, features available.","code":""},{"path":[]},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Workflow description","text":"baseline HDX-MS method investigation exchange hydrogen protein structure deuterium buffer protein suspended. difference mass hydrogen deuterium close 1 Da, can identify mass uptake number exchanged hydrogens. Multiple time measurements allow us see exchange time create exchange curve process measured identified peptide (bottom-approach). main challenge HDX-MS data analysis interpretation. Although different methods analysis focus numerical values, may difficult interpret, wanted propose classification method simplify communication results. Moreover, avoiding data transformation, instead, propose class label perfectly known valid experimental curves.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"classification-method","dir":"Articles","previous_headings":"","what":"Classification method","title":"Workflow description","text":"method aims assign peptide specific combination exchange classes, consistent experimental results. allows us distinguish areas different exchange patterns protein sequence, describe exchange process . class assignment final step classification process, based literature description hydrogen-deuterium phenomenon. process several steps, multiple workflow decisions experimenter’s control. figure x, examples experimental curves presented. Although easy discriminate extreme cases (described defined section x) - immediate exchange (red) none-exchange (black), need classification method provide information remaining curves (grey). problem classification mainly focused . Future plans: classification subfragments overlapping peptides.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"obtaining-the-uptake-curve","dir":"Articles","previous_headings":"Classification method","what":"Obtaining the uptake curve","title":"Workflow description","text":"experimental data csv file processed aggregated. Firstly, deuterium uptake curve prepared. function deuterium uptake time, values defined : Dt=mt−m0     D_t = m_t - m_0 DtD_t deuterium uptake time tt daltons, mtm_t mass peptide measured time tt m0m_0 mass undeuterated peptide. , uptake curve normalized. values scaled according assumption, last time point measurement supplied fully deuterated control (difference explained ) maximal experimental deuterium uptake 100% deuterium uptake. can calculated two ways: Dt,sc=DtD100=mt−m0m100−m0     D_{t, sc} = \\frac{D_t}{D_{100}} = \\frac{m_t - m_0}{m_{100} - m_0} form uptake curve used fitting process. , can operate using percentages populations (denoted nin_i, fraction exchangeable hydrogens) undergoing different exchange patterns, disregard back-exchange problem . Comment difference treating last time point measurement fully deuterated (FD) control additionally prepared fully deuteration control. first option chosen, last time point measurement measuremnt ia assigned value 100% deuterium uptake measurement point taking part fitting process. additional fully deuterated control chosen, measurement values scaled respect , FD value assigned time point, taking part fitting process, real measurement time points.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"extreme-case-recognition","dir":"Articles","previous_headings":"Classification method","what":"Extreme case recognition","title":"Workflow description","text":"Firstly, recognize extreme cases uptake curve, assigned class name without fitting process. peptide labeled none exchange, fulfill defined requirements: uptake level [Da] last time point measurement (D100D_{100}) lower 1 Da, thoretical deuterium uptake last time point measurement (scaled respect maximal possible uptake calculated sequence) lower 10%. interpret case lack observable exchange course experiment, indicate black color visualization. peptide disqualified fitting process labeled invalid lack sufficient number time points. crucial peptide valid measurements t0t_0 t100t_100, otherwise prevents normalization values causes falsyfication data. missing one two time points measurement (apart controls) causes use two- one- component model, prevent fitting process. fitting process conducted uptake curves classified extreme cases (exchange invalid).","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"exchange-class-definition","dir":"Articles","previous_headings":"Classification method","what":"Exchange class definition","title":"Workflow description","text":"Following literature - especially cornerstone studies modeling hydrogen-deuterium exchange, pioneering article Zhang Smith , expect process deuterium exchange peptide described three-component equation x}: D=n1⋅(1−exp(−k1⋅t))+n2⋅(1−exp(−k2⋅t))+n3⋅(1−exp(−k3⋅t)) D = n_1 \\cdot (1 - exp(-k_1 \\cdot t)) + n_2 \\cdot (1-exp(-k_2 \\cdot t)) + n_3 \\cdot (1 - exp(-k_3 \\cdot t))   nin_i indicates population -th group kik_i exchange rate -th group. Moreover, assume: n1n_1, k1k_1 - fast exchange (red) n2n_2, k2k_2 - medium exchange (green) n3n_3, k3k_3 - slow exchange (blue) Ideally, n1+n2+n3=1n_1 + n_2 + n_3 = 1. equation, six unknown parameters need found. Unfortunately, authors paper provide boundaries exchange group. ranges proposed us, according experience, can found table x. ranges exchange rates can changed desired. However, recommend avoiding situations certain range covered two classes, may lead misclassification. Zhang & Smith equation describes theoretical situation, may occur every experiment. Thus, prepared different workflows modifications (described later ), three-component equation desired starting point.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"workflow-selection","dir":"Articles","previous_headings":"Classification method","what":"Workflow selection","title":"Workflow description","text":"multiple workflows prepared. strongly advise using first one, understand specificity experiment leave final decision user, trusting motives. Available workflows: 3exp/1exp - start fitting process looking best fit using function x ranges specified table x}. peptides unsatisfactory results, look one component function (described ). selection better results made comparing R2R^2 values. 2exp/1exp - starting point two-component function (described ), one-component function. decision process previous point. 3exp/2exp/1exp - variants fitting process prepared best chosen based BICBIC value.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"exp-fit","dir":"Articles","previous_headings":"Classification method > Workflow selection","what":"3exp fit","title":"Workflow description","text":"fitting function described Zhang & Smith equation x, initial values: n1=n2=n3=0.33n_1 = n_2 = n_3 = 0.33 k1=1k_1 = 1 k2=0.1k_2 = 0.1 k3=0.01k_3 = 0.01 boundaries values described table x. number unknown parameters 6.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"exp-fit-1","dir":"Articles","previous_headings":"Classification method > Workflow selection","what":"2exp fit","title":"Workflow description","text":"two-component fitting function, described follows: D=na⋅(1−exp(−ka⋅t))+nb⋅(1−exp(−kb⋅t)) D = n_a \\cdot (1 - exp(-k_a \\cdot t)) + n_b \\cdot (1-exp(-k_b \\cdot t)) aa bb two three exchange groups defined Zhang & Smith equation. perform three fitting processes (group combination) select best result comparing R2R^2 value. means look fit using k1k_1 k2k_2, k2k_2 k3k_3, k1k_1 k3k_3 select one answer. initial value nan_a nbn_b 0.5. initial values kk analogical cases three-component equation (see section x). case, assume nan_a hydrogen particles undergoing exchange kak_a exchange rate, nbn_b exchange rate kbk_b. number unknown parameters 4.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"exp-fit-2","dir":"Articles","previous_headings":"Classification method > Workflow selection","what":"1exp fit","title":"Workflow description","text":"fitting function described follows: D=n⋅(1−exp(−k⋅t)) D = n \\cdot (1 - exp(-k \\cdot t)) case, assume hydrogen particles peptide undergoing exchange similar way. Ideally n∼1n \\sim 1. initial values fit: n=1n = 1 k=1k = 1 upper boundary kk = upper boundary k1k_1 lower boundary kk = lower boundary k3k_3 number unknown parameters 2.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"fitting-parameters","dir":"Articles","previous_headings":"Classification method > Workflow selection","what":"Fitting parameters","title":"Workflow description","text":"fit curve use nonlinear least square method. information, see documentation used R package. Recommended parameters (possible change): max iteration: 100, algorithm: Levenberg-Marquardt.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"results-of-the-fitting-process","dir":"Articles","previous_headings":"Classification method","what":"Results of the fitting process","title":"Workflow description","text":"TODO: n, k, rgb, interpretation","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"calculation-of-estimed-exchange-rate-k","dir":"Articles","previous_headings":"Classification method","what":"Calculation of estimed exchange rate k","title":"Workflow description","text":"working normalized values value nin_i within limits (0, 1), whe can treat somehow probability getting kik_i. , can caluclate estimate k value, aggrgating fit parameters one value: kexp=∑ini⋅ki k_{exp} = \\sum^n_i \\cdot k_i","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"high-resolution-results","dir":"Articles","previous_headings":"Classification method","what":"High resolution results","title":"Workflow description","text":"classification performed uptake curves peptide, need aggrgation obtain high resolution results. Currently, HRaDeX allows use two methods.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"selection-of-the-shortest-peptide-","dir":"Articles","previous_headings":"Classification method > High resolution results","what":"Selection of the shortest peptide.","title":"Workflow description","text":"residue subset peptides covering said residue. set, shortest peptide chosen determinant resiude, represantative.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"aggregation-of-values","dir":"Articles","previous_headings":"Classification method > High resolution results","what":"Aggregation of values","title":"Workflow description","text":"Aggregation values inspired article Keppler Weis (doi: 10.1007/s13361-014-1033-6), small changes: ommition first residue done different step demanded user. aggregation values done subset already filtered data. residue subset peptides covering said residue. , final ni,aggn_{, agg} calculated subset nin_i, weights inverse proportional max uptake peptide (muimu_i) - shortest peptide highest possibility uptake took place said residue: wi=1mui∑i1mui w_i = \\frac{\\frac{1}{mu_i}}{\\sum^\\frac{1}{mu_i}} , nin_i% weighted average set nin_i. ni,agg=∑iwi⋅ni∑iwi n_{, agg} = \\frac{\\sum^w_i \\cdot n_i}{\\sum^w_i}  possibility ni,aggn_{, agg} obtained way exceeds limit 1. , normalize values, get sense proportionality. ni,agg.scaled=ni,agg∑ini,agg n_{, agg.scaled} = \\frac{n_{, agg}}{\\sum^n_{, agg}} way, right values obtain RGB color value. estimated k values calculated analogically.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/articles/workflow.html","id":"workflow-schema","dir":"Articles","previous_headings":"","what":"Workflow schema","title":"Workflow description","text":"Figure x presents diagram classifying one peptide one biological state, based uptake curve. process can repeated peptide data file access information set peptides protein.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Weronika Puchala. Maintainer, author. Michal Burdukiewicz. Author.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Puchala W, Burdukiewicz M (2024). HRaDeX: Uptake classification HDXMS. R package version 0.5, https://hadexversum.github.io/HRaDeX/.","code":"@Manual{,   title = {HRaDeX: Uptake classification for HDXMS},   author = {Weronika Puchala and Michal Burdukiewicz},   year = {2024},   note = {R package version 0.5},   url = {https://hadexversum.github.io/HRaDeX/}, }"},{"path":"https://hadexversum.github.io/HRaDeX/index.html","id":"hadexversum","dir":"","previous_headings":"","what":"Uptake classification for HDXMS","title":"Uptake classification for HDXMS","text":"HRaDeX part tool family analysing HDX-MS data, HaDeXversum. developed Mass Spectrometry Lab Institute Biophysics Biochemistry, Polish Acadamy Sciences. HRaDeX package classification process peptide-level uptake curves. HRaDeX covers computational processes, two GUIs functionalities. HRaDeXGUI app allows one-state classification process. compaHRaDeX app comparative analysis classification results two biological states, conducted separately using HRaDeXGUI. applications available use online: HRaDeX compaHRaDeX. project currently development. information pepitde-level analysis, see documentation HaDeX. detailed explanation classification workflow works see article. visualization results, see article. documentation available .","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_recovered_uc_rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rmse of recovered deuterium uptake — calculate_recovered_uc_rmse","title":"Calculate rmse of recovered deuterium uptake — calculate_recovered_uc_rmse","text":"Function calculates RMSE recovered deuterium uptake high-resolution parameters regard experimental deuterium uptake measured time points.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_recovered_uc_rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rmse of recovered deuterium uptake — calculate_recovered_uc_rmse","text":"","code":"calculate_recovered_uc_rmse(rec_uc_dat, sort = c(\"ID\", \"rmse\"))"},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_recovered_uc_rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rmse of recovered deuterium uptake — calculate_recovered_uc_rmse","text":"rec_uc_dat recovered deuterium uptake data, produced create_uc_from_hires_dataset function sort sorting parameter","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_recovered_uc_rmse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate rmse of recovered deuterium uptake — calculate_recovered_uc_rmse","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat, state = \"Alpha_KSCN\") fit_values_all <- create_fit_dataset(kin_dat, control = get_example_control(),                                      fit_k_params = get_example_fit_k_params(),                                      fractional = T) rec_uc_dat <- create_uc_from_hires_dataset(kin_dat,                                        fit_values_all,                                        hires_method = \"shortest\") calculate_recovered_uc_rmse(rec_uc_dat, sort = \"rmse\") #> Error in desc(rmse): could not find function \"desc\""},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_replicate_state_uptake.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculcate uptake — calculate_replicate_state_uptake","title":"Calculcate uptake — calculate_replicate_state_uptake","text":"Function calculates deuterim uptake one biological state, replicates, without additional aggregation data.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_replicate_state_uptake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculcate uptake — calculate_replicate_state_uptake","text":"","code":"calculate_replicate_state_uptake(   rep_peptide_dat,   state = dat[[\"State\"]][1],   time_0 = min(dat[[\"Exposure\"]]),   time_100 = max(dat[[\"Exposure\"]]) )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_replicate_state_uptake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculcate uptake — calculate_replicate_state_uptake","text":"rep_peptide_dat data experimental file, aggregated within technical replicates state biological state time_0 minimal exchange control time point time_100 maximal exchange control time point","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_replicate_state_uptake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculcate uptake — calculate_replicate_state_uptake","text":"data.frame object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_replicate_state_uptake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculcate uptake — calculate_replicate_state_uptake","text":"","code":"rep_peptide_dat <- ... #> Error in eval(expr, envir, enclos): '...' used in an incorrect context calculate_replicate_state_uptake(rep_peptide_dat) #> Error in eval(expr, envir, enclos): object 'rep_peptide_dat' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_uc_from_hires_peptide.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovers deuterium uptake from hi-res parameters — calculate_uc_from_hires_peptide","title":"Recovers deuterium uptake from hi-res parameters — calculate_uc_from_hires_peptide","text":"function recovers fractional deuterium uptake high-resolution level back peptide level. First, values aggregated high-resolution level using selected aggregation method.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_uc_from_hires_peptide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovers deuterium uptake from hi-res parameters — calculate_uc_from_hires_peptide","text":"","code":"calculate_uc_from_hires_peptide(   fit_dat,   fit_values_all,   fractional = T,   hires_method = c(\"shortest\", \"weighted\") )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/calculate_uc_from_hires_peptide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovers deuterium uptake from hi-res parameters — calculate_uc_from_hires_peptide","text":"fit_dat uptake data filtered given peptide fit_values_all fit parameters whole peptide pool, unaggregated fractional indicator fractional values used hires_method method aggregation","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/compare_aggregation_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare aggregation methods — compare_aggregation_methods","title":"Compare aggregation methods — compare_aggregation_methods","text":"function plots analogical plots plot_recovered_uc_coverage two aggregation methods time. TODO: rewrite optimization purposes.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/compare_aggregation_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare aggregation methods — compare_aggregation_methods","text":"","code":"compare_aggregation_methods(   kin_dat,   fit_values_all,   style = c(\"coverage\", \"butterfly\") )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/compare_aggregation_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare aggregation methods — compare_aggregation_methods","text":"kin_dat uptake data whole peptide pool fit_values_all fit parameters whole peptide pool, unaggregated style plotting style","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/compare_aggregation_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare aggregation methods — compare_aggregation_methods","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat, state = \"Alpha_KSCN\") fit_values_all <- create_fit_dataset(kin_dat, control = get_example_control(),                                      fit_k_params = get_example_fit_k_params(),                                      fractional = T) compare_aggregation_methods(kin_dat, fit_values_all, style = \"coverage\") #> Error in scale_linetype(\"\"): could not find function \"scale_linetype\" compare_aggregation_methods(kin_dat, fit_values_all, style = \"butterfly\")"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_fit_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create fits for all the peptides — create_fit_dataset","title":"Create fits for all the peptides — create_fit_dataset","text":"wrapper function get_fit_results, multiple peptides time. First, creates peptide list supplied deuterium uptake data, calls fitting function , create full dataset.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_fit_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create fits for all the peptides — create_fit_dataset","text":"","code":"create_fit_dataset(   kin_dat,   fit_k_params,   control = list(maxiter = 1000, scale = \"levenberg\"),   trace = F,   fractional = F,   workflow = 321 )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_fit_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create fits for all the peptides — create_fit_dataset","text":"kin_dat ... fit_k_params ... control ... trace ... fractional ... workflow ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_fit_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create fits for all the peptides — create_fit_dataset","text":"data.frame object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_fit_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create fits for all the peptides — create_fit_dataset","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) fit_k_params <- get_example_fit_k_params() head(create_fit_dataset(kin_dat, fit_k_params)) #>   id   Protein       State    sequence start end max_uptake       n_1      k_1 #> 1  1 db_eEF1Ba ALPHA_Gamma GFGDLKSPAGL     1  11          9 2.5918362 5.870020 #> 2  2 db_eEF1Ba ALPHA_Gamma  FGDLKSPAGL     2  11          8 2.6495960 7.234888 #> 3  3 db_eEF1Ba ALPHA_Gamma   GDLKSPAGL     3  11          7 2.7013593 7.507887 #> 4  4 db_eEF1Ba ALPHA_Gamma      LKSPAG     5  10          4 1.3953257 6.717443 #> 5  5 db_eEF1Ba ALPHA_Gamma     LKSPAGL     5  11          5 1.5263186 6.866652 #> 6  6 db_eEF1Ba ALPHA_Gamma      AGLQVL     9  14          5 0.3919301 2.603586 #>        n_2       k_2      n_3          k_3          rss        bic class_name #> 1 1.747477 0.1471729 1.093423 0.0178303882 1.972152e-31 -405.38705         NA #> 2 1.671734 0.4732856 0.000000 0.0000000000 8.022972e-03  -13.71718         NA #> 3 1.805400 0.4905359 0.000000 0.0000000000 2.168912e-03  -21.56567         NA #> 4 1.356225 0.4680721 0.000000 0.0000000000 1.133739e-03  -25.45790         NA #> 5 1.585653 0.4754323 0.000000 0.0000000000 1.075759e-03  -25.77287         NA #> 6 2.271788 0.2740198 5.000000 0.0001269509 5.257664e-03  -12.66939         NA #>       k_est fitted   color #> 1 2.8513818      3 #7A5233 #> 2 4.6191186      2 #9C6300 #> 3 4.6967479      2 #996600 #> 4 3.6371609      2 #817E00 #> 5 3.6101125      2 #7D8200 #> 6 0.2144616      3 #0D4CA6"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_replicate_state_uptake_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates deuterium uptake replicate dataset — create_replicate_state_uptake_dataset","title":"Creates deuterium uptake replicate dataset — create_replicate_state_uptake_dataset","text":"Wrapper calculate_replicate_state_uptake, interating throught peptides provided data.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_replicate_state_uptake_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates deuterium uptake replicate dataset — create_replicate_state_uptake_dataset","text":"","code":"create_replicate_state_uptake_dataset(   rep_dat,   state = dat[[\"State\"]][1],   time_0 = min(dat[[\"Exposure\"]]),   time_100 = max(dat[[\"Exposure\"]]) )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_replicate_state_uptake_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates deuterium uptake replicate dataset — create_replicate_state_uptake_dataset","text":"rep_dat data state biological state time_0 minimal exchange control time point time_100 maximal exchange control time point","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_replicate_state_uptake_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates deuterium uptake replicate dataset — create_replicate_state_uptake_dataset","text":"data.frame object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_replicate_state_uptake_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates deuterium uptake replicate dataset — create_replicate_state_uptake_dataset","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_two_state_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates dataset with merged hires parameters for two states. — create_two_state_dataset","title":"Creates dataset with merged hires parameters for two states. — create_two_state_dataset","text":"function merges hires parameters two biological states, provided position values. also calculates color distance estimed k diffrence position. function part comparative feature.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_two_state_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates dataset with merged hires parameters for two states. — create_two_state_dataset","text":"","code":"create_two_state_dataset(hires_params_1, hires_params_2)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_two_state_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates dataset with merged hires parameters for two states. — create_two_state_dataset","text":"hires_params_1 data.frame hires parameters first state hires_params_2 data.frame hires parameters second state","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_two_state_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates dataset with merged hires parameters for two states. — create_two_state_dataset","text":"data.frame plotting functions","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_two_state_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates dataset with merged hires parameters for two states. — create_two_state_dataset","text":"","code":"fit_k_params <- get_example_fit_k_params() control <- get_example_control() kin_dat <- prepare_kin_dat(alpha_dat) fit_values <- create_fit_dataset(kin_dat, fit_k_params, control) hires_params <- calculate_hires(fit_values) #> Error in if (method == \"shortest\") {    hires_params_ <- lapply(seq(1:protein_length), function(pos) {        if (fractional) {            tmp_params <- fit_values %>% filter(start <= pos &                 pos <= end & n_1 + n_2 + n_3 < 1.25)        }        else {            tmp_params <- fit_values %>% filter(start <= pos &                 pos <= end & n_1 + n_2 + n_3 - max_uptake <=                 0)        }        tmp_params <- tmp_params %>% arrange(nchar(sequence),             class_name) %>% .[1, ]        if (nrow(tmp_params) == 0) {            data.frame(Protein = Protein, State = State, position = pos,                 n_1 = NA, k_1 = NA, n_2 = NA, k_2 = NA, n_3 = NA,                 k_3 = NA, k_est = NA, class_name = NA, color = NA)        }        else {            data.frame(Protein = Protein, State = State, position = pos,                 n_1 = tmp_params[[\"n_1\"]], k_1 = tmp_params[[\"k_1\"]],                 n_2 = tmp_params[[\"n_2\"]], k_2 = tmp_params[[\"k_2\"]],                 n_3 = tmp_params[[\"n_3\"]], k_3 = tmp_params[[\"k_3\"]],                 k_est = tmp_params[[\"k_est\"]], class_name = tmp_params[[\"class_name\"]],                 color = tmp_params[[\"color\"]])        }    }) %>% bind_rows()}: the condition has length > 1 # same for the second state, and then: # create_two_state_dataset(hires_params, hires_params_2)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_distance_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates dataset with uc distances — create_uc_distance_dataset","title":"Creates dataset with uc distances — create_uc_distance_dataset","text":"function iterates common list peptides two states, based position sequence. pair peptide data, uc distance calculated. method uc distance calucation described vigniette TODO.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_distance_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates dataset with uc distances — create_uc_distance_dataset","text":"","code":"create_uc_distance_dataset(kin_dat_1, kin_dat_2)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_distance_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates dataset with uc distances — create_uc_distance_dataset","text":"kin_dat_1 kinetic data first state kin_dat_2 kinetic data second state","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_distance_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates dataset with uc distances — create_uc_distance_dataset","text":"data.frame plotting functions","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_distance_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates dataset with uc distances — create_uc_distance_dataset","text":"","code":"kin_dat_1 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[1]) kin_dat_2 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[2]) uc_dist_dataset <- create_uc_distance_dataset(kin_dat_1, kin_dat_2) head(uc_dist_dataset) #> # A tibble: 6 × 8 #> # Groups:   MaxUptake, Start [6] #>   MaxUptake Start   End frac_uptake_diff uptake_diff frac_uptake_dist #>       <dbl> <dbl> <dbl>            <dbl>       <dbl>            <dbl> #> 1         9     1    11             74.1       138.              4.23 #> 2         8     2    11             43.4        86.8             3.22 #> 3         7     3    11             34.8        59.6             2.76 #> 4         4     5    10            726.       4834.              3.45 #> 5         5     5    11             24.3        26.2             3.16 #> 6         5     9    14             44.4        58.4             3.67 #> # ℹ 2 more variables: uptake_dist <dbl>, Sequence <chr>"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_from_hires_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates recovered deuterium uptake dataset — create_uc_from_hires_dataset","title":"Creates recovered deuterium uptake dataset — create_uc_from_hires_dataset","text":"Wrapper calculate_uc_from_hires_peptide create data whole pepitde pool.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_from_hires_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates recovered deuterium uptake dataset — create_uc_from_hires_dataset","text":"","code":"create_uc_from_hires_dataset(   kin_dat,   fit_values_all,   fractional = T,   hires_method = c(\"shortest\", \"weighted\") )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_from_hires_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates recovered deuterium uptake dataset — create_uc_from_hires_dataset","text":"kin_dat uptake data whole peptide pool fit_values_all fit parameters whole peptide pool, unaggregated fractional indicator fractional values used hires_method method aggregation","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/create_uc_from_hires_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates recovered deuterium uptake dataset — create_uc_from_hires_dataset","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat, state = \"Alpha_KSCN\") fit_values_all <- create_fit_dataset(kin_dat, control = get_example_control(),                                      fit_k_params = get_example_fit_k_params(),                                      fractional = T) create_uc_from_hires_dataset(kin_dat, fit_values_all, hires_method = \"shortest\") #>      ID   Protein      State                     Sequence Start End MaxUptake #> 1     1 db_eEF1Ba Alpha_KSCN                  GFGDLKSPAGL     1  11         9 #> 2     1 db_eEF1Ba Alpha_KSCN                  GFGDLKSPAGL     1  11         9 #> 3     1 db_eEF1Ba Alpha_KSCN                  GFGDLKSPAGL     1  11         9 #> 4     1 db_eEF1Ba Alpha_KSCN                  GFGDLKSPAGL     1  11         9 #> 5     1 db_eEF1Ba Alpha_KSCN                  GFGDLKSPAGL     1  11         9 #> 6     1 db_eEF1Ba Alpha_KSCN                  GFGDLKSPAGL     1  11         9 #> 7     2 db_eEF1Ba Alpha_KSCN                   FGDLKSPAGL     2  11         8 #> 8     2 db_eEF1Ba Alpha_KSCN                   FGDLKSPAGL     2  11         8 #> 9     2 db_eEF1Ba Alpha_KSCN                   FGDLKSPAGL     2  11         8 #> 10    2 db_eEF1Ba Alpha_KSCN                   FGDLKSPAGL     2  11         8 #> 11    2 db_eEF1Ba Alpha_KSCN                   FGDLKSPAGL     2  11         8 #> 12    2 db_eEF1Ba Alpha_KSCN                   FGDLKSPAGL     2  11         8 #> 13    3 db_eEF1Ba Alpha_KSCN                    GDLKSPAGL     3  11         7 #> 14    3 db_eEF1Ba Alpha_KSCN                    GDLKSPAGL     3  11         7 #> 15    3 db_eEF1Ba Alpha_KSCN                    GDLKSPAGL     3  11         7 #> 16    3 db_eEF1Ba Alpha_KSCN                    GDLKSPAGL     3  11         7 #> 17    3 db_eEF1Ba Alpha_KSCN                    GDLKSPAGL     3  11         7 #> 18    3 db_eEF1Ba Alpha_KSCN                    GDLKSPAGL     3  11         7 #> 19    4 db_eEF1Ba Alpha_KSCN                       LKSPAG     5  10         4 #> 20    4 db_eEF1Ba Alpha_KSCN                       LKSPAG     5  10         4 #> 21    4 db_eEF1Ba Alpha_KSCN                       LKSPAG     5  10         4 #> 22    4 db_eEF1Ba Alpha_KSCN                       LKSPAG     5  10         4 #> 23    4 db_eEF1Ba Alpha_KSCN                       LKSPAG     5  10         4 #> 24    4 db_eEF1Ba Alpha_KSCN                       LKSPAG     5  10         4 #> 25    5 db_eEF1Ba Alpha_KSCN                      LKSPAGL     5  11         5 #> 26    5 db_eEF1Ba Alpha_KSCN                      LKSPAGL     5  11         5 #> 27    5 db_eEF1Ba Alpha_KSCN                      LKSPAGL     5  11         5 #> 28    5 db_eEF1Ba Alpha_KSCN                      LKSPAGL     5  11         5 #> 29    5 db_eEF1Ba Alpha_KSCN                      LKSPAGL     5  11         5 #> 30    5 db_eEF1Ba Alpha_KSCN                      LKSPAGL     5  11         5 #> 31    6 db_eEF1Ba Alpha_KSCN                       AGLQVL     9  14         5 #> 32    6 db_eEF1Ba Alpha_KSCN                       AGLQVL     9  14         5 #> 33    6 db_eEF1Ba Alpha_KSCN                       AGLQVL     9  14         5 #> 34    6 db_eEF1Ba Alpha_KSCN                       AGLQVL     9  14         5 #> 35    6 db_eEF1Ba Alpha_KSCN                       AGLQVL     9  14         5 #> 36    6 db_eEF1Ba Alpha_KSCN                       AGLQVL     9  14         5 #> 37    7 db_eEF1Ba Alpha_KSCN                        QVLND    12  16         4 #> 38    7 db_eEF1Ba Alpha_KSCN                        QVLND    12  16         4 #> 39    7 db_eEF1Ba Alpha_KSCN                        QVLND    12  16         4 #> 40    7 db_eEF1Ba Alpha_KSCN                        QVLND    12  16         4 #> 41    7 db_eEF1Ba Alpha_KSCN                        QVLND    12  16         4 #> 42    7 db_eEF1Ba Alpha_KSCN                        QVLND    12  16         4 #> 43    8 db_eEF1Ba Alpha_KSCN                       QVLNDY    12  17         5 #> 44    8 db_eEF1Ba Alpha_KSCN                       QVLNDY    12  17         5 #> 45    8 db_eEF1Ba Alpha_KSCN                       QVLNDY    12  17         5 #> 46    8 db_eEF1Ba Alpha_KSCN                       QVLNDY    12  17         5 #> 47    8 db_eEF1Ba Alpha_KSCN                       QVLNDY    12  17         5 #> 48    8 db_eEF1Ba Alpha_KSCN                       QVLNDY    12  17         5 #> 49    9 db_eEF1Ba Alpha_KSCN                       NDYLAD    15  20         5 #> 50    9 db_eEF1Ba Alpha_KSCN                       NDYLAD    15  20         5 #> 51    9 db_eEF1Ba Alpha_KSCN                       NDYLAD    15  20         5 #> 52    9 db_eEF1Ba Alpha_KSCN                       NDYLAD    15  20         5 #> 53    9 db_eEF1Ba Alpha_KSCN                       NDYLAD    15  20         5 #> 54    9 db_eEF1Ba Alpha_KSCN                       NDYLAD    15  20         5 #> 55   10 db_eEF1Ba Alpha_KSCN                      NDYLADK    15  21         6 #> 56   10 db_eEF1Ba Alpha_KSCN                      NDYLADK    15  21         6 #> 57   10 db_eEF1Ba Alpha_KSCN                      NDYLADK    15  21         6 #> 58   10 db_eEF1Ba Alpha_KSCN                      NDYLADK    15  21         6 #> 59   10 db_eEF1Ba Alpha_KSCN                      NDYLADK    15  21         6 #> 60   10 db_eEF1Ba Alpha_KSCN                      NDYLADK    15  21         6 #> 61   11 db_eEF1Ba Alpha_KSCN                       YLADKS    17  22         5 #> 62   11 db_eEF1Ba Alpha_KSCN                       YLADKS    17  22         5 #> 63   11 db_eEF1Ba Alpha_KSCN                       YLADKS    17  22         5 #> 64   11 db_eEF1Ba Alpha_KSCN                       YLADKS    17  22         5 #> 65   11 db_eEF1Ba Alpha_KSCN                       YLADKS    17  22         5 #> 66   11 db_eEF1Ba Alpha_KSCN                       YLADKS    17  22         5 #> 67   12 db_eEF1Ba Alpha_KSCN                      YLADKSY    17  23         6 #> 68   12 db_eEF1Ba Alpha_KSCN                      YLADKSY    17  23         6 #> 69   12 db_eEF1Ba Alpha_KSCN                      YLADKSY    17  23         6 #> 70   12 db_eEF1Ba Alpha_KSCN                      YLADKSY    17  23         6 #> 71   12 db_eEF1Ba Alpha_KSCN                      YLADKSY    17  23         6 #> 72   12 db_eEF1Ba Alpha_KSCN                      YLADKSY    17  23         6 #> 73   13 db_eEF1Ba Alpha_KSCN            YLADKSYIEGYVPSQAD    17  33        15 #> 74   13 db_eEF1Ba Alpha_KSCN            YLADKSYIEGYVPSQAD    17  33        15 #> 75   13 db_eEF1Ba Alpha_KSCN            YLADKSYIEGYVPSQAD    17  33        15 #> 76   13 db_eEF1Ba Alpha_KSCN            YLADKSYIEGYVPSQAD    17  33        15 #> 77   13 db_eEF1Ba Alpha_KSCN            YLADKSYIEGYVPSQAD    17  33        15 #> 78   13 db_eEF1Ba Alpha_KSCN            YLADKSYIEGYVPSQAD    17  33        15 #> 79   14 db_eEF1Ba Alpha_KSCN              ADKSYIEGYVPSQAD    19  33        13 #> 80   14 db_eEF1Ba Alpha_KSCN              ADKSYIEGYVPSQAD    19  33        13 #> 81   14 db_eEF1Ba Alpha_KSCN              ADKSYIEGYVPSQAD    19  33        13 #> 82   14 db_eEF1Ba Alpha_KSCN              ADKSYIEGYVPSQAD    19  33        13 #> 83   14 db_eEF1Ba Alpha_KSCN              ADKSYIEGYVPSQAD    19  33        13 #> 84   14 db_eEF1Ba Alpha_KSCN              ADKSYIEGYVPSQAD    19  33        13 #> 85   15 db_eEF1Ba Alpha_KSCN                KSYIEGYVPSQAD    21  33        11 #> 86   15 db_eEF1Ba Alpha_KSCN                KSYIEGYVPSQAD    21  33        11 #> 87   15 db_eEF1Ba Alpha_KSCN                KSYIEGYVPSQAD    21  33        11 #> 88   15 db_eEF1Ba Alpha_KSCN                KSYIEGYVPSQAD    21  33        11 #> 89   15 db_eEF1Ba Alpha_KSCN                KSYIEGYVPSQAD    21  33        11 #> 90   15 db_eEF1Ba Alpha_KSCN                KSYIEGYVPSQAD    21  33        11 #> 91   16 db_eEF1Ba Alpha_KSCN                        SYIEG    22  26         4 #> 92   16 db_eEF1Ba Alpha_KSCN                        SYIEG    22  26         4 #> 93   16 db_eEF1Ba Alpha_KSCN                        SYIEG    22  26         4 #> 94   16 db_eEF1Ba Alpha_KSCN                        SYIEG    22  26         4 #> 95   16 db_eEF1Ba Alpha_KSCN                        SYIEG    22  26         4 #> 96   16 db_eEF1Ba Alpha_KSCN                        SYIEG    22  26         4 #> 97   17 db_eEF1Ba Alpha_KSCN                 SYIEGYVPSQAD    22  33        10 #> 98   17 db_eEF1Ba Alpha_KSCN                 SYIEGYVPSQAD    22  33        10 #> 99   17 db_eEF1Ba Alpha_KSCN                 SYIEGYVPSQAD    22  33        10 #> 100  17 db_eEF1Ba Alpha_KSCN                 SYIEGYVPSQAD    22  33        10 #> 101  17 db_eEF1Ba Alpha_KSCN                 SYIEGYVPSQAD    22  33        10 #> 102  17 db_eEF1Ba Alpha_KSCN                 SYIEGYVPSQAD    22  33        10 #> 103  18 db_eEF1Ba Alpha_KSCN                  YIEGYVPSQAD    23  33         9 #> 104  18 db_eEF1Ba Alpha_KSCN                  YIEGYVPSQAD    23  33         9 #> 105  18 db_eEF1Ba Alpha_KSCN                  YIEGYVPSQAD    23  33         9 #> 106  18 db_eEF1Ba Alpha_KSCN                  YIEGYVPSQAD    23  33         9 #> 107  18 db_eEF1Ba Alpha_KSCN                  YIEGYVPSQAD    23  33         9 #> 108  18 db_eEF1Ba Alpha_KSCN                  YIEGYVPSQAD    23  33         9 #> 109  19 db_eEF1Ba Alpha_KSCN                       IEGYVP    24  29         4 #> 110  19 db_eEF1Ba Alpha_KSCN                       IEGYVP    24  29         4 #> 111  19 db_eEF1Ba Alpha_KSCN                       IEGYVP    24  29         4 #> 112  19 db_eEF1Ba Alpha_KSCN                       IEGYVP    24  29         4 #> 113  19 db_eEF1Ba Alpha_KSCN                       IEGYVP    24  29         4 #> 114  19 db_eEF1Ba Alpha_KSCN                       IEGYVP    24  29         4 #> 115  20 db_eEF1Ba Alpha_KSCN                    IEGYVPSQA    24  32         7 #> 116  20 db_eEF1Ba Alpha_KSCN                    IEGYVPSQA    24  32         7 #> 117  20 db_eEF1Ba Alpha_KSCN                    IEGYVPSQA    24  32         7 #> 118  20 db_eEF1Ba Alpha_KSCN                    IEGYVPSQA    24  32         7 #> 119  20 db_eEF1Ba Alpha_KSCN                    IEGYVPSQA    24  32         7 #> 120  20 db_eEF1Ba Alpha_KSCN                    IEGYVPSQA    24  32         7 #> 121  21 db_eEF1Ba Alpha_KSCN                   IEGYVPSQAD    24  33         8 #> 122  21 db_eEF1Ba Alpha_KSCN                   IEGYVPSQAD    24  33         8 #> 123  21 db_eEF1Ba Alpha_KSCN                   IEGYVPSQAD    24  33         8 #> 124  21 db_eEF1Ba Alpha_KSCN                   IEGYVPSQAD    24  33         8 #> 125  21 db_eEF1Ba Alpha_KSCN                   IEGYVPSQAD    24  33         8 #> 126  21 db_eEF1Ba Alpha_KSCN                   IEGYVPSQAD    24  33         8 #> 127  22 db_eEF1Ba Alpha_KSCN                      YVPSQAD    27  33         5 #> 128  22 db_eEF1Ba Alpha_KSCN                      YVPSQAD    27  33         5 #> 129  22 db_eEF1Ba Alpha_KSCN                      YVPSQAD    27  33         5 #> 130  22 db_eEF1Ba Alpha_KSCN                      YVPSQAD    27  33         5 #> 131  22 db_eEF1Ba Alpha_KSCN                      YVPSQAD    27  33         5 #> 132  22 db_eEF1Ba Alpha_KSCN                      YVPSQAD    27  33         5 #> 133  23 db_eEF1Ba Alpha_KSCN                        VAVFE    34  38         4 #> 134  23 db_eEF1Ba Alpha_KSCN                        VAVFE    34  38         4 #> 135  23 db_eEF1Ba Alpha_KSCN                        VAVFE    34  38         4 #> 136  23 db_eEF1Ba Alpha_KSCN                        VAVFE    34  38         4 #> 137  23 db_eEF1Ba Alpha_KSCN                        VAVFE    34  38         4 #> 138  23 db_eEF1Ba Alpha_KSCN                        VAVFE    34  38         4 #> 139  24 db_eEF1Ba Alpha_KSCN                  FEAVSSPPPAD    37  47         7 #> 140  24 db_eEF1Ba Alpha_KSCN                  FEAVSSPPPAD    37  47         7 #> 141  24 db_eEF1Ba Alpha_KSCN                  FEAVSSPPPAD    37  47         7 #> 142  24 db_eEF1Ba Alpha_KSCN                  FEAVSSPPPAD    37  47         7 #> 143  24 db_eEF1Ba Alpha_KSCN                  FEAVSSPPPAD    37  47         7 #> 144  24 db_eEF1Ba Alpha_KSCN                  FEAVSSPPPAD    37  47         7 #> 145  25 db_eEF1Ba Alpha_KSCN                 FEAVSSPPPADL    37  48         8 #> 146  25 db_eEF1Ba Alpha_KSCN                 FEAVSSPPPADL    37  48         8 #> 147  25 db_eEF1Ba Alpha_KSCN                 FEAVSSPPPADL    37  48         8 #> 148  25 db_eEF1Ba Alpha_KSCN                 FEAVSSPPPADL    37  48         8 #> 149  25 db_eEF1Ba Alpha_KSCN                 FEAVSSPPPADL    37  48         8 #> 150  25 db_eEF1Ba Alpha_KSCN                 FEAVSSPPPADL    37  48         8 #> 151  26 db_eEF1Ba Alpha_KSCN               FEAVSSPPPADLCH    37  50        10 #> 152  26 db_eEF1Ba Alpha_KSCN               FEAVSSPPPADLCH    37  50        10 #> 153  26 db_eEF1Ba Alpha_KSCN               FEAVSSPPPADLCH    37  50        10 #> 154  26 db_eEF1Ba Alpha_KSCN               FEAVSSPPPADLCH    37  50        10 #> 155  26 db_eEF1Ba Alpha_KSCN               FEAVSSPPPADLCH    37  50        10 #> 156  26 db_eEF1Ba Alpha_KSCN               FEAVSSPPPADLCH    37  50        10 #> 157  27 db_eEF1Ba Alpha_KSCN              FEAVSSPPPADLCHA    37  51        11 #> 158  27 db_eEF1Ba Alpha_KSCN              FEAVSSPPPADLCHA    37  51        11 #> 159  27 db_eEF1Ba Alpha_KSCN              FEAVSSPPPADLCHA    37  51        11 #> 160  27 db_eEF1Ba Alpha_KSCN              FEAVSSPPPADLCHA    37  51        11 #> 161  27 db_eEF1Ba Alpha_KSCN              FEAVSSPPPADLCHA    37  51        11 #> 162  27 db_eEF1Ba Alpha_KSCN              FEAVSSPPPADLCHA    37  51        11 #> 163  28 db_eEF1Ba Alpha_KSCN                  EAVSSPPPADL    38  48         7 #> 164  28 db_eEF1Ba Alpha_KSCN                  EAVSSPPPADL    38  48         7 #> 165  28 db_eEF1Ba Alpha_KSCN                  EAVSSPPPADL    38  48         7 #> 166  28 db_eEF1Ba Alpha_KSCN                  EAVSSPPPADL    38  48         7 #> 167  28 db_eEF1Ba Alpha_KSCN                  EAVSSPPPADL    38  48         7 #> 168  28 db_eEF1Ba Alpha_KSCN                  EAVSSPPPADL    38  48         7 #> 169  29 db_eEF1Ba Alpha_KSCN                EAVSSPPPADLCH    38  50         9 #> 170  29 db_eEF1Ba Alpha_KSCN                EAVSSPPPADLCH    38  50         9 #> 171  29 db_eEF1Ba Alpha_KSCN                EAVSSPPPADLCH    38  50         9 #> 172  29 db_eEF1Ba Alpha_KSCN                EAVSSPPPADLCH    38  50         9 #> 173  29 db_eEF1Ba Alpha_KSCN                EAVSSPPPADLCH    38  50         9 #> 174  29 db_eEF1Ba Alpha_KSCN                EAVSSPPPADLCH    38  50         9 #> 175  30 db_eEF1Ba Alpha_KSCN               EAVSSPPPADLCHA    38  51        10 #> 176  30 db_eEF1Ba Alpha_KSCN               EAVSSPPPADLCHA    38  51        10 #> 177  30 db_eEF1Ba Alpha_KSCN               EAVSSPPPADLCHA    38  51        10 #> 178  30 db_eEF1Ba Alpha_KSCN               EAVSSPPPADLCHA    38  51        10 #> 179  30 db_eEF1Ba Alpha_KSCN               EAVSSPPPADLCHA    38  51        10 #> 180  30 db_eEF1Ba Alpha_KSCN               EAVSSPPPADLCHA    38  51        10 #> 181  31 db_eEF1Ba Alpha_KSCN                   AVSSPPPADL    39  48         6 #> 182  31 db_eEF1Ba Alpha_KSCN                   AVSSPPPADL    39  48         6 #> 183  31 db_eEF1Ba Alpha_KSCN                   AVSSPPPADL    39  48         6 #> 184  31 db_eEF1Ba Alpha_KSCN                   AVSSPPPADL    39  48         6 #> 185  31 db_eEF1Ba Alpha_KSCN                   AVSSPPPADL    39  48         6 #> 186  31 db_eEF1Ba Alpha_KSCN                   AVSSPPPADL    39  48         6 #> 187  32 db_eEF1Ba Alpha_KSCN                    VSSPPPADL    40  48         5 #> 188  32 db_eEF1Ba Alpha_KSCN                    VSSPPPADL    40  48         5 #> 189  32 db_eEF1Ba Alpha_KSCN                    VSSPPPADL    40  48         5 #> 190  32 db_eEF1Ba Alpha_KSCN                    VSSPPPADL    40  48         5 #> 191  32 db_eEF1Ba Alpha_KSCN                    VSSPPPADL    40  48         5 #> 192  32 db_eEF1Ba Alpha_KSCN                    VSSPPPADL    40  48         5 #> 193  33 db_eEF1Ba Alpha_KSCN                  VSSPPPADLCH    40  50         7 #> 194  33 db_eEF1Ba Alpha_KSCN                  VSSPPPADLCH    40  50         7 #> 195  33 db_eEF1Ba Alpha_KSCN                  VSSPPPADLCH    40  50         7 #> 196  33 db_eEF1Ba Alpha_KSCN                  VSSPPPADLCH    40  50         7 #> 197  33 db_eEF1Ba Alpha_KSCN                  VSSPPPADLCH    40  50         7 #> 198  33 db_eEF1Ba Alpha_KSCN                  VSSPPPADLCH    40  50         7 #> 199  34 db_eEF1Ba Alpha_KSCN                      ALRWYNH    51  57         6 #> 200  34 db_eEF1Ba Alpha_KSCN                      ALRWYNH    51  57         6 #> 201  34 db_eEF1Ba Alpha_KSCN                      ALRWYNH    51  57         6 #> 202  34 db_eEF1Ba Alpha_KSCN                      ALRWYNH    51  57         6 #> 203  34 db_eEF1Ba Alpha_KSCN                      ALRWYNH    51  57         6 #> 204  34 db_eEF1Ba Alpha_KSCN                      ALRWYNH    51  57         6 #> 205  35 db_eEF1Ba Alpha_KSCN                       LRWYNH    52  57         5 #> 206  35 db_eEF1Ba Alpha_KSCN                       LRWYNH    52  57         5 #> 207  35 db_eEF1Ba Alpha_KSCN                       LRWYNH    52  57         5 #> 208  35 db_eEF1Ba Alpha_KSCN                       LRWYNH    52  57         5 #> 209  35 db_eEF1Ba Alpha_KSCN                       LRWYNH    52  57         5 #> 210  35 db_eEF1Ba Alpha_KSCN                       LRWYNH    52  57         5 #> 211  36 db_eEF1Ba Alpha_KSCN             IKSYEKEKASLPGVKK    58  73        14 #> 212  36 db_eEF1Ba Alpha_KSCN             IKSYEKEKASLPGVKK    58  73        14 #> 213  36 db_eEF1Ba Alpha_KSCN             IKSYEKEKASLPGVKK    58  73        14 #> 214  36 db_eEF1Ba Alpha_KSCN             IKSYEKEKASLPGVKK    58  73        14 #> 215  36 db_eEF1Ba Alpha_KSCN             IKSYEKEKASLPGVKK    58  73        14 #> 216  36 db_eEF1Ba Alpha_KSCN             IKSYEKEKASLPGVKK    58  73        14 #> 217  37 db_eEF1Ba Alpha_KSCN        IKSYEKEKASLPGVKKALGKY    58  78        19 #> 218  37 db_eEF1Ba Alpha_KSCN        IKSYEKEKASLPGVKKALGKY    58  78        19 #> 219  37 db_eEF1Ba Alpha_KSCN        IKSYEKEKASLPGVKKALGKY    58  78        19 #> 220  37 db_eEF1Ba Alpha_KSCN        IKSYEKEKASLPGVKKALGKY    58  78        19 #> 221  37 db_eEF1Ba Alpha_KSCN        IKSYEKEKASLPGVKKALGKY    58  78        19 #> 222  37 db_eEF1Ba Alpha_KSCN        IKSYEKEKASLPGVKKALGKY    58  78        19 #> 223  38 db_eEF1Ba Alpha_KSCN              EKASLPGVKKALGKY    64  78        13 #> 224  38 db_eEF1Ba Alpha_KSCN              EKASLPGVKKALGKY    64  78        13 #> 225  38 db_eEF1Ba Alpha_KSCN              EKASLPGVKKALGKY    64  78        13 #> 226  38 db_eEF1Ba Alpha_KSCN              EKASLPGVKKALGKY    64  78        13 #> 227  38 db_eEF1Ba Alpha_KSCN              EKASLPGVKKALGKY    64  78        13 #> 228  38 db_eEF1Ba Alpha_KSCN              EKASLPGVKKALGKY    64  78        13 #> 229  39 db_eEF1Ba Alpha_KSCN          EKASLPGVKKALGKYGPAD    64  82        16 #> 230  39 db_eEF1Ba Alpha_KSCN          EKASLPGVKKALGKYGPAD    64  82        16 #> 231  39 db_eEF1Ba Alpha_KSCN          EKASLPGVKKALGKYGPAD    64  82        16 #> 232  39 db_eEF1Ba Alpha_KSCN          EKASLPGVKKALGKYGPAD    64  82        16 #> 233  39 db_eEF1Ba Alpha_KSCN          EKASLPGVKKALGKYGPAD    64  82        16 #> 234  39 db_eEF1Ba Alpha_KSCN          EKASLPGVKKALGKYGPAD    64  82        16 #> 235  40 db_eEF1Ba Alpha_KSCN        EKASLPGVKKALGKYGPADVE    64  84        18 #> 236  40 db_eEF1Ba Alpha_KSCN        EKASLPGVKKALGKYGPADVE    64  84        18 #> 237  40 db_eEF1Ba Alpha_KSCN        EKASLPGVKKALGKYGPADVE    64  84        18 #> 238  40 db_eEF1Ba Alpha_KSCN        EKASLPGVKKALGKYGPADVE    64  84        18 #> 239  40 db_eEF1Ba Alpha_KSCN        EKASLPGVKKALGKYGPADVE    64  84        18 #> 240  40 db_eEF1Ba Alpha_KSCN        EKASLPGVKKALGKYGPADVE    64  84        18 #> 241  41 db_eEF1Ba Alpha_KSCN            ASLPGVKKALGKYGPAD    66  82        14 #> 242  41 db_eEF1Ba Alpha_KSCN            ASLPGVKKALGKYGPAD    66  82        14 #> 243  41 db_eEF1Ba Alpha_KSCN            ASLPGVKKALGKYGPAD    66  82        14 #> 244  41 db_eEF1Ba Alpha_KSCN            ASLPGVKKALGKYGPAD    66  82        14 #> 245  41 db_eEF1Ba Alpha_KSCN            ASLPGVKKALGKYGPAD    66  82        14 #> 246  41 db_eEF1Ba Alpha_KSCN            ASLPGVKKALGKYGPAD    66  82        14 #> 247  42 db_eEF1Ba Alpha_KSCN                  ALGKYGPADVE    74  84         9 #> 248  42 db_eEF1Ba Alpha_KSCN                  ALGKYGPADVE    74  84         9 #> 249  42 db_eEF1Ba Alpha_KSCN                  ALGKYGPADVE    74  84         9 #> 250  42 db_eEF1Ba Alpha_KSCN                  ALGKYGPADVE    74  84         9 #> 251  42 db_eEF1Ba Alpha_KSCN                  ALGKYGPADVE    74  84         9 #> 252  42 db_eEF1Ba Alpha_KSCN                  ALGKYGPADVE    74  84         9 #> 253  43 db_eEF1Ba Alpha_KSCN         VEDTTGSGATDSKDDDDIDL    83 102        19 #> 254  43 db_eEF1Ba Alpha_KSCN         VEDTTGSGATDSKDDDDIDL    83 102        19 #> 255  43 db_eEF1Ba Alpha_KSCN         VEDTTGSGATDSKDDDDIDL    83 102        19 #> 256  43 db_eEF1Ba Alpha_KSCN         VEDTTGSGATDSKDDDDIDL    83 102        19 #> 257  43 db_eEF1Ba Alpha_KSCN         VEDTTGSGATDSKDDDDIDL    83 102        19 #> 258  43 db_eEF1Ba Alpha_KSCN         VEDTTGSGATDSKDDDDIDL    83 102        19 #> 259  44 db_eEF1Ba Alpha_KSCN           DTTGSGATDSKDDDDIDL    85 102        17 #> 260  44 db_eEF1Ba Alpha_KSCN           DTTGSGATDSKDDDDIDL    85 102        17 #> 261  44 db_eEF1Ba Alpha_KSCN           DTTGSGATDSKDDDDIDL    85 102        17 #> 262  44 db_eEF1Ba Alpha_KSCN           DTTGSGATDSKDDDDIDL    85 102        17 #> 263  44 db_eEF1Ba Alpha_KSCN           DTTGSGATDSKDDDDIDL    85 102        17 #> 264  44 db_eEF1Ba Alpha_KSCN           DTTGSGATDSKDDDDIDL    85 102        17 #> 265  45 db_eEF1Ba Alpha_KSCN            TTGSGATDSKDDDDIDL    86 102        16 #> 266  45 db_eEF1Ba Alpha_KSCN            TTGSGATDSKDDDDIDL    86 102        16 #> 267  45 db_eEF1Ba Alpha_KSCN            TTGSGATDSKDDDDIDL    86 102        16 #> 268  45 db_eEF1Ba Alpha_KSCN            TTGSGATDSKDDDDIDL    86 102        16 #> 269  45 db_eEF1Ba Alpha_KSCN            TTGSGATDSKDDDDIDL    86 102        16 #> 270  45 db_eEF1Ba Alpha_KSCN            TTGSGATDSKDDDDIDL    86 102        16 #> 271  46 db_eEF1Ba Alpha_KSCN                       DDDIDL    97 102         5 #> 272  46 db_eEF1Ba Alpha_KSCN                       DDDIDL    97 102         5 #> 273  46 db_eEF1Ba Alpha_KSCN                       DDDIDL    97 102         5 #> 274  46 db_eEF1Ba Alpha_KSCN                       DDDIDL    97 102         5 #> 275  46 db_eEF1Ba Alpha_KSCN                       DDDIDL    97 102         5 #> 276  46 db_eEF1Ba Alpha_KSCN                       DDDIDL    97 102         5 #> 277  47 db_eEF1Ba Alpha_KSCN                       LFGSDD   102 107         5 #> 278  47 db_eEF1Ba Alpha_KSCN                       LFGSDD   102 107         5 #> 279  47 db_eEF1Ba Alpha_KSCN                       LFGSDD   102 107         5 #> 280  47 db_eEF1Ba Alpha_KSCN                       LFGSDD   102 107         5 #> 281  47 db_eEF1Ba Alpha_KSCN                       LFGSDD   102 107         5 #> 282  47 db_eEF1Ba Alpha_KSCN                       LFGSDD   102 107         5 #> 283  48 db_eEF1Ba Alpha_KSCN                        FGSDD   103 107         4 #> 284  48 db_eEF1Ba Alpha_KSCN                        FGSDD   103 107         4 #> 285  48 db_eEF1Ba Alpha_KSCN                        FGSDD   103 107         4 #> 286  48 db_eEF1Ba Alpha_KSCN                        FGSDD   103 107         4 #> 287  48 db_eEF1Ba Alpha_KSCN                        FGSDD   103 107         4 #> 288  48 db_eEF1Ba Alpha_KSCN                        FGSDD   103 107         4 #> 289  49 db_eEF1Ba Alpha_KSCN            FGSDDEEESEEAKRLRE   103 119        16 #> 290  49 db_eEF1Ba Alpha_KSCN            FGSDDEEESEEAKRLRE   103 119        16 #> 291  49 db_eEF1Ba Alpha_KSCN            FGSDDEEESEEAKRLRE   103 119        16 #> 292  49 db_eEF1Ba Alpha_KSCN            FGSDDEEESEEAKRLRE   103 119        16 #> 293  49 db_eEF1Ba Alpha_KSCN            FGSDDEEESEEAKRLRE   103 119        16 #> 294  49 db_eEF1Ba Alpha_KSCN            FGSDDEEESEEAKRLRE   103 119        16 #> 295  50 db_eEF1Ba Alpha_KSCN           FGSDDEEESEEAKRLREE   103 120        17 #> 296  50 db_eEF1Ba Alpha_KSCN           FGSDDEEESEEAKRLREE   103 120        17 #> 297  50 db_eEF1Ba Alpha_KSCN           FGSDDEEESEEAKRLREE   103 120        17 #> 298  50 db_eEF1Ba Alpha_KSCN           FGSDDEEESEEAKRLREE   103 120        17 #> 299  50 db_eEF1Ba Alpha_KSCN           FGSDDEEESEEAKRLREE   103 120        17 #> 300  50 db_eEF1Ba Alpha_KSCN           FGSDDEEESEEAKRLREE   103 120        17 #> 301  51 db_eEF1Ba Alpha_KSCN         FGSDDEEESEEAKRLREERL   103 122        19 #> 302  51 db_eEF1Ba Alpha_KSCN         FGSDDEEESEEAKRLREERL   103 122        19 #> 303  51 db_eEF1Ba Alpha_KSCN         FGSDDEEESEEAKRLREERL   103 122        19 #> 304  51 db_eEF1Ba Alpha_KSCN         FGSDDEEESEEAKRLREERL   103 122        19 #> 305  51 db_eEF1Ba Alpha_KSCN         FGSDDEEESEEAKRLREERL   103 122        19 #> 306  51 db_eEF1Ba Alpha_KSCN         FGSDDEEESEEAKRLREERL   103 122        19 #> 307  52 db_eEF1Ba Alpha_KSCN           DEEESEEAKRLREERLAQ   107 124        17 #> 308  52 db_eEF1Ba Alpha_KSCN           DEEESEEAKRLREERLAQ   107 124        17 #> 309  52 db_eEF1Ba Alpha_KSCN           DEEESEEAKRLREERLAQ   107 124        17 #> 310  52 db_eEF1Ba Alpha_KSCN           DEEESEEAKRLREERLAQ   107 124        17 #> 311  52 db_eEF1Ba Alpha_KSCN           DEEESEEAKRLREERLAQ   107 124        17 #> 312  52 db_eEF1Ba Alpha_KSCN           DEEESEEAKRLREERLAQ   107 124        17 #> 313  53 db_eEF1Ba Alpha_KSCN            EEESEEAKRLREERLAQ   108 124        16 #> 314  53 db_eEF1Ba Alpha_KSCN            EEESEEAKRLREERLAQ   108 124        16 #> 315  53 db_eEF1Ba Alpha_KSCN            EEESEEAKRLREERLAQ   108 124        16 #> 316  53 db_eEF1Ba Alpha_KSCN            EEESEEAKRLREERLAQ   108 124        16 #> 317  53 db_eEF1Ba Alpha_KSCN            EEESEEAKRLREERLAQ   108 124        16 #> 318  53 db_eEF1Ba Alpha_KSCN            EEESEEAKRLREERLAQ   108 124        16 #> 319  54 db_eEF1Ba Alpha_KSCN                AQYESKKAKKPAL   123 135        11 #> 320  54 db_eEF1Ba Alpha_KSCN                AQYESKKAKKPAL   123 135        11 #> 321  54 db_eEF1Ba Alpha_KSCN                AQYESKKAKKPAL   123 135        11 #> 322  54 db_eEF1Ba Alpha_KSCN                AQYESKKAKKPAL   123 135        11 #> 323  54 db_eEF1Ba Alpha_KSCN                AQYESKKAKKPAL   123 135        11 #> 324  54 db_eEF1Ba Alpha_KSCN                AQYESKKAKKPAL   123 135        11 #> 325  55 db_eEF1Ba Alpha_KSCN                  YESKKAKKPAL   125 135         9 #> 326  55 db_eEF1Ba Alpha_KSCN                  YESKKAKKPAL   125 135         9 #> 327  55 db_eEF1Ba Alpha_KSCN                  YESKKAKKPAL   125 135         9 #> 328  55 db_eEF1Ba Alpha_KSCN                  YESKKAKKPAL   125 135         9 #> 329  55 db_eEF1Ba Alpha_KSCN                  YESKKAKKPAL   125 135         9 #> 330  55 db_eEF1Ba Alpha_KSCN                  YESKKAKKPAL   125 135         9 #> 331  56 db_eEF1Ba Alpha_KSCN                      VAKSSIL   136 142         6 #> 332  56 db_eEF1Ba Alpha_KSCN                      VAKSSIL   136 142         6 #> 333  56 db_eEF1Ba Alpha_KSCN                      VAKSSIL   136 142         6 #> 334  56 db_eEF1Ba Alpha_KSCN                      VAKSSIL   136 142         6 #> 335  56 db_eEF1Ba Alpha_KSCN                      VAKSSIL   136 142         6 #> 336  56 db_eEF1Ba Alpha_KSCN                      VAKSSIL   136 142         6 #> 337  57 db_eEF1Ba Alpha_KSCN                     VAKSSILL   136 143         7 #> 338  57 db_eEF1Ba Alpha_KSCN                     VAKSSILL   136 143         7 #> 339  57 db_eEF1Ba Alpha_KSCN                     VAKSSILL   136 143         7 #> 340  57 db_eEF1Ba Alpha_KSCN                     VAKSSILL   136 143         7 #> 341  57 db_eEF1Ba Alpha_KSCN                     VAKSSILL   136 143         7 #> 342  57 db_eEF1Ba Alpha_KSCN                     VAKSSILL   136 143         7 #> 343  58 db_eEF1Ba Alpha_KSCN                       AKSSIL   137 142         5 #> 344  58 db_eEF1Ba Alpha_KSCN                       AKSSIL   137 142         5 #> 345  58 db_eEF1Ba Alpha_KSCN                       AKSSIL   137 142         5 #> 346  58 db_eEF1Ba Alpha_KSCN                       AKSSIL   137 142         5 #> 347  58 db_eEF1Ba Alpha_KSCN                       AKSSIL   137 142         5 #> 348  58 db_eEF1Ba Alpha_KSCN                       AKSSIL   137 142         5 #> 349  59 db_eEF1Ba Alpha_KSCN                     LDVKPWDD   143 150         6 #> 350  59 db_eEF1Ba Alpha_KSCN                     LDVKPWDD   143 150         6 #> 351  59 db_eEF1Ba Alpha_KSCN                     LDVKPWDD   143 150         6 #> 352  59 db_eEF1Ba Alpha_KSCN                     LDVKPWDD   143 150         6 #> 353  59 db_eEF1Ba Alpha_KSCN                     LDVKPWDD   143 150         6 #> 354  59 db_eEF1Ba Alpha_KSCN                     LDVKPWDD   143 150         6 #> 355  60 db_eEF1Ba Alpha_KSCN                  LDVKPWDDETD   143 153         9 #> 356  60 db_eEF1Ba Alpha_KSCN                  LDVKPWDDETD   143 153         9 #> 357  60 db_eEF1Ba Alpha_KSCN                  LDVKPWDDETD   143 153         9 #> 358  60 db_eEF1Ba Alpha_KSCN                  LDVKPWDDETD   143 153         9 #> 359  60 db_eEF1Ba Alpha_KSCN                  LDVKPWDDETD   143 153         9 #> 360  60 db_eEF1Ba Alpha_KSCN                  LDVKPWDDETD   143 153         9 #> 361  61 db_eEF1Ba Alpha_KSCN                  DVKPWDDETDM   144 154         9 #> 362  61 db_eEF1Ba Alpha_KSCN                  DVKPWDDETDM   144 154         9 #> 363  61 db_eEF1Ba Alpha_KSCN                  DVKPWDDETDM   144 154         9 #> 364  61 db_eEF1Ba Alpha_KSCN                  DVKPWDDETDM   144 154         9 #> 365  61 db_eEF1Ba Alpha_KSCN                  DVKPWDDETDM   144 154         9 #> 366  61 db_eEF1Ba Alpha_KSCN                  DVKPWDDETDM   144 154         9 #> 367  62 db_eEF1Ba Alpha_KSCN                       MAKLEE   154 159         5 #> 368  62 db_eEF1Ba Alpha_KSCN                       MAKLEE   154 159         5 #> 369  62 db_eEF1Ba Alpha_KSCN                       MAKLEE   154 159         5 #> 370  62 db_eEF1Ba Alpha_KSCN                       MAKLEE   154 159         5 #> 371  62 db_eEF1Ba Alpha_KSCN                       MAKLEE   154 159         5 #> 372  62 db_eEF1Ba Alpha_KSCN                       MAKLEE   154 159         5 #> 373  63 db_eEF1Ba Alpha_KSCN                        AKLEE   155 159         4 #> 374  63 db_eEF1Ba Alpha_KSCN                        AKLEE   155 159         4 #> 375  63 db_eEF1Ba Alpha_KSCN                        AKLEE   155 159         4 #> 376  63 db_eEF1Ba Alpha_KSCN                        AKLEE   155 159         4 #> 377  63 db_eEF1Ba Alpha_KSCN                        AKLEE   155 159         4 #> 378  63 db_eEF1Ba Alpha_KSCN                        AKLEE   155 159         4 #> 379  64 db_eEF1Ba Alpha_KSCN                      CVRSIQA   160 166         6 #> 380  64 db_eEF1Ba Alpha_KSCN                      CVRSIQA   160 166         6 #> 381  64 db_eEF1Ba Alpha_KSCN                      CVRSIQA   160 166         6 #> 382  64 db_eEF1Ba Alpha_KSCN                      CVRSIQA   160 166         6 #> 383  64 db_eEF1Ba Alpha_KSCN                      CVRSIQA   160 166         6 #> 384  64 db_eEF1Ba Alpha_KSCN                      CVRSIQA   160 166         6 #> 385  65 db_eEF1Ba Alpha_KSCN                    CVRSIQADG   160 168         8 #> 386  65 db_eEF1Ba Alpha_KSCN                    CVRSIQADG   160 168         8 #> 387  65 db_eEF1Ba Alpha_KSCN                    CVRSIQADG   160 168         8 #> 388  65 db_eEF1Ba Alpha_KSCN                    CVRSIQADG   160 168         8 #> 389  65 db_eEF1Ba Alpha_KSCN                    CVRSIQADG   160 168         8 #> 390  65 db_eEF1Ba Alpha_KSCN                    CVRSIQADG   160 168         8 #> 391  66 db_eEF1Ba Alpha_KSCN                   CVRSIQADGL   160 169         9 #> 392  66 db_eEF1Ba Alpha_KSCN                   CVRSIQADGL   160 169         9 #> 393  66 db_eEF1Ba Alpha_KSCN                   CVRSIQADGL   160 169         9 #> 394  66 db_eEF1Ba Alpha_KSCN                   CVRSIQADGL   160 169         9 #> 395  66 db_eEF1Ba Alpha_KSCN                   CVRSIQADGL   160 169         9 #> 396  66 db_eEF1Ba Alpha_KSCN                   CVRSIQADGL   160 169         9 #> 397  67 db_eEF1Ba Alpha_KSCN            CVRSIQADGLVWGSSKL   160 176        16 #> 398  67 db_eEF1Ba Alpha_KSCN            CVRSIQADGLVWGSSKL   160 176        16 #> 399  67 db_eEF1Ba Alpha_KSCN            CVRSIQADGLVWGSSKL   160 176        16 #> 400  67 db_eEF1Ba Alpha_KSCN            CVRSIQADGLVWGSSKL   160 176        16 #> 401  67 db_eEF1Ba Alpha_KSCN            CVRSIQADGLVWGSSKL   160 176        16 #> 402  67 db_eEF1Ba Alpha_KSCN            CVRSIQADGLVWGSSKL   160 176        16 #> 403  68 db_eEF1Ba Alpha_KSCN                    VRSIQADGL   161 169         8 #> 404  68 db_eEF1Ba Alpha_KSCN                    VRSIQADGL   161 169         8 #> 405  68 db_eEF1Ba Alpha_KSCN                    VRSIQADGL   161 169         8 #> 406  68 db_eEF1Ba Alpha_KSCN                    VRSIQADGL   161 169         8 #> 407  68 db_eEF1Ba Alpha_KSCN                    VRSIQADGL   161 169         8 #> 408  68 db_eEF1Ba Alpha_KSCN                    VRSIQADGL   161 169         8 #> 409  69 db_eEF1Ba Alpha_KSCN             VRSIQADGLVWGSSKL   161 176        15 #> 410  69 db_eEF1Ba Alpha_KSCN             VRSIQADGLVWGSSKL   161 176        15 #> 411  69 db_eEF1Ba Alpha_KSCN             VRSIQADGLVWGSSKL   161 176        15 #> 412  69 db_eEF1Ba Alpha_KSCN             VRSIQADGLVWGSSKL   161 176        15 #> 413  69 db_eEF1Ba Alpha_KSCN             VRSIQADGLVWGSSKL   161 176        15 #> 414  69 db_eEF1Ba Alpha_KSCN             VRSIQADGLVWGSSKL   161 176        15 #> 415  70 db_eEF1Ba Alpha_KSCN                      SIQADGL   163 169         6 #> 416  70 db_eEF1Ba Alpha_KSCN                      SIQADGL   163 169         6 #> 417  70 db_eEF1Ba Alpha_KSCN                      SIQADGL   163 169         6 #> 418  70 db_eEF1Ba Alpha_KSCN                      SIQADGL   163 169         6 #> 419  70 db_eEF1Ba Alpha_KSCN                      SIQADGL   163 169         6 #> 420  70 db_eEF1Ba Alpha_KSCN                      SIQADGL   163 169         6 #> 421  71 db_eEF1Ba Alpha_KSCN               SIQADGLVWGSSKL   163 176        13 #> 422  71 db_eEF1Ba Alpha_KSCN               SIQADGLVWGSSKL   163 176        13 #> 423  71 db_eEF1Ba Alpha_KSCN               SIQADGLVWGSSKL   163 176        13 #> 424  71 db_eEF1Ba Alpha_KSCN               SIQADGLVWGSSKL   163 176        13 #> 425  71 db_eEF1Ba Alpha_KSCN               SIQADGLVWGSSKL   163 176        13 #> 426  71 db_eEF1Ba Alpha_KSCN               SIQADGLVWGSSKL   163 176        13 #> 427  72 db_eEF1Ba Alpha_KSCN SIQADGLVWGSSKLVPVGYGIKKLQIQC   163 190        26 #> 428  72 db_eEF1Ba Alpha_KSCN SIQADGLVWGSSKLVPVGYGIKKLQIQC   163 190        26 #> 429  72 db_eEF1Ba Alpha_KSCN SIQADGLVWGSSKLVPVGYGIKKLQIQC   163 190        26 #> 430  72 db_eEF1Ba Alpha_KSCN SIQADGLVWGSSKLVPVGYGIKKLQIQC   163 190        26 #> 431  72 db_eEF1Ba Alpha_KSCN SIQADGLVWGSSKLVPVGYGIKKLQIQC   163 190        26 #> 432  72 db_eEF1Ba Alpha_KSCN SIQADGLVWGSSKLVPVGYGIKKLQIQC   163 190        26 #> 433  73 db_eEF1Ba Alpha_KSCN         ADGLVWGSSKLVPVGYGIKK   166 185        18 #> 434  73 db_eEF1Ba Alpha_KSCN         ADGLVWGSSKLVPVGYGIKK   166 185        18 #> 435  73 db_eEF1Ba Alpha_KSCN         ADGLVWGSSKLVPVGYGIKK   166 185        18 #> 436  73 db_eEF1Ba Alpha_KSCN         ADGLVWGSSKLVPVGYGIKK   166 185        18 #> 437  73 db_eEF1Ba Alpha_KSCN         ADGLVWGSSKLVPVGYGIKK   166 185        18 #> 438  73 db_eEF1Ba Alpha_KSCN         ADGLVWGSSKLVPVGYGIKK   166 185        18 #> 439  74 db_eEF1Ba Alpha_KSCN                     DGLVWGSS   167 174         7 #> 440  74 db_eEF1Ba Alpha_KSCN                     DGLVWGSS   167 174         7 #> 441  74 db_eEF1Ba Alpha_KSCN                     DGLVWGSS   167 174         7 #> 442  74 db_eEF1Ba Alpha_KSCN                     DGLVWGSS   167 174         7 #> 443  74 db_eEF1Ba Alpha_KSCN                     DGLVWGSS   167 174         7 #> 444  74 db_eEF1Ba Alpha_KSCN                     DGLVWGSS   167 174         7 #> 445  75 db_eEF1Ba Alpha_KSCN                   DGLVWGSSKL   167 176         9 #> 446  75 db_eEF1Ba Alpha_KSCN                   DGLVWGSSKL   167 176         9 #> 447  75 db_eEF1Ba Alpha_KSCN                   DGLVWGSSKL   167 176         9 #> 448  75 db_eEF1Ba Alpha_KSCN                   DGLVWGSSKL   167 176         9 #> 449  75 db_eEF1Ba Alpha_KSCN                   DGLVWGSSKL   167 176         9 #> 450  75 db_eEF1Ba Alpha_KSCN                   DGLVWGSSKL   167 176         9 #> 451  76 db_eEF1Ba Alpha_KSCN              DGLVWGSSKLVPVGY   167 181        13 #> 452  76 db_eEF1Ba Alpha_KSCN              DGLVWGSSKLVPVGY   167 181        13 #> 453  76 db_eEF1Ba Alpha_KSCN              DGLVWGSSKLVPVGY   167 181        13 #> 454  76 db_eEF1Ba Alpha_KSCN              DGLVWGSSKLVPVGY   167 181        13 #> 455  76 db_eEF1Ba Alpha_KSCN              DGLVWGSSKLVPVGY   167 181        13 #> 456  76 db_eEF1Ba Alpha_KSCN              DGLVWGSSKLVPVGY   167 181        13 #> 457  77 db_eEF1Ba Alpha_KSCN             DGLVWGSSKLVPVGYG   167 182        14 #> 458  77 db_eEF1Ba Alpha_KSCN             DGLVWGSSKLVPVGYG   167 182        14 #> 459  77 db_eEF1Ba Alpha_KSCN             DGLVWGSSKLVPVGYG   167 182        14 #> 460  77 db_eEF1Ba Alpha_KSCN             DGLVWGSSKLVPVGYG   167 182        14 #> 461  77 db_eEF1Ba Alpha_KSCN             DGLVWGSSKLVPVGYG   167 182        14 #> 462  77 db_eEF1Ba Alpha_KSCN             DGLVWGSSKLVPVGYG   167 182        14 #> 463  78 db_eEF1Ba Alpha_KSCN                LVWGSSKLVPVGY   169 181        11 #> 464  78 db_eEF1Ba Alpha_KSCN                LVWGSSKLVPVGY   169 181        11 #> 465  78 db_eEF1Ba Alpha_KSCN                LVWGSSKLVPVGY   169 181        11 #> 466  78 db_eEF1Ba Alpha_KSCN                LVWGSSKLVPVGY   169 181        11 #> 467  78 db_eEF1Ba Alpha_KSCN                LVWGSSKLVPVGY   169 181        11 #> 468  78 db_eEF1Ba Alpha_KSCN                LVWGSSKLVPVGY   169 181        11 #> 469  79 db_eEF1Ba Alpha_KSCN             KLVPVGYGIKKLQIQC   175 190        14 #> 470  79 db_eEF1Ba Alpha_KSCN             KLVPVGYGIKKLQIQC   175 190        14 #> 471  79 db_eEF1Ba Alpha_KSCN             KLVPVGYGIKKLQIQC   175 190        14 #> 472  79 db_eEF1Ba Alpha_KSCN             KLVPVGYGIKKLQIQC   175 190        14 #> 473  79 db_eEF1Ba Alpha_KSCN             KLVPVGYGIKKLQIQC   175 190        14 #> 474  79 db_eEF1Ba Alpha_KSCN             KLVPVGYGIKKLQIQC   175 190        14 #> 475  80 db_eEF1Ba Alpha_KSCN               VPVGYGIKKLQIQC   177 190        12 #> 476  80 db_eEF1Ba Alpha_KSCN               VPVGYGIKKLQIQC   177 190        12 #> 477  80 db_eEF1Ba Alpha_KSCN               VPVGYGIKKLQIQC   177 190        12 #> 478  80 db_eEF1Ba Alpha_KSCN               VPVGYGIKKLQIQC   177 190        12 #> 479  80 db_eEF1Ba Alpha_KSCN               VPVGYGIKKLQIQC   177 190        12 #> 480  80 db_eEF1Ba Alpha_KSCN               VPVGYGIKKLQIQC   177 190        12 #> 481  81 db_eEF1Ba Alpha_KSCN                       KLQIQC   185 190         5 #> 482  81 db_eEF1Ba Alpha_KSCN                       KLQIQC   185 190         5 #> 483  81 db_eEF1Ba Alpha_KSCN                       KLQIQC   185 190         5 #> 484  81 db_eEF1Ba Alpha_KSCN                       KLQIQC   185 190         5 #> 485  81 db_eEF1Ba Alpha_KSCN                       KLQIQC   185 190         5 #> 486  81 db_eEF1Ba Alpha_KSCN                       KLQIQC   185 190         5 #> 487  82 db_eEF1Ba Alpha_KSCN                 CVVEDDKVGTDM   190 201        11 #> 488  82 db_eEF1Ba Alpha_KSCN                 CVVEDDKVGTDM   190 201        11 #> 489  82 db_eEF1Ba Alpha_KSCN                 CVVEDDKVGTDM   190 201        11 #> 490  82 db_eEF1Ba Alpha_KSCN                 CVVEDDKVGTDM   190 201        11 #> 491  82 db_eEF1Ba Alpha_KSCN                 CVVEDDKVGTDM   190 201        11 #> 492  82 db_eEF1Ba Alpha_KSCN                 CVVEDDKVGTDM   190 201        11 #> 493  83 db_eEF1Ba Alpha_KSCN                CVVEDDKVGTDML   190 202        12 #> 494  83 db_eEF1Ba Alpha_KSCN                CVVEDDKVGTDML   190 202        12 #> 495  83 db_eEF1Ba Alpha_KSCN                CVVEDDKVGTDML   190 202        12 #> 496  83 db_eEF1Ba Alpha_KSCN                CVVEDDKVGTDML   190 202        12 #> 497  83 db_eEF1Ba Alpha_KSCN                CVVEDDKVGTDML   190 202        12 #> 498  83 db_eEF1Ba Alpha_KSCN                CVVEDDKVGTDML   190 202        12 #> 499  84 db_eEF1Ba Alpha_KSCN                  VVEDDKVGTDM   191 201        10 #> 500  84 db_eEF1Ba Alpha_KSCN                  VVEDDKVGTDM   191 201        10 #> 501  84 db_eEF1Ba Alpha_KSCN                  VVEDDKVGTDM   191 201        10 #> 502  84 db_eEF1Ba Alpha_KSCN                  VVEDDKVGTDM   191 201        10 #> 503  84 db_eEF1Ba Alpha_KSCN                  VVEDDKVGTDM   191 201        10 #> 504  84 db_eEF1Ba Alpha_KSCN                  VVEDDKVGTDM   191 201        10 #> 505  85 db_eEF1Ba Alpha_KSCN                 VVEDDKVGTDML   191 202        11 #> 506  85 db_eEF1Ba Alpha_KSCN                 VVEDDKVGTDML   191 202        11 #> 507  85 db_eEF1Ba Alpha_KSCN                 VVEDDKVGTDML   191 202        11 #> 508  85 db_eEF1Ba Alpha_KSCN                 VVEDDKVGTDML   191 202        11 #> 509  85 db_eEF1Ba Alpha_KSCN                 VVEDDKVGTDML   191 202        11 #> 510  85 db_eEF1Ba Alpha_KSCN                 VVEDDKVGTDML   191 202        11 #> 511  86 db_eEF1Ba Alpha_KSCN                VVEDDKVGTDMLE   191 203        12 #> 512  86 db_eEF1Ba Alpha_KSCN                VVEDDKVGTDMLE   191 203        12 #> 513  86 db_eEF1Ba Alpha_KSCN                VVEDDKVGTDMLE   191 203        12 #> 514  86 db_eEF1Ba Alpha_KSCN                VVEDDKVGTDMLE   191 203        12 #> 515  86 db_eEF1Ba Alpha_KSCN                VVEDDKVGTDMLE   191 203        12 #> 516  86 db_eEF1Ba Alpha_KSCN                VVEDDKVGTDMLE   191 203        12 #> 517  87 db_eEF1Ba Alpha_KSCN                     DDKVGTDM   194 201         7 #> 518  87 db_eEF1Ba Alpha_KSCN                     DDKVGTDM   194 201         7 #> 519  87 db_eEF1Ba Alpha_KSCN                     DDKVGTDM   194 201         7 #> 520  87 db_eEF1Ba Alpha_KSCN                     DDKVGTDM   194 201         7 #> 521  87 db_eEF1Ba Alpha_KSCN                     DDKVGTDM   194 201         7 #> 522  87 db_eEF1Ba Alpha_KSCN                     DDKVGTDM   194 201         7 #> 523  88 db_eEF1Ba Alpha_KSCN                    DDKVGTDML   194 202         8 #> 524  88 db_eEF1Ba Alpha_KSCN                    DDKVGTDML   194 202         8 #> 525  88 db_eEF1Ba Alpha_KSCN                    DDKVGTDML   194 202         8 #> 526  88 db_eEF1Ba Alpha_KSCN                    DDKVGTDML   194 202         8 #> 527  88 db_eEF1Ba Alpha_KSCN                    DDKVGTDML   194 202         8 #> 528  88 db_eEF1Ba Alpha_KSCN                    DDKVGTDML   194 202         8 #> 529  89 db_eEF1Ba Alpha_KSCN                      DKVGTDM   195 201         6 #> 530  89 db_eEF1Ba Alpha_KSCN                      DKVGTDM   195 201         6 #> 531  89 db_eEF1Ba Alpha_KSCN                      DKVGTDM   195 201         6 #> 532  89 db_eEF1Ba Alpha_KSCN                      DKVGTDM   195 201         6 #> 533  89 db_eEF1Ba Alpha_KSCN                      DKVGTDM   195 201         6 #> 534  89 db_eEF1Ba Alpha_KSCN                      DKVGTDM   195 201         6 #> 535  90 db_eEF1Ba Alpha_KSCN                     DKVGTDML   195 202         7 #> 536  90 db_eEF1Ba Alpha_KSCN                     DKVGTDML   195 202         7 #> 537  90 db_eEF1Ba Alpha_KSCN                     DKVGTDML   195 202         7 #> 538  90 db_eEF1Ba Alpha_KSCN                     DKVGTDML   195 202         7 #> 539  90 db_eEF1Ba Alpha_KSCN                     DKVGTDML   195 202         7 #> 540  90 db_eEF1Ba Alpha_KSCN                     DKVGTDML   195 202         7 #> 541  91 db_eEF1Ba Alpha_KSCN                       VGTDML   197 202         5 #> 542  91 db_eEF1Ba Alpha_KSCN                       VGTDML   197 202         5 #> 543  91 db_eEF1Ba Alpha_KSCN                       VGTDML   197 202         5 #> 544  91 db_eEF1Ba Alpha_KSCN                       VGTDML   197 202         5 #> 545  91 db_eEF1Ba Alpha_KSCN                       VGTDML   197 202         5 #> 546  91 db_eEF1Ba Alpha_KSCN                       VGTDML   197 202         5 #> 547  92 db_eEF1Ba Alpha_KSCN                       LEEQIT   202 207         5 #> 548  92 db_eEF1Ba Alpha_KSCN                       LEEQIT   202 207         5 #> 549  92 db_eEF1Ba Alpha_KSCN                       LEEQIT   202 207         5 #> 550  92 db_eEF1Ba Alpha_KSCN                       LEEQIT   202 207         5 #> 551  92 db_eEF1Ba Alpha_KSCN                       LEEQIT   202 207         5 #> 552  92 db_eEF1Ba Alpha_KSCN                       LEEQIT   202 207         5 #> 553  93 db_eEF1Ba Alpha_KSCN                      LEEQITA   202 208         6 #> 554  93 db_eEF1Ba Alpha_KSCN                      LEEQITA   202 208         6 #> 555  93 db_eEF1Ba Alpha_KSCN                      LEEQITA   202 208         6 #> 556  93 db_eEF1Ba Alpha_KSCN                      LEEQITA   202 208         6 #> 557  93 db_eEF1Ba Alpha_KSCN                      LEEQITA   202 208         6 #> 558  93 db_eEF1Ba Alpha_KSCN                      LEEQITA   202 208         6 #> 559  94 db_eEF1Ba Alpha_KSCN                     LEEQITAF   202 209         7 #> 560  94 db_eEF1Ba Alpha_KSCN                     LEEQITAF   202 209         7 #> 561  94 db_eEF1Ba Alpha_KSCN                     LEEQITAF   202 209         7 #> 562  94 db_eEF1Ba Alpha_KSCN                     LEEQITAF   202 209         7 #> 563  94 db_eEF1Ba Alpha_KSCN                     LEEQITAF   202 209         7 #> 564  94 db_eEF1Ba Alpha_KSCN                     LEEQITAF   202 209         7 #> 565  95 db_eEF1Ba Alpha_KSCN                       EEQITA   203 208         5 #> 566  95 db_eEF1Ba Alpha_KSCN                       EEQITA   203 208         5 #> 567  95 db_eEF1Ba Alpha_KSCN                       EEQITA   203 208         5 #> 568  95 db_eEF1Ba Alpha_KSCN                       EEQITA   203 208         5 #> 569  95 db_eEF1Ba Alpha_KSCN                       EEQITA   203 208         5 #> 570  95 db_eEF1Ba Alpha_KSCN                       EEQITA   203 208         5 #> 571  96 db_eEF1Ba Alpha_KSCN                      EEQITAF   203 209         6 #> 572  96 db_eEF1Ba Alpha_KSCN                      EEQITAF   203 209         6 #> 573  96 db_eEF1Ba Alpha_KSCN                      EEQITAF   203 209         6 #> 574  96 db_eEF1Ba Alpha_KSCN                      EEQITAF   203 209         6 #> 575  96 db_eEF1Ba Alpha_KSCN                      EEQITAF   203 209         6 #> 576  96 db_eEF1Ba Alpha_KSCN                      EEQITAF   203 209         6 #> 577  97 db_eEF1Ba Alpha_KSCN                     EEQITAFE   203 210         7 #> 578  97 db_eEF1Ba Alpha_KSCN                     EEQITAFE   203 210         7 #> 579  97 db_eEF1Ba Alpha_KSCN                     EEQITAFE   203 210         7 #> 580  97 db_eEF1Ba Alpha_KSCN                     EEQITAFE   203 210         7 #> 581  97 db_eEF1Ba Alpha_KSCN                     EEQITAFE   203 210         7 #> 582  97 db_eEF1Ba Alpha_KSCN                     EEQITAFE   203 210         7 #> 583  98 db_eEF1Ba Alpha_KSCN                       EQITAF   204 209         5 #> 584  98 db_eEF1Ba Alpha_KSCN                       EQITAF   204 209         5 #> 585  98 db_eEF1Ba Alpha_KSCN                       EQITAF   204 209         5 #> 586  98 db_eEF1Ba Alpha_KSCN                       EQITAF   204 209         5 #> 587  98 db_eEF1Ba Alpha_KSCN                       EQITAF   204 209         5 #> 588  98 db_eEF1Ba Alpha_KSCN                       EQITAF   204 209         5 #> 589  99 db_eEF1Ba Alpha_KSCN                        QITAF   205 209         4 #> 590  99 db_eEF1Ba Alpha_KSCN                        QITAF   205 209         4 #> 591  99 db_eEF1Ba Alpha_KSCN                        QITAF   205 209         4 #> 592  99 db_eEF1Ba Alpha_KSCN                        QITAF   205 209         4 #> 593  99 db_eEF1Ba Alpha_KSCN                        QITAF   205 209         4 #> 594  99 db_eEF1Ba Alpha_KSCN                        QITAF   205 209         4 #> 595 100 db_eEF1Ba Alpha_KSCN                     FEDYVQSM   209 216         7 #> 596 100 db_eEF1Ba Alpha_KSCN                     FEDYVQSM   209 216         7 #> 597 100 db_eEF1Ba Alpha_KSCN                     FEDYVQSM   209 216         7 #> 598 100 db_eEF1Ba Alpha_KSCN                     FEDYVQSM   209 216         7 #> 599 100 db_eEF1Ba Alpha_KSCN                     FEDYVQSM   209 216         7 #> 600 100 db_eEF1Ba Alpha_KSCN                     FEDYVQSM   209 216         7 #> 601 101 db_eEF1Ba Alpha_KSCN                      EDYVQSM   210 216         6 #> 602 101 db_eEF1Ba Alpha_KSCN                      EDYVQSM   210 216         6 #> 603 101 db_eEF1Ba Alpha_KSCN                      EDYVQSM   210 216         6 #> 604 101 db_eEF1Ba Alpha_KSCN                      EDYVQSM   210 216         6 #> 605 101 db_eEF1Ba Alpha_KSCN                      EDYVQSM   210 216         6 #> 606 101 db_eEF1Ba Alpha_KSCN                      EDYVQSM   210 216         6 #> 607 102 db_eEF1Ba Alpha_KSCN                     EDYVQSMD   210 217         7 #> 608 102 db_eEF1Ba Alpha_KSCN                     EDYVQSMD   210 217         7 #> 609 102 db_eEF1Ba Alpha_KSCN                     EDYVQSMD   210 217         7 #> 610 102 db_eEF1Ba Alpha_KSCN                     EDYVQSMD   210 217         7 #> 611 102 db_eEF1Ba Alpha_KSCN                     EDYVQSMD   210 217         7 #> 612 102 db_eEF1Ba Alpha_KSCN                     EDYVQSMD   210 217         7 #> 613 103 db_eEF1Ba Alpha_KSCN                    EDYVQSMDV   210 218         8 #> 614 103 db_eEF1Ba Alpha_KSCN                    EDYVQSMDV   210 218         8 #> 615 103 db_eEF1Ba Alpha_KSCN                    EDYVQSMDV   210 218         8 #> 616 103 db_eEF1Ba Alpha_KSCN                    EDYVQSMDV   210 218         8 #> 617 103 db_eEF1Ba Alpha_KSCN                    EDYVQSMDV   210 218         8 #> 618 103 db_eEF1Ba Alpha_KSCN                    EDYVQSMDV   210 218         8 #> 619 104 db_eEF1Ba Alpha_KSCN                       DYVQSM   211 216         5 #> 620 104 db_eEF1Ba Alpha_KSCN                       DYVQSM   211 216         5 #> 621 104 db_eEF1Ba Alpha_KSCN                       DYVQSM   211 216         5 #> 622 104 db_eEF1Ba Alpha_KSCN                       DYVQSM   211 216         5 #> 623 104 db_eEF1Ba Alpha_KSCN                       DYVQSM   211 216         5 #> 624 104 db_eEF1Ba Alpha_KSCN                       DYVQSM   211 216         5 #> 625 105 db_eEF1Ba Alpha_KSCN                       YVQSMD   212 217         5 #> 626 105 db_eEF1Ba Alpha_KSCN                       YVQSMD   212 217         5 #> 627 105 db_eEF1Ba Alpha_KSCN                       YVQSMD   212 217         5 #> 628 105 db_eEF1Ba Alpha_KSCN                       YVQSMD   212 217         5 #> 629 105 db_eEF1Ba Alpha_KSCN                       YVQSMD   212 217         5 #> 630 105 db_eEF1Ba Alpha_KSCN                       YVQSMD   212 217         5 #> 631 106 db_eEF1Ba Alpha_KSCN                        DVAAF   217 221         4 #> 632 106 db_eEF1Ba Alpha_KSCN                        DVAAF   217 221         4 #> 633 106 db_eEF1Ba Alpha_KSCN                        DVAAF   217 221         4 #> 634 106 db_eEF1Ba Alpha_KSCN                        DVAAF   217 221         4 #> 635 106 db_eEF1Ba Alpha_KSCN                        DVAAF   217 221         4 #> 636 106 db_eEF1Ba Alpha_KSCN                        DVAAF   217 221         4 #>     Exposure frac_deut_uptake err_frac_deut_uptake hr_frac_deut_uptake #> 1      0.167      0.324042534         0.0118412325         0.638755583 #> 2      1.000      0.510235680         0.0111972607         0.905258040 #> 3      5.000      0.628887588         0.0092988257         0.980189861 #> 4     25.000      0.845956363         0.0077415269         0.983172400 #> 5    150.000      0.969827228         0.0072640522         0.985446263 #> 6   1440.000      1.000000000         0.0098867942         0.996731235 #> 7      0.167      0.740605640         0.0078015112         0.673466708 #> 8      1.000      0.954487625         0.0108346716         0.936251651 #> 9      5.000      1.016037325         0.0074489776         0.998433209 #> 10    25.000      0.997351647         0.0076586748         0.999963044 #> 11   150.000      0.995939721         0.0078418844         0.999963044 #> 12  1440.000      1.000000000         0.0087485243         0.999963044 #> 13     0.167      0.754414870         0.0111453765         0.664486535 #> 14     1.000      0.961392012         0.0126331876         0.933790548 #> 15     5.000      1.009953685         0.0069382688         0.998012164 #> 16    25.000      1.008370674         0.0172503195         0.999647863 #> 17   150.000      1.000648246         0.0064314485         0.999647863 #> 18  1440.000      1.000000000         0.0084164757         0.999647863 #> 19     0.167      0.691290596         0.0129509882         0.691289700 #> 20     1.000      0.948083459         0.0076117390         0.948336915 #> 21     5.000      1.008997475         0.0056339862         0.995246826 #> 22    25.000      0.979545877         0.0094473488         0.996119892 #> 23   150.000      0.995315878         0.0124789587         0.996119892 #> 24  1440.000      1.000000000         0.0024030675         0.996119892 #> 25     0.167      0.696042168         0.0122528407         0.631925890 #> 26     1.000      0.946339857         0.0127457159         0.923771783 #> 27     5.000      1.003480601         0.0054147606         0.995855623 #> 28    25.000      0.993917450         0.0039493847         0.997892112 #> 29   150.000      0.993895988         0.0042759422         0.997892112 #> 30  1440.000      1.000000000         0.0012983510         0.997892112 #> 31     0.167      0.312330516         0.0067446642         0.490832709 #> 32     1.000      0.699214514         0.0171776028         0.724037788 #> 33     5.000      0.943153832         0.0170814478         0.922287687 #> 34    25.000      1.005097359         0.0177660138         0.972142343 #> 35   150.000      1.015130958         0.0132737923         1.004483456 #> 36  1440.000      1.000000000         0.0167829385         1.004629535 #> 37     0.167      0.236352601         0.0080126740         0.232661264 #> 38     1.000      0.570048176         0.0207703281         0.578611446 #> 39     5.000      0.888247947         0.0268469879         0.880639088 #> 40    25.000      0.981487001         0.0190053028         0.987549369 #> 41   150.000      1.022539097         0.0193811411         1.009594292 #> 42  1440.000      1.000000000         0.0222654561         1.009594738 #> 43     0.167      0.279674741         0.0103969164         0.257511507 #> 44     1.000      0.590379365         0.0139300125         0.582196566 #> 45     5.000      0.916549148         0.0250497872         0.891512707 #> 46    25.000      0.996655671         0.0140289576         0.989751213 #> 47   150.000      1.005218248         0.0162035324         1.008430185 #> 48  1440.000      1.000000000         0.0192420970         1.008430470 #> 49     0.167      0.268590325         0.0260355473         0.300248958 #> 50     1.000      0.505193710         0.0147080300         0.558302590 #> 51     5.000      0.867351985         0.0334161939         0.912550770 #> 52    25.000      1.010807739         0.0231461009         0.986606789 #> 53   150.000      1.032786800         0.0226742994         1.010871453 #> 54  1440.000      1.000000000         0.0243391899         1.010954040 #> 55     0.167      0.296982778         0.0049373232         0.338617681 #> 56     1.000      0.576990364         0.0129033701         0.592572453 #> 57     5.000      0.865018853         0.0182068840         0.919200476 #> 58    25.000      0.989908007         0.0129195442         0.983536524 #> 59   150.000      1.011432980         0.0157662677         1.009221630 #> 60  1440.000      1.000000000         0.0170834306         1.009389187 #> 61     0.167      0.527410469         0.0089959972         0.394425623 #> 62     1.000      0.778510994         0.0102064926         0.679933318 #> 63     5.000      0.950842259         0.0131768556         0.953091221 #> 64    25.000      0.968051747         0.0078760804         0.995839819 #> 65   150.000      0.989924765         0.0041970509         1.006537589 #> 66  1440.000      1.000000000         0.0057959709         1.007762254 #> 67     0.167      0.621963704         0.0050999506         0.444838475 #> 68     1.000      0.820797990         0.0116121955         0.734539847 #> 69     5.000      0.965679820         0.0092889124         0.968041889 #> 70    25.000      0.989766065         0.0084228257         0.995753874 #> 71   150.000      0.997252408         0.0056233932         1.005108303 #> 72  1440.000      1.000000000         0.0051997047         1.006658887 #> 73     0.167      0.681755805         0.0081417696         0.599933344 #> 74     1.000      0.887670032         0.0061706896         0.854172171 #> 75     5.000      0.997435211         0.0036837159         0.980744906 #> 76    25.000      0.987043551         0.0107270400         0.990271127 #> 77   150.000      1.000595490         0.0015441435         1.002269317 #> 78  1440.000      1.000000000         0.0021795195         1.004814735 #> 79     0.167      0.729171139         0.0074244542         0.646428351 #> 80     1.000      0.929615704         0.0129495639         0.883412943 #> 81     5.000      1.002225730         0.0063978251         0.983655778 #> 82    25.000      1.000171828         0.0084751809         0.989522297 #> 83   150.000      0.998572101         0.0057961024         0.999356129 #> 84  1440.000      1.000000000         0.0059172672         1.004270281 #> 85     0.167      0.728821175         0.0047554137         0.706640882 #> 86     1.000      0.944237185         0.0155131325         0.916072078 #> 87     5.000      0.998009653         0.0034943263         0.980860268 #> 88    25.000      0.990955538         0.0036478586         0.985954598 #> 89   150.000      0.993493732         0.0034635953         0.997939773 #> 90  1440.000      1.000000000         0.0036928234         1.002541741 #> 91     0.167      0.738278461         0.0157769826         0.738278160 #> 92     1.000      0.960670965         0.0189384619         0.960859274 #> 93     5.000      1.009572602         0.0140961054         0.999321934 #> 94    25.000      0.991614699         0.0111285092         1.000038689 #> 95   150.000      0.998438755         0.0158966317         1.000038689 #> 96  1440.000      1.000000000         0.0150584127         1.000038689 #> 97     0.167      0.733001328         0.0037775734         0.722500400 #> 98     1.000      0.939860744         0.0097412517         0.926100629 #> 99     5.000      1.011865715         0.0037504809         0.982995230 #> 100   25.000      1.004232762         0.0045776460         0.987544171 #> 101  150.000      1.001026902         0.0042439847         0.998596664 #> 102 1440.000      1.000000000         0.0048720619         1.002772804 #> 103    0.167      0.744380126         0.0053295184         0.720338052 #> 104    1.000      0.926754531         0.0085358283         0.922645128 #> 105    5.000      1.007944181         0.0061244670         0.981468914 #> 106   25.000      0.992149247         0.0072735718         0.986722617 #> 107  150.000      1.003032051         0.0039285025         0.999113058 #> 108 1440.000      1.000000000         0.0053456075         1.003046221 #> 109    0.167      0.755318594         0.0053234569         0.746195797 #> 110    1.000      0.950135593         0.0074663360         0.956616260 #> 111    5.000      1.001637112         0.0097253665         0.998013899 #> 112   25.000      0.988074787         0.0076499056         0.998785768 #> 113  150.000      0.997161467         0.0086696684         0.998785768 #> 114 1440.000      1.000000000         0.0088269159         0.998785768 #> 115    0.167      0.819903123         0.0111713885         0.722526581 #> 116    1.000      0.961523537         0.0107790670         0.924355369 #> 117    5.000      1.014468890         0.0090346732         0.982311854 #> 118   25.000      0.984916778         0.0066466272         0.987084426 #> 119  150.000      1.020228274         0.0123213096         0.998559791 #> 120 1440.000      1.000000000         0.0093080279         1.002662479 #> 121    0.167      0.756251607         0.0067687535         0.717565331 #> 122    1.000      0.937142313         0.0056082620         0.918426935 #> 123    5.000      0.998880781         0.0076868894         0.979628849 #> 124   25.000      0.995264082         0.0074869155         0.985807689 #> 125  150.000      0.998949144         0.0072796830         0.999765547 #> 126 1440.000      1.000000000         0.0077298454         1.003380393 #> 127    0.167      0.672325003         0.0042282226         0.701704704 #> 128    1.000      0.871495860         0.0129761743         0.897422569 #> 129    5.000      0.961573667         0.0065718400         0.970839133 #> 130   25.000      0.980379116         0.0135896727         0.982547491 #> 131  150.000      1.018569601         0.0068050324         1.002951669 #> 132 1440.000      1.000000000         0.0085990838         1.005051246 #> 133    0.167      0.144253493         0.0126303968         0.144253493 #> 134    1.000      0.485165920         0.0265676320         0.485165920 #> 135    5.000      0.870928221         0.0207733029         0.870928221 #> 136   25.000      0.981793542         0.0084324810         0.981793542 #> 137  150.000      0.987831007         0.0093336167         0.987831007 #> 138 1440.000      1.000000000         0.0119307674         1.000000000 #> 139    0.167      0.719862653         0.0271514046         0.637506558 #> 140    1.000      0.896866258         0.0314454589         0.802564548 #> 141    5.000      1.022811110         0.0410527482         0.977230545 #> 142   25.000      1.039254350         0.0294435125         0.991991729 #> 143  150.000      0.976087424         0.0401686301         0.999551691 #> 144 1440.000      1.000000000         0.0370105083         1.000017458 #> 145    0.167      0.603832466         0.0062615780         0.649691115 #> 146    1.000      0.813210398         0.0105994319         0.811486049 #> 147    5.000      0.986392571         0.0094008945         0.978523185 #> 148   25.000      0.985873375         0.0042826596         0.992244460 #> 149  150.000      0.998846173         0.0028796439         0.999652538 #> 150 1440.000      1.000000000         0.0034941142         1.000032995 #> 151    0.167      0.601157022         0.0071728467         0.659884652 #> 152    1.000      0.832477325         0.0148900346         0.823931686 #> 153    5.000      0.975747784         0.0185939807         0.978363218 #> 154   25.000      0.980715422         0.0194150882         0.990392910 #> 155  150.000      0.999212728         0.0099454828         0.999573497 #> 156 1440.000      1.000000000         0.0067632602         1.000249379 #> 157    0.167      0.566942570         0.0155001583         0.635832969 #> 158    1.000      0.813029443         0.0175967912         0.807508521 #> 159    5.000      0.996686788         0.0152439623         0.976424633 #> 160   25.000      0.992743343         0.0141887485         0.990144401 #> 161  150.000      0.998133575         0.0166580545         0.999406720 #> 162 1440.000      1.000000000         0.0078138762         1.000229963 #> 163    0.167      0.655383470         0.0089797555         0.690620499 #> 164    1.000      0.834237192         0.0127318193         0.837883873 #> 165    5.000      0.985247205         0.0081191226         0.981896996 #> 166   25.000      0.992888596         0.0055867234         0.993075090 #> 167  150.000      0.997430152         0.0047156095         0.999766337 #> 168 1440.000      1.000000000         0.0047754422         1.000010317 #> 169    0.167      0.655235839         0.0081960388         0.694365555 #> 170    1.000      0.850703378         0.0122022136         0.845098095 #> 171    5.000      0.991358128         0.0145817512         0.980573440 #> 172   25.000      0.996429123         0.0131035307         0.991004752 #> 173  150.000      0.996148858         0.0118140712         0.999748345 #> 174 1440.000      1.000000000         0.0155387618         1.000252875 #> 175    0.167      0.585126599         0.0194750335         0.666152144 #> 176    1.000      0.791298195         0.0139699133         0.826533026 #> 177    5.000      0.975378081         0.0164024269         0.978755725 #> 178   25.000      0.976340245         0.0182058195         0.990695421 #> 179  150.000      0.994376726         0.0130231989         0.999589006 #> 180 1440.000      1.000000000         0.0162566998         1.000231376 #> 181    0.167      0.742000361         0.0118761706         0.740796972 #> 182    1.000      0.832730511         0.0170042415         0.868883813 #> 183    5.000      0.983525403         0.0183078666         0.985190867 #> 184   25.000      0.992198538         0.0200298908         0.994030806 #> 185  150.000      1.001717208         0.0170007633         0.999843899 #> 186 1440.000      1.000000000         0.0224514598         0.999981160 #> 187    0.167      0.740820848         0.0145692153         0.740820412 #> 188    1.000      0.873210313         0.0164377555         0.873211425 #> 189    5.000      0.984799160         0.0185738314         0.984791950 #> 190   25.000      0.994019809         0.0173270468         0.994034873 #> 191  150.000      1.000247765         0.0180938516         1.000081940 #> 192 1440.000      1.000000000         0.0245636398         1.000157293 #> 193    0.167      0.687268499         0.0073559334         0.733935343 #> 194    1.000      0.868292930         0.0095999152         0.872129933 #> 195    5.000      0.977876337         0.0127022721         0.981978873 #> 196   25.000      0.970588310         0.0112977777         0.991540296 #> 197  150.000      0.997546209         0.0123271910         1.000177731 #> 198 1440.000      1.000000000         0.0145363721         1.000423746 #> 199    0.167      0.251197506         0.0089997776         0.243309149 #> 200    1.000      0.538061229         0.0140071706         0.510670736 #> 201    5.000      0.857533722         0.0253273267         0.827482844 #> 202   25.000      0.986908503         0.0128216288         0.947541500 #> 203  150.000      0.992882817         0.0111714236         0.984898286 #> 204 1440.000      1.000000000         0.0096361716         1.000002311 #> 205    0.167      0.241655948         0.0089963674         0.241655948 #> 206    1.000      0.506017616         0.0121575951         0.506017616 #> 207    5.000      0.822428035         0.0279985504         0.822428035 #> 208   25.000      0.941985968         0.0223857100         0.941985968 #> 209  150.000      0.985014920         0.0116973208         0.985014920 #> 210 1440.000      1.000000000         0.0164773118         1.000000000 #> 211    0.167      0.947624595         0.0027306351         0.973941002 #> 212    1.000      0.987043459         0.0031398311         0.988612311 #> 213    5.000      1.015047598         0.0044269544         0.999706528 #> 214   25.000      1.003096366         0.0086283407         1.002512095 #> 215  150.000      1.006804014         0.0069009429         1.002513037 #> 216 1440.000      1.000000000         0.0027899169         1.002513037 #> 217    0.167      0.970455694         0.0083084909         0.978619427 #> 218    1.000      0.970746005         0.0086600073         0.990362769 #> 219    5.000      1.017666462         0.0124581984         0.998414415 #> 220   25.000      0.978863753         0.0082037698         1.001876175 #> 221  150.000      0.993930064         0.0086185331         1.001884777 #> 222 1440.000      1.000000000         0.0075110638         1.001884777 #> 223    0.167      1.005319351         0.0143397359         0.993329097 #> 224    1.000      1.005419151         0.0100698373         1.000000000 #> 225    5.000      1.020827395         0.0078519465         1.000000000 #> 226   25.000      1.005065091         0.0078038359         1.000000000 #> 227  150.000      1.004567608         0.0064866444         1.000000000 #> 228 1440.000      1.000000000         0.0083648420         1.000000000 #> 229    0.167      1.006963836         0.0138582109         0.993329097 #> 230    1.000      0.991750252         0.0155400830         1.000000000 #> 231    5.000      1.024345203         0.0150083577         1.000000000 #> 232   25.000      0.991230683         0.0148310488         1.000000000 #> 233  150.000      1.013264779         0.0155870954         1.000000000 #> 234 1440.000      1.000000000         0.0194012475         1.000000000 #> 235    0.167      0.991377953         0.0036704996         0.993329097 #> 236    1.000      0.998173008         0.0125906037         1.000000000 #> 237    5.000      0.999234728         0.0052931891         1.000000000 #> 238   25.000      0.990270249         0.0068522408         1.000000000 #> 239  150.000      0.988548950         0.0050252130         1.000000000 #> 240 1440.000      1.000000000         0.0047797976         1.000000000 #> 241    0.167      1.006957103         0.0104996899         0.993329097 #> 242    1.000      1.000380341         0.0020417528         1.000000000 #> 243    5.000      1.013280585         0.0022875714         1.000000000 #> 244   25.000      0.998433526         0.0037842407         1.000000000 #> 245  150.000      0.999342941         0.0062924511         1.000000000 #> 246 1440.000      1.000000000         0.0022371299         1.000000000 #> 247    0.167      1.000393465         0.0072732304         0.993329097 #> 248    1.000      0.994931430         0.0079265165         1.000000000 #> 249    5.000      1.014989855         0.0059554683         1.000000000 #> 250   25.000      0.996616507         0.0043648821         1.000000000 #> 251  150.000      0.987452348         0.0063620727         1.000000000 #> 252 1440.000      1.000000000         0.0055144915         1.000000000 #> 253    0.167      1.001558901         0.0099268405         0.989639963 #> 254    1.000      0.958859724         0.0174955458         1.000000000 #> 255    5.000      1.011482409         0.0093176427         1.000000000 #> 256   25.000      0.988823851         0.0129415008         1.000000000 #> 257  150.000      0.994227481         0.0101149460         1.000000000 #> 258 1440.000      1.000000000         0.0127522453         1.000000000 #> 259    0.167      1.005158769         0.0113784167         0.989120644 #> 260    1.000      0.956293129         0.0100532639         1.000000000 #> 261    5.000      1.009240052         0.0119967714         1.000000000 #> 262   25.000      0.978882126         0.0157865933         1.000000000 #> 263  150.000      1.000421644         0.0107456437         1.000000000 #> 264 1440.000      1.000000000         0.0132511560         1.000000000 #> 265    0.167      1.005396438         0.0099247534         0.988803085 #> 266    1.000      0.961773935         0.0091872432         1.000000000 #> 267    5.000      1.012017985         0.0108356781         1.000000000 #> 268   25.000      0.977284722         0.0134354568         1.000000000 #> 269  150.000      0.992944463         0.0108193763         1.000000000 #> 270 1440.000      1.000000000         0.0131062435         1.000000000 #> 271    0.167      0.971063885         0.0151858941         0.971063885 #> 272    1.000      0.990575986         0.0128266220         0.999999999 #> 273    5.000      1.007289693         0.0142400131         1.000000000 #> 274   25.000      0.959111345         0.0124858443         1.000000000 #> 275  150.000      0.983973895         0.0136915969         1.000000000 #> 276 1440.000      1.000000000         0.0179179380         1.000000000 #> 277    0.167      0.996817301         0.0137032621         0.991480896 #> 278    1.000      1.006974607         0.0224778661         1.000000000 #> 279    5.000      1.011879547         0.0138427322         1.000000000 #> 280   25.000      0.996909302         0.0210645313         1.000000000 #> 281  150.000      0.988230529         0.0146127220         1.000000000 #> 282 1440.000      1.000000000         0.0177983229         1.000000000 #> 283    0.167      1.015077390         0.0215401930         0.993329097 #> 284    1.000      0.951476186         0.0266148475         1.000000000 #> 285    5.000      1.015924469         0.0240016584         1.000000000 #> 286   25.000      0.953138269         0.0236849801         1.000000000 #> 287  150.000      0.984525515         0.0324868895         1.000000000 #> 288 1440.000      1.000000000         0.0290362659         1.000000000 #> 289    0.167      0.952820146         0.0051404913         0.962416583 #> 290    1.000      0.973051988         0.0138243866         0.980060372 #> 291    5.000      1.000203551         0.0044533245         0.993224457 #> 292   25.000      0.977449963         0.0050473954         0.994055723 #> 293  150.000      0.990581574         0.0054397133         0.994055724 #> 294 1440.000      1.000000000         0.0036407098         0.994055724 #> 295    0.167      0.961073319         0.0061499039         0.963377803 #> 296    1.000      0.980089082         0.0068526622         0.980639485 #> 297    5.000      1.018021025         0.0075761398         0.993430809 #> 298   25.000      0.985987798         0.0097499946         0.994385960 #> 299  150.000      0.999532317         0.0027896339         0.994385961 #> 300 1440.000      1.000000000         0.0032597945         0.994385961 #> 301    0.167      0.959033632         0.0044902479         0.964915452 #> 302    1.000      0.977131880         0.0057672803         0.981722634 #> 303    5.000      1.012051593         0.0031389509         0.993747645 #> 304   25.000      0.986272112         0.0066972872         0.994947358 #> 305  150.000      1.001853763         0.0022585592         0.994947365 #> 306 1440.000      1.000000000         0.0027992839         0.994947365 #> 307    0.167      0.974733800         0.0139618987         0.962005865 #> 308    1.000      0.994903330         0.0124268466         0.980639485 #> 309    5.000      1.019272276         0.0123054058         0.993430809 #> 310   25.000      0.998925063         0.0127189162         0.994385960 #> 311  150.000      1.011867588         0.0135453014         0.994385961 #> 312 1440.000      1.000000000         0.0168173441         0.994385961 #> 313    0.167      0.966980281         0.0047612882         0.960315838 #> 314    1.000      0.981194100         0.0068293467         0.980060372 #> 315    5.000      1.015173807         0.0040852603         0.993224457 #> 316   25.000      0.985364658         0.0076746047         0.994055723 #> 317  150.000      1.000673827         0.0031104555         0.994055724 #> 318 1440.000      1.000000000         0.0036459913         0.994055724 #> 319    0.167      1.004143552         0.0032941291         0.993329097 #> 320    1.000      0.977284737         0.0068386570         1.000000000 #> 321    5.000      1.011685865         0.0045603231         1.000000000 #> 322   25.000      0.984148137         0.0071068479         1.000000000 #> 323  150.000      0.995122308         0.0046392669         1.000000000 #> 324 1440.000      1.000000000         0.0030674575         1.000000000 #> 325    0.167      1.003639598         0.0076920795         0.993329097 #> 326    1.000      0.993760019         0.0100566787         1.000000000 #> 327    5.000      1.010269079         0.0089896474         1.000000000 #> 328   25.000      0.985180613         0.0116774199         1.000000000 #> 329  150.000      0.987928835         0.0068363200         1.000000000 #> 330 1440.000      1.000000000         0.0097662586         1.000000000 #> 331    0.167      0.294294061         0.0062846944         0.307345868 #> 332    1.000      0.481686280         0.0092401634         0.509661809 #> 333    5.000      0.619800429         0.0075645056         0.634144556 #> 334   25.000      0.811963778         0.0119864821         0.826795575 #> 335  150.000      0.982362182         0.0093325928         0.987132935 #> 336 1440.000      1.000000000         0.0121897513         1.000000000 #> 337    0.167      0.243638447         0.0049191714         0.299612587 #> 338    1.000      0.404537112         0.0112818308         0.496835274 #> 339    5.000      0.529911173         0.0088058749         0.621953792 #> 340   25.000      0.750141605         0.0147204549         0.816443999 #> 341  150.000      0.989048674         0.0059620251         0.987194536 #> 342 1440.000      1.000000000         0.0047838807         1.000000000 #> 343    0.167      0.309352618         0.0116993113         0.309352618 #> 344    1.000      0.514360950         0.0121243682         0.514360950 #> 345    5.000      0.636591478         0.0087872447         0.636591478 #> 346   25.000      0.829122795         0.0147045893         0.829122795 #> 347  150.000      0.987794349         0.0128932567         0.987794349 #> 348 1440.000      1.000000000         0.0169515001         1.000000000 #> 349    0.167      0.212997601         0.0026257487         0.216534429 #> 350    1.000      0.302771955         0.0115602043         0.308579943 #> 351    5.000      0.340177833         0.0069606694         0.383444379 #> 352   25.000      0.552646878         0.0112707975         0.585591194 #> 353  150.000      0.913280004         0.0102152956         0.934198379 #> 354 1440.000      1.000000000         0.0152766753         0.999457045 #> 355    0.167      0.326170747         0.0039846030         0.250387007 #> 356    1.000      0.462229528         0.0085442888         0.354412108 #> 357    5.000      0.558017780         0.0059042703         0.463407498 #> 358   25.000      0.661730356         0.0147539523         0.612928071 #> 359  150.000      0.937257039         0.0087866351         0.934652776 #> 360 1440.000      1.000000000         0.0102126202         0.999702260 #> 361    0.167      0.425787778         0.0057563864         0.224658488 #> 362    1.000      0.591644453         0.0060164143         0.320517543 #> 363    5.000      0.701692549         0.0045759519         0.422960741 #> 364   25.000      0.776610277         0.0184189336         0.584487048 #> 365  150.000      0.980258879         0.0052771492         0.931198793 #> 366 1440.000      1.000000000         0.0050422280         0.997955982 #> 367    0.167      0.043650162         0.0063590076         0.020448825 #> 368    1.000      0.110904267         0.0048951005         0.061414477 #> 369    5.000      0.202772982         0.0053878302         0.139865009 #> 370   25.000      0.545404259         0.0155597399         0.437090645 #> 371  150.000      0.950018956         0.0143741039         0.956650354 #> 372 1440.000      1.000000000         0.0136598193         0.995410214 #> 373    0.167      0.014990611         0.0031026000         0.016362659 #> 374    1.000      0.054207064         0.0094528807         0.051736271 #> 375    5.000      0.122914774         0.0077357448         0.126180605 #> 376   25.000      0.415278613         0.0201564458         0.413089303 #> 377  150.000      0.946965446         0.0063209776         0.949712384 #> 378 1440.000      1.000000000         0.0055835401         0.997984812 #> 379    0.167      0.274101411         0.0095830305         0.274070282 #> 380    1.000      0.442861306         0.0082311877         0.443765764 #> 381    5.000      0.539867575         0.0103636359         0.538592691 #> 382   25.000      0.816881117         0.0123793454         0.817421607 #> 383  150.000      0.999926568         0.0140574846         0.999610042 #> 384 1440.000      1.000000000         0.0082183118         1.000168373 #> 385    0.167      0.441038612         0.0178831293         0.352990823 #> 386    1.000      0.566324158         0.0059114069         0.507519615 #> 387    5.000      0.646386750         0.0098774377         0.595362553 #> 388   25.000      0.844337857         0.0133983544         0.830225690 #> 389  150.000      1.009684165         0.0089659707         0.999338170 #> 390 1440.000      1.000000000         0.0116515155         1.000220456 #> 391    0.167      0.428791865         0.0150804389         0.381328212 #> 392    1.000      0.524968629         0.0123473823         0.532511666 #> 393    5.000      0.609458025         0.0061321778         0.620629033 #> 394   25.000      0.832470032         0.0116074277         0.836027503 #> 395  150.000      0.982490166         0.0091939980         0.999211868 #> 396 1440.000      1.000000000         0.0125868157         1.000238685 #> 397    0.167      0.377501084         0.0118243577         0.432818549 #> 398    1.000      0.509045484         0.0072743196         0.580664836 #> 399    5.000      0.615579242         0.0125351376         0.677106921 #> 400   25.000      0.803264859         0.0267848822         0.828111092 #> 401  150.000      0.968524382         0.0092709697         0.994022299 #> 402 1440.000      1.000000000         0.0068732787         0.998919144 #> 403    0.167      0.517766293         0.0083531132         0.393561172 #> 404    1.000      0.629971675         0.0066581196         0.543591358 #> 405    5.000      0.689988476         0.0143090361         0.631768300 #> 406   25.000      0.884911777         0.0085049424         0.838686668 #> 407  150.000      1.001473963         0.0073955917         0.999152479 #> 408 1440.000      1.000000000         0.0077180164         1.000246497 #> 409    0.167      0.418871621         0.0077933321         0.443100962 #> 410    1.000      0.542297729         0.0146249186         0.591260629 #> 411    5.000      0.672715581         0.0125474981         0.689046718 #> 412   25.000      0.841027699         0.0234986700         0.830597192 #> 413  150.000      0.982280101         0.0118644307         0.993292982 #> 414 1440.000      1.000000000         0.0142004849         0.998841067 #> 415    0.167      0.644856700         0.0224065099         0.428763453 #> 416    1.000      0.798228922         0.0065498480         0.576358962 #> 417    5.000      0.866563828         0.0075110751         0.664178956 #> 418   25.000      0.923187094         0.0067622763         0.846969900 #> 419  150.000      0.998295312         0.0059561501         0.998965581 #> 420 1440.000      1.000000000         0.0066036928         1.000268819 #> 421    0.167      0.481968964         0.0126512660         0.468204456 #> 422    1.000      0.641586621         0.0191062314         0.617827518 #> 423    5.000      0.735659978         0.0156405390         0.718665772 #> 424   25.000      0.874877129         0.0119931559         0.837829364 #> 425  150.000      0.963248017         0.0093382741         0.991201189 #> 426 1440.000      1.000000000         0.0131443155         0.998651452 #> 427    0.167      0.356103829         0.0018012966         0.305437503 #> 428    1.000      0.494707655         0.0058885435         0.463276078 #> 429    5.000      0.620479744         0.0077392916         0.592005266 #> 430   25.000      0.856061868         0.0106333718         0.797911352 #> 431  150.000      0.989211271         0.0058465609         0.993888336 #> 432 1440.000      1.000000000         0.0028449669         0.999300756 #> 433    0.167      0.444277219         0.0026205994         0.434178194 #> 434    1.000      0.587068081         0.0070752258         0.599180629 #> 435    5.000      0.708403227         0.0086151708         0.745439067 #> 436   25.000      0.909461115         0.0084752624         0.852972752 #> 437  150.000      0.996243288         0.0110974664         0.985111998 #> 438 1440.000      1.000000000         0.0080103645         0.998979752 #> 439    0.167      0.383759621         0.0071572711         0.484169954 #> 440    1.000      0.496855530         0.0099343587         0.635223458 #> 441    5.000      0.627028680         0.0128949196         0.772022802 #> 442   25.000      0.808602970         0.0135435491         0.860533154 #> 443  150.000      0.972723028         0.0093785656         0.988465997 #> 444 1440.000      1.000000000         0.0089052473         1.000151030 #> 445    0.167      0.798396358         0.0074316429         0.549640873 #> 446    1.000      0.968288666         0.0100423510         0.709999806 #> 447    5.000      0.991825761         0.0090789448         0.818231185 #> 448   25.000      0.985444492         0.0071042184         0.874700313 #> 449  150.000      0.980864912         0.0101689757         0.981090629 #> 450 1440.000      1.000000000         0.0087274652         0.998044683 #> 451    0.167      0.394555165         0.0123687274         0.518904309 #> 452    1.000      0.518236805         0.0058287948         0.689901810 #> 453    5.000      0.648532483         0.0083763541         0.823748689 #> 454   25.000      0.856199920         0.0110765907         0.885014759 #> 455  150.000      0.993611774         0.0097428668         0.979807131 #> 456 1440.000      1.000000000         0.0129554255         0.998603351 #> 457    0.167      0.434759173         0.0059365488         0.504362223 #> 458    1.000      0.546207520         0.0076282497         0.675462617 #> 459    5.000      0.675662327         0.0080345738         0.817623285 #> 460   25.000      0.852607566         0.0129890396         0.884315257 #> 461  150.000      0.980416021         0.0091078664         0.980287790 #> 462 1440.000      1.000000000         0.0099192239         0.998696461 #> 463    0.167      0.431137743         0.0059454561         0.496173953 #> 464    1.000      0.597708136         0.0032931291         0.663442696 #> 465    5.000      0.737204170         0.0078189219         0.804642131 #> 466   25.000      0.907783105         0.0135882263         0.877169183 #> 467  150.000      0.977613000         0.0065718872         0.972119227 #> 468 1440.000      1.000000000         0.0050309058         0.998303449 #> 469    0.167      0.291257349         0.0020293492         0.219791044 #> 470    1.000      0.383090917         0.0052937614         0.388423014 #> 471    5.000      0.529714451         0.0046785638         0.523407161 #> 472   25.000      0.829493702         0.0157874800         0.771075049 #> 473  150.000      0.993732152         0.0103284311         0.992677109 #> 474 1440.000      1.000000000         0.0057281081         0.998615912 #> 475    0.167      0.295977048         0.0047208042         0.146401614 #> 476    1.000      0.410755834         0.0032427784         0.282515675 #> 477    5.000      0.564306868         0.0069761459         0.398766705 #> 478   25.000      0.846247136         0.0151009640         0.732898732 #> 479  150.000      0.986448291         0.0057072544         0.996496490 #> 480 1440.000      1.000000000         0.0060752954         1.000000007 #> 481    0.167      0.040069949         0.0017100235         0.009442783 #> 482    1.000      0.085438372         0.0017879649         0.055228581 #> 483    5.000      0.238610453         0.0169107118         0.247279521 #> 484   25.000      0.758220951         0.0200384183         0.758360092 #> 485  150.000      0.995102924         0.0081365370         0.999800927 #> 486 1440.000      1.000000000         0.0069451175         1.000000000 #> 487    0.167      0.426338095         0.0097875645         0.556107958 #> 488    1.000      0.528309576         0.0078745192         0.634226183 #> 489    5.000      0.729644820         0.0083610275         0.790730958 #> 490   25.000      0.855868674         0.0137266022         0.912285185 #> 491  150.000      0.980664674         0.0048859141         1.002046243 #> 492 1440.000      1.000000000         0.0056412464         1.003199495 #> 493    0.167      0.357207391         0.0043322652         0.566268181 #> 494    1.000      0.473008541         0.0060761197         0.641168782 #> 495    5.000      0.658332008         0.0084116719         0.792125499 #> 496   25.000      0.839817139         0.0047891144         0.912839869 #> 497  150.000      0.987057051         0.0081254080         1.001999004 #> 498 1440.000      1.000000000         0.0063168446         1.003113236 #> 499    0.167      0.468671928         0.0013632076         0.609696634 #> 500    1.000      0.590394827         0.0049502379         0.694959650 #> 501    5.000      0.834008192         0.0083713023         0.852426531 #> 502   25.000      0.923619049         0.0191093409         0.939150646 #> 503  150.000      1.007126099         0.0042091242         1.002443864 #> 504 1440.000      1.000000000         0.0014966438         1.003490359 #> 505    0.167      0.373326146         0.0022900546         0.616159962 #> 506    1.000      0.509800166         0.0057519685         0.697086371 #> 507    5.000      0.733729630         0.0068515749         0.848498415 #> 508   25.000      0.906707796         0.0134004466         0.937267414 #> 509  150.000      0.998100631         0.0058938239         1.002350248 #> 510 1440.000      1.000000000         0.0070834775         1.003372672 #> 511    0.167      0.361882812         0.0049208824         0.571599761 #> 512    1.000      0.488666824         0.0067575555         0.646146875 #> 513    5.000      0.690989159         0.0086362598         0.796070110 #> 514   25.000      0.903295674         0.0202659663         0.913704337 #> 515  150.000      0.984058293         0.0114375160         1.001169311 #> 516 1440.000      1.000000000         0.0134162688         1.002317526 #> 517    0.167      0.573476097         0.0088851666         0.662909866 #> 518    1.000      0.716206390         0.0089148499         0.732129511 #> 519    5.000      0.936279424         0.0104300960         0.859424332 #> 520   25.000      0.992337200         0.0127750988         0.943288819 #> 521  150.000      1.005810085         0.0116229260         1.002271187 #> 522 1440.000      1.000000000         0.0140671780         1.002896090 #> 523    0.167      0.462708169         0.0096936001         0.665674457 #> 524    1.000      0.598386946         0.0033912574         0.731090267 #> 525    5.000      0.804303793         0.0030819268         0.853714240 #> 526   25.000      0.946771787         0.0050276997         0.940529038 #> 527  150.000      0.988776633         0.0058809430         1.002164173 #> 528 1440.000      1.000000000         0.0050607534         1.002805205 #> 529    0.167      0.651767255         0.0056766112         0.676044358 #> 530    1.000      0.779031504         0.0053398148         0.735602477 #> 531    5.000      0.964475281         0.0042956367         0.847289944 #> 532   25.000      0.978328754         0.0072610201         0.930385452 #> 533  150.000      1.009935640         0.0038992764         1.001562674 #> 534 1440.000      1.000000000         0.0005759292         1.002894908 #> 535    0.167      0.520961384         0.0019039484         0.677561559 #> 536    1.000      0.648736621         0.0016092979         0.734183439 #> 537    5.000      0.805967821         0.0053703451         0.842420435 #> 538   25.000      0.942684557         0.0039658476         0.928721112 #> 539  150.000      0.987216198         0.0078016545         1.001549930 #> 540 1440.000      1.000000000         0.0017666804         1.002792810 #> 541    0.167      0.688927524         0.0061614552         0.688820815 #> 542    1.000      0.726682680         0.0065271223         0.726859964 #> 543    5.000      0.811078804         0.0077212602         0.810932801 #> 544   25.000      0.919009194         0.0209351754         0.919171134 #> 545  150.000      1.003506415         0.0059873626         1.001341069 #> 546 1440.000      1.000000000         0.0068866519         1.002078122 #> 547    0.167      0.035299849         0.0023546626         0.092310751 #> 548    1.000      0.102645638         0.0011654274         0.179601388 #> 549    5.000      0.283892194         0.0125340330         0.331359512 #> 550   25.000      0.734840871         0.0167531468         0.757782219 #> 551  150.000      0.979568325         0.0078168935         0.996493234 #> 552 1440.000      1.000000000         0.0070830151         0.996898278 #> 553    0.167      0.016100108         0.0014159261         0.073771641 #> 554    1.000      0.083851713         0.0024618218         0.160902395 #> 555    5.000      0.234326615         0.0103785859         0.317485108 #> 556   25.000      0.758185537         0.0139988733         0.754965450 #> 557  150.000      0.985194576         0.0139196308         0.996955999 #> 558 1440.000      1.000000000         0.0196228000         0.997341382 #> 559    0.167      0.020527882         0.0019768970         0.060766042 #> 560    1.000      0.075555464         0.0037382647         0.146707875 #> 561    5.000      0.242904956         0.0065234885         0.307236009 #> 562   25.000      0.730373428         0.0218838628         0.752989648 #> 563  150.000      0.990493535         0.0052997343         0.997299169 #> 564 1440.000      1.000000000         0.0053182703         0.997673709 #> 565    0.167      0.011227974         0.0053034164         0.011540488 #> 566    1.000      0.067249733         0.0025744029         0.063493950 #> 567    5.000      0.196811620         0.0094040546         0.252008029 #> 568   25.000      0.720732833         0.0104608271         0.742781757 #> 569  150.000      0.995115815         0.0074383821         0.996246817 #> 570 1440.000      1.000000000         0.0069524346         0.996551925 #> 571    0.167      0.008092403         0.0033316280         0.010865291 #> 572    1.000      0.059478779         0.0036157516         0.060976758 #> 573    5.000      0.180308375         0.0094954999         0.249953719 #> 574   25.000      0.704758757         0.0199498779         0.743218468 #> 575  150.000      0.994001488         0.0076667308         0.996744816 #> 576 1440.000      1.000000000         0.0086269887         0.997044507 #> 577    0.167      0.025101351         0.0020220554         0.014692870 #> 578    1.000      0.127812647         0.0031194245         0.076346345 #> 579    5.000      0.287310232         0.0176081249         0.268535055 #> 580   25.000      0.757829318         0.0157577159         0.746419216 #> 581  150.000      0.979971487         0.0119799382         0.996092280 #> 582 1440.000      1.000000000         0.0141032508         0.996408068 #> 583    0.167      0.021079547         0.0052214243         0.009639575 #> 584    1.000      0.065665315         0.0115990112         0.055891774 #> 585    5.000      0.188386272         0.0147111948         0.244468500 #> 586   25.000      0.711086612         0.0146656400         0.744325950 #> 587  150.000      1.006840979         0.0056138504         0.997989415 #> 588 1440.000      1.000000000         0.0034368283         0.998275962 #> 589    0.167      0.008104809         0.0043484803         0.009110454 #> 590    1.000      0.065974503         0.0020918984         0.053328982 #> 591    5.000      0.201255476         0.0113898039         0.239681762 #> 592   25.000      0.767226594         0.0193136652         0.745916162 #> 593  150.000      0.972737925         0.0037410271         0.999730932 #> 594 1440.000      1.000000000         0.0047837073         1.000000000 #> 595    0.167      0.154297084         0.0039680748         0.081795647 #> 596    1.000      0.301275532         0.0050452762         0.247660244 #> 597    5.000      0.455002904         0.0066475849         0.390755814 #> 598   25.000      0.793117021         0.0122391817         0.749393527 #> 599  150.000      0.984875197         0.0084109756         0.992525883 #> 600 1440.000      1.000000000         0.0021463656         0.993383213 #> 601    0.167      0.075308965         0.0037285175         0.102151870 #> 602    1.000      0.247103035         0.0020297036         0.283373718 #> 603    5.000      0.400373861         0.0102277538         0.413725209 #> 604   25.000      0.774061703         0.0098905733         0.751617701 #> 605  150.000      0.983180962         0.0078944496         0.991433614 #> 606 1440.000      1.000000000         0.0081690661         0.992437958 #> 607    0.167      0.110464157         0.0065178986         0.137688373 #> 608    1.000      0.250520166         0.0136318969         0.323346897 #> 609    5.000      0.410061691         0.0033331855         0.447520324 #> 610   25.000      0.778496975         0.0234841516         0.779522944 #> 611  150.000      0.970101579         0.0072968437         0.992954399 #> 612 1440.000      1.000000000         0.0038081206         0.993623068 #> 613    0.167      0.233618712         0.0043458371         0.166611691 #> 614    1.000      0.354698627         0.0176019667         0.353081409 #> 615    5.000      0.509008465         0.0065672037         0.479706723 #> 616   25.000      0.838889655         0.0100170060         0.800886622 #> 617  150.000      0.977845383         0.0035254155         0.994058981 #> 618 1440.000      1.000000000         0.0028723678         0.994544820 #> 619    0.167      0.105865726         0.0061905372         0.106554022 #> 620    1.000      0.290682601         0.0035780112         0.289574293 #> 621    5.000      0.414587030         0.0129088543         0.415774812 #> 622   25.000      0.748523010         0.0156801950         0.747855165 #> 623  150.000      0.983622722         0.0101821665         0.991368023 #> 624 1440.000      1.000000000         0.0045622096         0.992518786 #> 625    0.167      0.142431705         0.0355389760         0.154060691 #> 626    1.000      0.327179238         0.0055484724         0.340762896 #> 627    5.000      0.492305878         0.0277059414         0.462844902 #> 628   25.000      0.879679387         0.0176734027         0.786452866 #> 629  150.000      1.014317730         0.0108868192         0.993432490 #> 630 1440.000      1.000000000         0.0116038406         0.994085461 #> 631    0.167      0.418343754         0.0030850836         0.418343751 #> 632    1.000      0.609032823         0.0131657231         0.609032868 #> 633    5.000      0.735349446         0.0097560759         0.735347911 #> 634   25.000      0.925221136         0.0130647795         0.925227093 #> 635  150.000      1.003809563         0.0067672300         1.001886263 #> 636 1440.000      1.000000000         0.0037687447         1.001918837 #>           hr_diff #> 1   -3.147130e-01 #> 2   -3.950224e-01 #> 3   -3.513023e-01 #> 4   -1.372160e-01 #> 5   -1.561904e-02 #> 6    3.268765e-03 #> 7    6.713893e-02 #> 8    1.823597e-02 #> 9    1.760412e-02 #> 10  -2.611397e-03 #> 11  -4.023323e-03 #> 12   3.695625e-05 #> 13   8.992834e-02 #> 14   2.760146e-02 #> 15   1.194152e-02 #> 16   8.722811e-03 #> 17   1.000383e-03 #> 18   3.521373e-04 #> 19   8.967652e-07 #> 20  -2.534553e-04 #> 21   1.375065e-02 #> 22  -1.657401e-02 #> 23  -8.040142e-04 #> 24   3.880108e-03 #> 25   6.411628e-02 #> 26   2.256807e-02 #> 27   7.624978e-03 #> 28  -3.974662e-03 #> 29  -3.996124e-03 #> 30   2.107888e-03 #> 31  -1.785022e-01 #> 32  -2.482327e-02 #> 33   2.086615e-02 #> 34   3.295502e-02 #> 35   1.064750e-02 #> 36  -4.629535e-03 #> 37   3.691337e-03 #> 38  -8.563270e-03 #> 39   7.608860e-03 #> 40  -6.062368e-03 #> 41   1.294480e-02 #> 42  -9.594738e-03 #> 43   2.216323e-02 #> 44   8.182799e-03 #> 45   2.503644e-02 #> 46   6.904457e-03 #> 47  -3.211937e-03 #> 48  -8.430470e-03 #> 49  -3.165863e-02 #> 50  -5.310888e-02 #> 51  -4.519879e-02 #> 52   2.420095e-02 #> 53   2.191535e-02 #> 54  -1.095404e-02 #> 55  -4.163490e-02 #> 56  -1.558209e-02 #> 57  -5.418162e-02 #> 58   6.371484e-03 #> 59   2.211350e-03 #> 60  -9.389187e-03 #> 61   1.329848e-01 #> 62   9.857768e-02 #> 63  -2.248962e-03 #> 64  -2.778807e-02 #> 65  -1.661282e-02 #> 66  -7.762254e-03 #> 67   1.771252e-01 #> 68   8.625814e-02 #> 69  -2.362069e-03 #> 70  -5.987809e-03 #> 71  -7.855895e-03 #> 72  -6.658887e-03 #> 73   8.182246e-02 #> 74   3.349786e-02 #> 75   1.669030e-02 #> 76  -3.227576e-03 #> 77  -1.673827e-03 #> 78  -4.814735e-03 #> 79   8.274279e-02 #> 80   4.620276e-02 #> 81   1.856995e-02 #> 82   1.064953e-02 #> 83  -7.840282e-04 #> 84  -4.270281e-03 #> 85   2.218029e-02 #> 86   2.816511e-02 #> 87   1.714939e-02 #> 88   5.000940e-03 #> 89  -4.446040e-03 #> 90  -2.541741e-03 #> 91   3.014976e-07 #> 92  -1.883094e-04 #> 93   1.025067e-02 #> 94  -8.423989e-03 #> 95  -1.599933e-03 #> 96  -3.868881e-05 #> 97   1.050093e-02 #> 98   1.376012e-02 #> 99   2.887049e-02 #> 100  1.668859e-02 #> 101  2.430237e-03 #> 102 -2.772804e-03 #> 103  2.404207e-02 #> 104  4.109403e-03 #> 105  2.647527e-02 #> 106  5.426630e-03 #> 107  3.918993e-03 #> 108 -3.046221e-03 #> 109  9.122797e-03 #> 110 -6.480667e-03 #> 111  3.623213e-03 #> 112 -1.071098e-02 #> 113 -1.624301e-03 #> 114  1.214232e-03 #> 115  9.737654e-02 #> 116  3.716817e-02 #> 117  3.215704e-02 #> 118 -2.167648e-03 #> 119  2.166848e-02 #> 120 -2.662479e-03 #> 121  3.868628e-02 #> 122  1.871538e-02 #> 123  1.925193e-02 #> 124  9.456393e-03 #> 125 -8.164037e-04 #> 126 -3.380393e-03 #> 127 -2.937970e-02 #> 128 -2.592671e-02 #> 129 -9.265466e-03 #> 130 -2.168375e-03 #> 131  1.561793e-02 #> 132 -5.051246e-03 #> 133 -2.775558e-17 #> 134 -5.551115e-17 #> 135  0.000000e+00 #> 136 -1.110223e-16 #> 137 -1.110223e-16 #> 138  0.000000e+00 #> 139  8.235609e-02 #> 140  9.430171e-02 #> 141  4.558057e-02 #> 142  4.726262e-02 #> 143 -2.346427e-02 #> 144 -1.745810e-05 #> 145 -4.585865e-02 #> 146  1.724349e-03 #> 147  7.869386e-03 #> 148 -6.371085e-03 #> 149 -8.063653e-04 #> 150 -3.299530e-05 #> 151 -5.872763e-02 #> 152  8.545639e-03 #> 153 -2.615433e-03 #> 154 -9.677488e-03 #> 155 -3.607694e-04 #> 156 -2.493788e-04 #> 157 -6.889040e-02 #> 158  5.520921e-03 #> 159  2.026216e-02 #> 160  2.598942e-03 #> 161 -1.273144e-03 #> 162 -2.299626e-04 #> 163 -3.523703e-02 #> 164 -3.646681e-03 #> 165  3.350209e-03 #> 166 -1.864939e-04 #> 167 -2.336185e-03 #> 168 -1.031749e-05 #> 169 -3.912972e-02 #> 170  5.605284e-03 #> 171  1.078469e-02 #> 172  5.424370e-03 #> 173 -3.599486e-03 #> 174 -2.528750e-04 #> 175 -8.102555e-02 #> 176 -3.523483e-02 #> 177 -3.377644e-03 #> 178 -1.435518e-02 #> 179 -5.212280e-03 #> 180 -2.313758e-04 #> 181  1.203388e-03 #> 182 -3.615330e-02 #> 183 -1.665465e-03 #> 184 -1.832268e-03 #> 185  1.873309e-03 #> 186  1.883969e-05 #> 187  4.357383e-07 #> 188 -1.111964e-06 #> 189  7.210446e-06 #> 190 -1.506345e-05 #> 191  1.658250e-04 #> 192 -1.572929e-04 #> 193 -4.666684e-02 #> 194 -3.837003e-03 #> 195 -4.102536e-03 #> 196 -2.095199e-02 #> 197 -2.631522e-03 #> 198 -4.237458e-04 #> 199  7.888357e-03 #> 200  2.739049e-02 #> 201  3.005088e-02 #> 202  3.936700e-02 #> 203  7.984531e-03 #> 204 -2.311115e-06 #> 205  2.775558e-17 #> 206  0.000000e+00 #> 207  0.000000e+00 #> 208  0.000000e+00 #> 209 -1.110223e-16 #> 210 -2.220446e-16 #> 211 -2.631641e-02 #> 212 -1.568851e-03 #> 213  1.534107e-02 #> 214  5.842704e-04 #> 215  4.290978e-03 #> 216 -2.513037e-03 #> 217 -8.163734e-03 #> 218 -1.961676e-02 #> 219  1.925205e-02 #> 220 -2.301242e-02 #> 221 -7.954713e-03 #> 222 -1.884777e-03 #> 223  1.199025e-02 #> 224  5.419151e-03 #> 225  2.082739e-02 #> 226  5.065091e-03 #> 227  4.567608e-03 #> 228  0.000000e+00 #> 229  1.363474e-02 #> 230 -8.249748e-03 #> 231  2.434520e-02 #> 232 -8.769317e-03 #> 233  1.326478e-02 #> 234  0.000000e+00 #> 235 -1.951144e-03 #> 236 -1.826992e-03 #> 237 -7.652721e-04 #> 238 -9.729751e-03 #> 239 -1.145105e-02 #> 240  0.000000e+00 #> 241  1.362801e-02 #> 242  3.803408e-04 #> 243  1.328058e-02 #> 244 -1.566474e-03 #> 245 -6.570591e-04 #> 246  0.000000e+00 #> 247  7.064368e-03 #> 248 -5.068570e-03 #> 249  1.498986e-02 #> 250 -3.383493e-03 #> 251 -1.254765e-02 #> 252  0.000000e+00 #> 253  1.191894e-02 #> 254 -4.114028e-02 #> 255  1.148241e-02 #> 256 -1.117615e-02 #> 257 -5.772519e-03 #> 258  0.000000e+00 #> 259  1.603813e-02 #> 260 -4.370687e-02 #> 261  9.240052e-03 #> 262 -2.111787e-02 #> 263  4.216441e-04 #> 264  0.000000e+00 #> 265  1.659335e-02 #> 266 -3.822607e-02 #> 267  1.201798e-02 #> 268 -2.271528e-02 #> 269 -7.055537e-03 #> 270  0.000000e+00 #> 271  6.849450e-10 #> 272 -9.424013e-03 #> 273  7.289693e-03 #> 274 -4.088866e-02 #> 275 -1.602611e-02 #> 276  0.000000e+00 #> 277  5.336405e-03 #> 278  6.974607e-03 #> 279  1.187955e-02 #> 280 -3.090698e-03 #> 281 -1.176947e-02 #> 282  0.000000e+00 #> 283  2.174829e-02 #> 284 -4.852381e-02 #> 285  1.592447e-02 #> 286 -4.686173e-02 #> 287 -1.547449e-02 #> 288  0.000000e+00 #> 289 -9.596437e-03 #> 290 -7.008384e-03 #> 291  6.979094e-03 #> 292 -1.660576e-02 #> 293 -3.474150e-03 #> 294  5.944276e-03 #> 295 -2.304483e-03 #> 296 -5.504030e-04 #> 297  2.459022e-02 #> 298 -8.398161e-03 #> 299  5.146356e-03 #> 300  5.614039e-03 #> 301 -5.881821e-03 #> 302 -4.590753e-03 #> 303  1.830395e-02 #> 304 -8.675246e-03 #> 305  6.906398e-03 #> 306  5.052635e-03 #> 307  1.272794e-02 #> 308  1.426385e-02 #> 309  2.584147e-02 #> 310  4.539103e-03 #> 311  1.748163e-02 #> 312  5.614039e-03 #> 313  6.664443e-03 #> 314  1.133728e-03 #> 315  2.194935e-02 #> 316 -8.691065e-03 #> 317  6.618104e-03 #> 318  5.944276e-03 #> 319  1.081446e-02 #> 320 -2.271526e-02 #> 321  1.168587e-02 #> 322 -1.585186e-02 #> 323 -4.877692e-03 #> 324  0.000000e+00 #> 325  1.031050e-02 #> 326 -6.239981e-03 #> 327  1.026908e-02 #> 328 -1.481939e-02 #> 329 -1.207117e-02 #> 330  0.000000e+00 #> 331 -1.305181e-02 #> 332 -2.797553e-02 #> 333 -1.434413e-02 #> 334 -1.483180e-02 #> 335 -4.770753e-03 #> 336 -5.728751e-14 #> 337 -5.597414e-02 #> 338 -9.229816e-02 #> 339 -9.204262e-02 #> 340 -6.630239e-02 #> 341  1.854138e-03 #> 342 -6.439294e-14 #> 343  0.000000e+00 #> 344  1.110223e-16 #> 345  0.000000e+00 #> 346  0.000000e+00 #> 347  0.000000e+00 #> 348  0.000000e+00 #> 349 -3.536828e-03 #> 350 -5.807988e-03 #> 351 -4.326655e-02 #> 352 -3.294432e-02 #> 353 -2.091837e-02 #> 354  5.429555e-04 #> 355  7.578374e-02 #> 356  1.078174e-01 #> 357  9.461028e-02 #> 358  4.880229e-02 #> 359  2.604263e-03 #> 360  2.977402e-04 #> 361  2.011293e-01 #> 362  2.711269e-01 #> 363  2.787318e-01 #> 364  1.921232e-01 #> 365  4.906009e-02 #> 366  2.044018e-03 #> 367  2.320134e-02 #> 368  4.948979e-02 #> 369  6.290797e-02 #> 370  1.083136e-01 #> 371 -6.631398e-03 #> 372  4.589786e-03 #> 373 -1.372049e-03 #> 374  2.470794e-03 #> 375 -3.265832e-03 #> 376  2.189309e-03 #> 377 -2.746939e-03 #> 378  2.015188e-03 #> 379  3.112914e-05 #> 380 -9.044583e-04 #> 381  1.274885e-03 #> 382 -5.404899e-04 #> 383  3.165258e-04 #> 384 -1.683734e-04 #> 385  8.804779e-02 #> 386  5.880454e-02 #> 387  5.102420e-02 #> 388  1.411217e-02 #> 389  1.034600e-02 #> 390 -2.204561e-04 #> 391  4.746365e-02 #> 392 -7.543037e-03 #> 393 -1.117101e-02 #> 394 -3.557471e-03 #> 395 -1.672170e-02 #> 396 -2.386850e-04 #> 397 -5.531747e-02 #> 398 -7.161935e-02 #> 399 -6.152768e-02 #> 400 -2.484623e-02 #> 401 -2.549792e-02 #> 402  1.080856e-03 #> 403  1.242051e-01 #> 404  8.638032e-02 #> 405  5.822018e-02 #> 406  4.622511e-02 #> 407  2.321484e-03 #> 408 -2.464974e-04 #> 409 -2.422934e-02 #> 410 -4.896290e-02 #> 411 -1.633114e-02 #> 412  1.043051e-02 #> 413 -1.101288e-02 #> 414  1.158933e-03 #> 415  2.160932e-01 #> 416  2.218700e-01 #> 417  2.023849e-01 #> 418  7.621719e-02 #> 419 -6.702689e-04 #> 420 -2.688186e-04 #> 421  1.376451e-02 #> 422  2.375910e-02 #> 423  1.699421e-02 #> 424  3.704777e-02 #> 425 -2.795317e-02 #> 426  1.348548e-03 #> 427  5.066633e-02 #> 428  3.143158e-02 #> 429  2.847448e-02 #> 430  5.815052e-02 #> 431 -4.677065e-03 #> 432  6.992439e-04 #> 433  1.009903e-02 #> 434 -1.211255e-02 #> 435 -3.703584e-02 #> 436  5.648836e-02 #> 437  1.113129e-02 #> 438  1.020248e-03 #> 439 -1.004103e-01 #> 440 -1.383679e-01 #> 441 -1.449941e-01 #> 442 -5.193018e-02 #> 443 -1.574297e-02 #> 444 -1.510296e-04 #> 445  2.487555e-01 #> 446  2.582889e-01 #> 447  1.735946e-01 #> 448  1.107442e-01 #> 449 -2.257173e-04 #> 450  1.955317e-03 #> 451 -1.243491e-01 #> 452 -1.716650e-01 #> 453 -1.752162e-01 #> 454 -2.881484e-02 #> 455  1.380464e-02 #> 456  1.396649e-03 #> 457 -6.960305e-02 #> 458 -1.292551e-01 #> 459 -1.419610e-01 #> 460 -3.170769e-02 #> 461  1.282309e-04 #> 462  1.303539e-03 #> 463 -6.503621e-02 #> 464 -6.573456e-02 #> 465 -6.743796e-02 #> 466  3.061392e-02 #> 467  5.493773e-03 #> 468  1.696551e-03 #> 469  7.146630e-02 #> 470 -5.332097e-03 #> 471  6.307290e-03 #> 472  5.841865e-02 #> 473  1.055043e-03 #> 474  1.384088e-03 #> 475  1.495754e-01 #> 476  1.282402e-01 #> 477  1.655402e-01 #> 478  1.133484e-01 #> 479 -1.004820e-02 #> 480 -7.158158e-09 #> 481  3.062717e-02 #> 482  3.020979e-02 #> 483 -8.669067e-03 #> 484 -1.391414e-04 #> 485 -4.698003e-03 #> 486  0.000000e+00 #> 487 -1.297699e-01 #> 488 -1.059166e-01 #> 489 -6.108614e-02 #> 490 -5.641651e-02 #> 491 -2.138157e-02 #> 492 -3.199495e-03 #> 493 -2.090608e-01 #> 494 -1.681602e-01 #> 495 -1.337935e-01 #> 496 -7.302273e-02 #> 497 -1.494195e-02 #> 498 -3.113236e-03 #> 499 -1.410247e-01 #> 500 -1.045648e-01 #> 501 -1.841834e-02 #> 502 -1.553160e-02 #> 503  4.682235e-03 #> 504 -3.490359e-03 #> 505 -2.428338e-01 #> 506 -1.872862e-01 #> 507 -1.147688e-01 #> 508 -3.055962e-02 #> 509 -4.249617e-03 #> 510 -3.372672e-03 #> 511 -2.097169e-01 #> 512 -1.574801e-01 #> 513 -1.050810e-01 #> 514 -1.040866e-02 #> 515 -1.711102e-02 #> 516 -2.317526e-03 #> 517 -8.943377e-02 #> 518 -1.592312e-02 #> 519  7.685509e-02 #> 520  4.904838e-02 #> 521  3.538897e-03 #> 522 -2.896090e-03 #> 523 -2.029663e-01 #> 524 -1.327033e-01 #> 525 -4.941045e-02 #> 526  6.242749e-03 #> 527 -1.338754e-02 #> 528 -2.805205e-03 #> 529 -2.427710e-02 #> 530  4.342903e-02 #> 531  1.171853e-01 #> 532  4.794330e-02 #> 533  8.372966e-03 #> 534 -2.894908e-03 #> 535 -1.566002e-01 #> 536 -8.544682e-02 #> 537 -3.645261e-02 #> 538  1.396344e-02 #> 539 -1.433373e-02 #> 540 -2.792810e-03 #> 541  1.067084e-04 #> 542 -1.772835e-04 #> 543  1.460026e-04 #> 544 -1.619395e-04 #> 545  2.165346e-03 #> 546 -2.078122e-03 #> 547 -5.701090e-02 #> 548 -7.695575e-02 #> 549 -4.746732e-02 #> 550 -2.294135e-02 #> 551 -1.692491e-02 #> 552  3.101722e-03 #> 553 -5.767153e-02 #> 554 -7.705068e-02 #> 555 -8.315849e-02 #> 556  3.220087e-03 #> 557 -1.176142e-02 #> 558  2.658618e-03 #> 559 -4.023816e-02 #> 560 -7.115241e-02 #> 561 -6.433105e-02 #> 562 -2.261622e-02 #> 563 -6.805635e-03 #> 564  2.326291e-03 #> 565 -3.125141e-04 #> 566  3.755782e-03 #> 567 -5.519641e-02 #> 568 -2.204892e-02 #> 569 -1.131002e-03 #> 570  3.448075e-03 #> 571 -2.772889e-03 #> 572 -1.497979e-03 #> 573 -6.964534e-02 #> 574 -3.845971e-02 #> 575 -2.743328e-03 #> 576  2.955493e-03 #> 577  1.040848e-02 #> 578  5.146630e-02 #> 579  1.877518e-02 #> 580  1.141010e-02 #> 581 -1.612079e-02 #> 582  3.591932e-03 #> 583  1.143997e-02 #> 584  9.773541e-03 #> 585 -5.608223e-02 #> 586 -3.323934e-02 #> 587  8.851564e-03 #> 588  1.724038e-03 #> 589 -1.005645e-03 #> 590  1.264552e-02 #> 591 -3.842629e-02 #> 592  2.131043e-02 #> 593 -2.699301e-02 #> 594  0.000000e+00 #> 595  7.250144e-02 #> 596  5.361529e-02 #> 597  6.424709e-02 #> 598  4.372349e-02 #> 599 -7.650687e-03 #> 600  6.616787e-03 #> 601 -2.684291e-02 #> 602 -3.627068e-02 #> 603 -1.335135e-02 #> 604  2.244400e-02 #> 605 -8.252652e-03 #> 606  7.562042e-03 #> 607 -2.722422e-02 #> 608 -7.282673e-02 #> 609 -3.745863e-02 #> 610 -1.025969e-03 #> 611 -2.285282e-02 #> 612  6.376932e-03 #> 613  6.700702e-02 #> 614  1.617219e-03 #> 615  2.930174e-02 #> 616  3.800303e-02 #> 617 -1.621360e-02 #> 618  5.455180e-03 #> 619 -6.882965e-04 #> 620  1.108308e-03 #> 621 -1.187782e-03 #> 622  6.678454e-04 #> 623 -7.745302e-03 #> 624  7.481214e-03 #> 625 -1.162899e-02 #> 626 -1.358366e-02 #> 627  2.946098e-02 #> 628  9.322652e-02 #> 629  2.088524e-02 #> 630  5.914539e-03 #> 631  2.582250e-09 #> 632 -4.476220e-08 #> 633  1.535124e-06 #> 634 -5.956737e-06 #> 635  1.923299e-03 #> 636 -1.918837e-03"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_example_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Example control — get_example_control","title":"Example control — get_example_control","text":"Example control","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_example_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example control — get_example_control","text":"","code":"get_example_control()"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_example_fit_k_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Example k parameters — get_example_fit_k_params","title":"Example k parameters — get_example_fit_k_params","text":"Example k parameters","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_example_fit_k_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example k parameters — get_example_fit_k_params","text":"","code":"get_example_fit_k_params()"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_params_summary_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary image — get_params_summary_image","title":"Plot summary image — get_params_summary_image","text":"use.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_params_summary_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary image — get_params_summary_image","text":"","code":"get_params_summary_image(fixed_params)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides a peptide list — get_peptide_list","title":"Provides a peptide list — get_peptide_list","text":"Created peptite list based provided data.frame.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides a peptide list — get_peptide_list","text":"","code":"get_peptide_list(dat)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides a peptide list — get_peptide_list","text":"dat data.frame","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides a peptide list — get_peptide_list","text":"data.frame position values, Start End.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provides a peptide list — get_peptide_list","text":"","code":"dat <- HaDeX::read_hdx(...) #> Error in eval(expr, envir, enclos): '...' used in an incorrect context get_peptide_list(dat) #> Error in eval(expr, envir, enclos): object 'dat' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides a peptide list — get_peptide_list_v2","title":"Provides a peptide list — get_peptide_list_v2","text":"Created peptite list two binded data.frames. peptides selected based position values. two peptides position different sequence, sequences shown final data.frame.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides a peptide list — get_peptide_list_v2","text":"","code":"get_peptide_list_v2(dat_1, dat_2)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list_v2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides a peptide list — get_peptide_list_v2","text":"dat_1 data.frame dat_2 data.frame","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list_v2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides a peptide list — get_peptide_list_v2","text":"data.frame sequence position values.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_peptide_list_v2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provides a peptide list — get_peptide_list_v2","text":"","code":"dat_1 <- HaDeX::read_hdx(...) #> Error in eval(expr, envir, enclos): '...' used in an incorrect context dat_2 <- HaDeX::read_hdx(...) #> Error in eval(expr, envir, enclos): '...' used in an incorrect context get_peptide_list_v2(dat_1, dat_2) #> Error in eval(expr, envir, enclos): object 'dat_1' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_residue_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a data table with positions and residues — get_residue_positions","title":"Get a data table with positions and residues — get_residue_positions","text":"Get data table positions residues","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_residue_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a data table with positions and residues — get_residue_positions","text":"","code":"get_residue_positions(fit_values)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_uc_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the uc distance for uptake curve — get_uc_distance","title":"Calculates the uc distance for uptake curve — get_uc_distance","text":"Calculates uc distance uptake curves one peptide two biological states. possible methods caluclation described vignette TODO. function supports comparison two different peptides provided values Start, End, MaxUptake Exposure .","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_uc_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the uc distance for uptake curve — get_uc_distance","text":"","code":"get_uc_distance(fit_dat_1, fit_dat_2)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_uc_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the uc distance for uptake curve — get_uc_distance","text":"fit_dat_1 data.frame uc data peptide first state fit_dat_2 data.frame uc data peptide second state","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_uc_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the uc distance for uptake curve — get_uc_distance","text":"one-row data.frame","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/get_uc_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the uc distance for uptake curve — get_uc_distance","text":"","code":"kin_dat_1 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[1]) kin_dat_2 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[2]) fit_dat_1 <- kin_dat_1[kin_dat_1[[\"ID\"]] == 1, ] fit_dat_2 <- kin_dat_2[kin_dat_2[[\"ID\"]] == 1, ] get_uc_distance(fit_dat_1, fit_dat_2) #> # A tibble: 1 × 8 #> # Groups:   MaxUptake, Start [1] #>   MaxUptake Start   End frac_uptake_diff uptake_diff frac_uptake_dist #>       <dbl> <dbl> <dbl>            <dbl>       <dbl>            <dbl> #> 1         9     1    11             74.1        138.           0.0423 #> # ℹ 2 more variables: uptake_dist <dbl>, Sequence <chr>"},{"path":"https://hadexversum.github.io/HRaDeX/reference/hradexify.html","id":null,"dir":"Reference","previous_headings":"","what":"HRaDeX customized ggplot theme — hradexify","title":"HRaDeX customized ggplot theme — hradexify","text":"function HRaDeXifies plot. adds HRaDeX logo ggplot theme.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/hradexify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HRaDeX customized ggplot theme — hradexify","text":"","code":"hradexify(plt)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/hradexify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HRaDeX customized ggplot theme — hradexify","text":"plt ggplot object. Plot HRaDeXify.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/hradexify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HRaDeX customized ggplot theme — hradexify","text":"ggplot2 object.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/hradexify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HRaDeX customized ggplot theme — hradexify","text":"Function adds logo HRaDeX package left corner plot HRaDeX theme. function adapted HaDeX package.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/omit_amino.html","id":null,"dir":"Reference","previous_headings":"","what":"Omit first amino of peptides — omit_amino","title":"Omit first amino of peptides — omit_amino","text":"approach, ommitting first amino residue peptide way correct back-exchange. function modifies provided dataset omits desired number residues (omit parameter) effectively changing Start position peptide.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/omit_amino.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omit first amino of peptides — omit_amino","text":"","code":"omit_amino(dat, omit = 1)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/omit_amino.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omit first amino of peptides — omit_amino","text":"dat dataset modified omit numer residues omitted peptide","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/omit_amino.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omit first amino of peptides — omit_amino","text":"data.frame format provided.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/omit_amino.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Omit first amino of peptides — omit_amino","text":"","code":"fixed_dat <- omit_amino(alpha_dat) head(fixed_dat) #>      Protein Start   End   Sequence Modification MaxUptake      MHP       State #>       <char> <num> <num>     <char>       <char>     <num>    <num>      <char> #> 1: db_eEF1Ba     2    11 FGDLKSPAGL                      8 1061.563 ALPHA_Gamma #> 2: db_eEF1Ba     2    11 FGDLKSPAGL                      8 1061.563 ALPHA_Gamma #> 3: db_eEF1Ba     2    11 FGDLKSPAGL                      8 1061.563 ALPHA_Gamma #> 4: db_eEF1Ba     2    11 FGDLKSPAGL                      8 1061.563 ALPHA_Gamma #> 5: db_eEF1Ba     2    11 FGDLKSPAGL                      8 1061.563 ALPHA_Gamma #> 6: db_eEF1Ba     2    11 FGDLKSPAGL                      8 1061.563 ALPHA_Gamma #>    Exposure                              File     z  Inten    Center #>       <num>                            <char> <int>  <num>     <num> #> 1:    0.000 Tania_161112_eEF1Ba_KSCN_IMS_seq1     1 138844 1062.1913 #> 2:    0.000 Tania_161112_eEF1Ba_KSCN_IMS_seq1     2 728218  531.6754 #> 3:    0.167  Tania_161109_1eEF1Bag_KSCN_10sec     1  41100 1064.0150 #> 4:    0.167  Tania_161109_1eEF1Bag_KSCN_10sec     2 393115  532.4975 #> 5:    0.167  Tania_161109_2eEF1Bag_KSCN_10sec     1  46642 1063.9682 #> 6:    0.167  Tania_161109_2eEF1Bag_KSCN_10sec     2 466233  532.4951"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots blank 3D structure — plot_3d_structure_blank","title":"Plots blank 3D structure — plot_3d_structure_blank","text":"Plots blank 3D strucutre protein. function base line presentation differences compahradex.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots blank 3D structure — plot_3d_structure_blank","text":"","code":"plot_3d_structure_blank(pdb_file_path)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots blank 3D structure — plot_3d_structure_blank","text":"pdb_file_path ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_blank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots blank 3D structure — plot_3d_structure_blank","text":"r3dmol object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_hires.html","id":null,"dir":"Reference","previous_headings":"","what":"Presents classification results on 3D structure — plot_3d_structure_hires","title":"Presents classification results on 3D structure — plot_3d_structure_hires","text":"Plots color classification supplied 3d structure.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_hires.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presents classification results on 3D structure — plot_3d_structure_hires","text":"","code":"plot_3d_structure_hires(hires_params, pdb_file_path)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_hires.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Presents classification results on 3D structure — plot_3d_structure_hires","text":"hires_params ... pdb_file_path ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_hires.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Presents classification results on 3D structure — plot_3d_structure_hires","text":"r3dmol object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_3d_structure_hires.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Presents classification results on 3D structure — plot_3d_structure_hires","text":"","code":"pdb_file_path <- ... #> Error in eval(expr, envir, enclos): '...' used in an incorrect context fit_k_params <- get_example_fit_k_params() control <- get_example_control() kin_dat <- prepare_kin_dat(dat) #> Error in eval(expr, envir, enclos): object 'dat' not found fit_values <- create_fit_dataset(alpha, control, fit_k_params) #> Error in eval(expr, envir, enclos): object 'alpha' not found hires_params <- calculate_hires(fit_values) #> Error in eval(expr, envir, enclos): object 'fit_values' not found plot_3d_structure_hires(hires_params, pdb_file_path) #> Error in eval(expr, envir, enclos): object 'hires_params' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_class_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots heatmap with classification parameters — plot_class_heatmap","title":"Plots heatmap with classification parameters — plot_class_heatmap","text":"use. TODO","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_class_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots heatmap with classification parameters — plot_class_heatmap","text":"","code":"plot_class_heatmap(fixed_params)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_class_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots heatmap with classification parameters — plot_class_heatmap","text":"fixed_params fit params modification","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_class_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots heatmap with classification parameters — plot_class_heatmap","text":"ggplot2 object.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_color_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots assigned color distance — plot_color_distance","title":"Plots assigned color distance — plot_color_distance","text":"Function plots difference assigned color codes hires parameters two biological states. color diffrence calucluated common distance = sqrt((red_1 - red_2)^2 + (green_1 - green_2)^ + (blue_1 - blue_2)^2). difference always positive, difficult get direction change simultaneusly three parameters.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_color_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots assigned color distance — plot_color_distance","text":"","code":"plot_color_distance(two_state_dataset, interactive = T)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_color_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots assigned color distance — plot_color_distance","text":"two_state_dataset data.frame produced create_two_state_dataset interactive logical, true GUI","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_color_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots assigned color distance — plot_color_distance","text":"ggiraph object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_color_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots assigned color distance — plot_color_distance","text":"","code":"fit_k_params <- get_example_fit_k_params() control <- get_example_control() kin_dat <- prepare_kin_dat(alpha_dat) fit_values <- create_fit_dataset(kin_dat, control, fit_k_params) #> Error in rbind(deparse.level, ...): numbers of columns of arguments do not match hires_params <- calculate_hires(fit_values) #> Error in eval(expr, envir, enclos): object 'fit_values' not found # the same for the second state, and then: # two_states_dataset <- create_two_state_dataset(hires_params_1, hires_params_2) # plot_color_distance(two_states_dataset)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_cov_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots coverage with classification results — plot_cov_class","title":"Plots coverage with classification results — plot_cov_class","text":"function used visualization classification method peptides. uses traditional form coverage, length present easily estimated redundancy. also allows see tendencies exchange coherent regions.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_cov_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots coverage with classification results — plot_cov_class","text":"","code":"plot_cov_class(fit_values, fractional = T, interactive = F)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_cov_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots coverage with classification results — plot_cov_class","text":"fit_values ... fractional ... interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_cov_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots coverage with classification results — plot_cov_class","text":"girafe object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_cov_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots coverage with classification results — plot_cov_class","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) fit_k_params <- get_example_fit_k_params() control <- get_example_control() fit_values <- create_fit_dataset(kin_dat, fit_k_params, control) plot_cov_class(fit_values)  {\"x\":{\"html\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='ggiraph-svg' role='graphics-document' id='svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b' viewBox='0 0 720 288'>\\n <defs id='svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b_defs'>\\n  <clipPath id='svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b_c1'>\\n   <rect x='0' y='0' width='720' height='288'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b_c2'>\\n   <rect x='34.8' y='38.16' width='676.23' height='197.96'/>\\n  <\\/clipPath>\\n <\\/defs>\\n <g id='svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b_rootg' class='ggiraph-svg-rootg'>\\n  <g clip-path='url(#svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b_c1)'>\\n   <rect x='0' y='0' width='720' height='288' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.75' stroke-linejoin='round' stroke-linecap='round' class='ggiraph-svg-bg'/>\\n   <rect x='-0' y='0' width='720' height='288' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='round'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b_c2)'>\\n   <rect x='34.8' y='38.16' width='676.23' height='197.96' fill='#FFFFFF' fill-opacity='1' stroke='none'/>\\n   <polyline points='34.80,192.52 711.03,192.52' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='34.80,123.30 711.03,123.30' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='34.80,54.08 711.03,54.08' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='134.77,236.13 134.77,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='273.23,236.13 273.23,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='411.69,236.13 411.69,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='550.14,236.13 550.14,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='688.60,236.13 688.60,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='34.80,227.13 711.03,227.13' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='34.80,157.91 711.03,157.91' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='34.80,88.69 711.03,88.69' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='65.54,236.13 65.54,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='204.00,236.13 204.00,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='342.46,236.13 342.46,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='480.92,236.13 480.92,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='619.37,236.13 619.37,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <rect x='68.31' y='213.28' width='30.46' height='13.84' fill='#7A5233' fill-opacity='0.5' stroke='none'/>\\n   <rect x='71.08' y='199.44' width='27.69' height='13.84' fill='#9C6300' fill-opacity='0.5' stroke='none'/>\\n   <rect x='73.85' y='185.6' width='24.92' height='13.84' fill='#996600' fill-opacity='0.5' stroke='none'/>\\n   <rect x='79.39' y='171.75' width='16.62' height='13.84' fill='#817E00' fill-opacity='0.5' stroke='none'/>\\n   <rect x='79.39' y='157.91' width='19.38' height='13.84' fill='#7D8200' fill-opacity='0.5' stroke='none'/>\\n   <rect x='90.46' y='144.07' width='16.62' height='13.84' fill='#0D4CA6' fill-opacity='0.5' stroke='none'/>\\n   <rect x='98.77' y='213.28' width='13.85' height='13.84' fill='#0900F6' fill-opacity='0.5' stroke='none'/>\\n   <rect x='98.77' y='199.44' width='16.62' height='13.84' fill='#1300EC' fill-opacity='0.5' stroke='none'/>\\n   <rect x='107.08' y='185.6' width='16.62' height='13.84' fill='#0D0AE9' fill-opacity='0.5' stroke='none'/>\\n   <rect x='107.08' y='171.75' width='19.38' height='13.84' fill='#0C0AE9' fill-opacity='0.5' stroke='none'/>\\n   <rect x='112.62' y='213.28' width='16.62' height='13.84' fill='#2C2EA5' fill-opacity='0.5' stroke='none'/>\\n   <rect x='112.62' y='157.91' width='19.38' height='13.84' fill='#232BB0' fill-opacity='0.5' stroke='none'/>\\n   <rect x='112.62' y='144.07' width='47.08' height='13.84' fill='#4D10A2' fill-opacity='0.5' stroke='none'/>\\n   <rect x='118.15' y='199.44' width='41.54' height='13.84' fill='#5A1392' fill-opacity='0.5' stroke='none'/>\\n   <rect x='123.69' y='185.6' width='36' height='13.84' fill='#61009E' fill-opacity='0.5' stroke='none'/>\\n   <rect x='126.46' y='171.75' width='13.85' height='13.84' fill='#640597' fill-opacity='0.5' stroke='none'/>\\n   <rect x='126.46' y='130.22' width='33.23' height='13.84' fill='#630795' fill-opacity='0.5' stroke='none'/>\\n   <rect x='129.23' y='213.28' width='30.46' height='13.84' fill='#770A7E' fill-opacity='0.5' stroke='none'/>\\n   <rect x='132' y='157.91' width='16.62' height='13.84' fill='#4500BA' fill-opacity='0.5' stroke='none'/>\\n   <rect x='132' y='116.38' width='24.92' height='13.84' fill='#4F00B0' fill-opacity='0.5' stroke='none'/>\\n   <rect x='132' y='102.54' width='27.69' height='13.84' fill='#4107B8' fill-opacity='0.5' stroke='none'/>\\n   <rect x='140.31' y='171.75' width='19.38' height='13.84' fill='#4B1D97' fill-opacity='0.5' stroke='none'/>\\n   <rect x='159.69' y='213.28' width='13.85' height='13.84' fill='#0000FF' fill-opacity='0.5' stroke='none'/>\\n   <rect x='168' y='199.44' width='30.46' height='13.84' fill='#95006A' fill-opacity='0.5' stroke='none'/>\\n   <rect x='168' y='185.6' width='33.23' height='13.84' fill='#61019E' fill-opacity='0.5' stroke='none'/>\\n   <rect x='168' y='171.75' width='38.77' height='13.84' fill='#650F8B' fill-opacity='0.5' stroke='none'/>\\n   <rect x='168' y='157.91' width='41.54' height='13.84' fill='#320BC2' fill-opacity='0.5' stroke='none'/>\\n   <rect x='170.77' y='144.07' width='30.46' height='13.84' fill='#4603B6' fill-opacity='0.5' stroke='none'/>\\n   <rect x='170.77' y='130.22' width='36' height='13.84' fill='#400BB4' fill-opacity='0.5' stroke='none'/>\\n   <rect x='170.77' y='116.38' width='38.77' height='13.84' fill='#3909BD' fill-opacity='0.5' stroke='none'/>\\n   <rect x='173.54' y='213.28' width='27.69' height='13.84' fill='#5003AC' fill-opacity='0.5' stroke='none'/>\\n   <rect x='176.31' y='102.54' width='24.92' height='13.84' fill='#75008A' fill-opacity='0.5' stroke='none'/>\\n   <rect x='176.31' y='88.69' width='30.46' height='13.84' fill='#772068' fill-opacity='0.5' stroke='none'/>\\n   <rect x='206.77' y='213.28' width='19.38' height='13.84' fill='#0A00F5' fill-opacity='0.5' stroke='none'/>\\n   <rect x='209.54' y='199.44' width='16.62' height='13.84' fill='#0000FF' fill-opacity='0.5' stroke='none'/>\\n   <rect x='226.15' y='213.28' width='44.31' height='13.84' fill='#E70018' fill-opacity='0.5' stroke='none'/>\\n   <rect x='226.15' y='199.44' width='58.15' height='13.84' fill='#DD0F13' fill-opacity='0.5' stroke='none'/>\\n   <rect x='242.77' y='185.6' width='41.54' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='242.77' y='171.75' width='52.61' height='13.84' fill='#F90600' fill-opacity='0.5' stroke='none'/>\\n   <rect x='242.77' y='157.91' width='58.15' height='13.84' fill='#A3015C' fill-opacity='0.5' stroke='none'/>\\n   <rect x='248.31' y='144.07' width='47.08' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='270.46' y='213.28' width='30.46' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='295.38' y='199.44' width='55.38' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='300.92' y='213.28' width='49.85' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='303.69' y='185.6' width='47.08' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='334.15' y='171.75' width='16.62' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='348' y='157.91' width='16.62' height='13.84' fill='#4900B6' fill-opacity='0.5' stroke='none'/>\\n   <rect x='350.76' y='213.28' width='13.85' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='350.76' y='199.44' width='47.08' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='350.76' y='185.6' width='49.85' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='350.76' y='171.75' width='55.38' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='361.84' y='144.07' width='49.85' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='364.61' y='213.28' width='47.08' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='406.15' y='199.44' width='36' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='411.69' y='213.28' width='30.46' height='13.84' fill='#FF0000' fill-opacity='0.5' stroke='none'/>\\n   <rect x='442.15' y='213.28' width='19.38' height='13.84' fill='#734A42' fill-opacity='0.5' stroke='none'/>\\n   <rect x='442.15' y='199.44' width='22.15' height='13.84' fill='#5B3B69' fill-opacity='0.5' stroke='none'/>\\n   <rect x='444.92' y='185.6' width='16.62' height='13.84' fill='#7F5030' fill-opacity='0.5' stroke='none'/>\\n   <rect x='461.53' y='213.28' width='22.15' height='13.84' fill='#4C1C97' fill-opacity='0.5' stroke='none'/>\\n   <rect x='461.53' y='185.6' width='30.46' height='13.84' fill='#7C196A' fill-opacity='0.5' stroke='none'/>\\n   <rect x='464.3' y='199.44' width='30.46' height='13.84' fill='#9D1D44' fill-opacity='0.5' stroke='none'/>\\n   <rect x='491.99' y='213.28' width='16.62' height='13.84' fill='#1049A6' fill-opacity='0.5' stroke='none'/>\\n   <rect x='494.76' y='199.44' width='13.85' height='13.84' fill='#0A0BEA' fill-opacity='0.5' stroke='none'/>\\n   <rect x='508.61' y='213.28' width='19.38' height='13.84' fill='#5D1A88' fill-opacity='0.5' stroke='none'/>\\n   <rect x='508.61' y='199.44' width='24.92' height='13.84' fill='#8F4828' fill-opacity='0.5' stroke='none'/>\\n   <rect x='508.61' y='185.6' width='27.69' height='13.84' fill='#802C53' fill-opacity='0.5' stroke='none'/>\\n   <rect x='508.61' y='171.75' width='47.08' height='13.84' fill='#7F552B' fill-opacity='0.5' stroke='none'/>\\n   <rect x='511.38' y='157.91' width='24.92' height='13.84' fill='#941655' fill-opacity='0.5' stroke='none'/>\\n   <rect x='511.38' y='144.07' width='44.31' height='13.84' fill='#8A4A2B' fill-opacity='0.5' stroke='none'/>\\n   <rect x='516.91' y='130.22' width='19.38' height='13.84' fill='#D3002C' fill-opacity='0.5' stroke='none'/>\\n   <rect x='516.91' y='116.38' width='38.77' height='13.84' fill='#901F4F' fill-opacity='0.5' stroke='none'/>\\n   <rect x='516.91' y='102.54' width='77.54' height='13.84' fill='#71543B' fill-opacity='0.5' stroke='none'/>\\n   <rect x='525.22' y='88.69' width='55.38' height='13.84' fill='#753555' fill-opacity='0.5' stroke='none'/>\\n   <rect x='527.99' y='213.28' width='22.15' height='13.84' fill='#783156' fill-opacity='0.5' stroke='none'/>\\n   <rect x='527.99' y='74.85' width='27.69' height='13.84' fill='#B04F00' fill-opacity='0.5' stroke='none'/>\\n   <rect x='527.99' y='61.01' width='41.54' height='13.84' fill='#7B374D' fill-opacity='0.5' stroke='none'/>\\n   <rect x='527.99' y='47.16' width='44.31' height='13.84' fill='#804837' fill-opacity='0.5' stroke='none'/>\\n   <rect x='533.53' y='199.44' width='36' height='13.84' fill='#8F541D' fill-opacity='0.5' stroke='none'/>\\n   <rect x='550.14' y='213.28' width='44.31' height='13.84' fill='#566444' fill-opacity='0.5' stroke='none'/>\\n   <rect x='555.68' y='185.6' width='38.77' height='13.84' fill='#586542' fill-opacity='0.5' stroke='none'/>\\n   <rect x='577.84' y='199.44' width='16.62' height='13.84' fill='#02609D' fill-opacity='0.5' stroke='none'/>\\n   <rect x='591.68' y='171.75' width='33.23' height='13.84' fill='#7B5231' fill-opacity='0.5' stroke='none'/>\\n   <rect x='591.68' y='157.91' width='36' height='13.84' fill='#6E5C35' fill-opacity='0.5' stroke='none'/>\\n   <rect x='594.45' y='213.28' width='30.46' height='13.84' fill='#7D7111' fill-opacity='0.5' stroke='none'/>\\n   <rect x='594.45' y='199.44' width='33.23' height='13.84' fill='#727518' fill-opacity='0.5' stroke='none'/>\\n   <rect x='594.45' y='185.6' width='36' height='13.84' fill='#697125' fill-opacity='0.5' stroke='none'/>\\n   <rect x='602.76' y='144.07' width='22.15' height='13.84' fill='#986700' fill-opacity='0.5' stroke='none'/>\\n   <rect x='602.76' y='130.22' width='24.92' height='13.84' fill='#866E0B' fill-opacity='0.5' stroke='none'/>\\n   <rect x='605.53' y='116.38' width='19.38' height='13.84' fill='#B04F00' fill-opacity='0.5' stroke='none'/>\\n   <rect x='605.53' y='102.54' width='22.15' height='13.84' fill='#9C580B' fill-opacity='0.5' stroke='none'/>\\n   <rect x='611.07' y='88.69' width='16.62' height='13.84' fill='#B60049' fill-opacity='0.5' stroke='none'/>\\n   <rect x='624.91' y='213.28' width='16.62' height='13.84' fill='#059960' fill-opacity='0.5' stroke='none'/>\\n   <rect x='624.91' y='171.75' width='19.38' height='13.84' fill='#02A35A' fill-opacity='0.5' stroke='none'/>\\n   <rect x='624.91' y='144.07' width='22.15' height='13.84' fill='#0059A6' fill-opacity='0.5' stroke='none'/>\\n   <rect x='627.68' y='199.44' width='16.62' height='13.84' fill='#048A71' fill-opacity='0.5' stroke='none'/>\\n   <rect x='627.68' y='157.91' width='19.38' height='13.84' fill='#006E91' fill-opacity='0.5' stroke='none'/>\\n   <rect x='627.68' y='130.22' width='22.15' height='13.84' fill='#078B6D' fill-opacity='0.5' stroke='none'/>\\n   <rect x='630.45' y='185.6' width='16.62' height='13.84' fill='#00629D' fill-opacity='0.5' stroke='none'/>\\n   <rect x='633.22' y='116.38' width='13.85' height='13.84' fill='#0000FF' fill-opacity='0.5' stroke='none'/>\\n   <rect x='644.3' y='213.28' width='22.15' height='13.84' fill='#417A44' fill-opacity='0.5' stroke='none'/>\\n   <rect x='647.07' y='199.44' width='19.38' height='13.84' fill='#4D00B2' fill-opacity='0.5' stroke='none'/>\\n   <rect x='647.07' y='185.6' width='22.15' height='13.84' fill='#329538' fill-opacity='0.5' stroke='none'/>\\n   <rect x='647.07' y='171.75' width='24.92' height='13.84' fill='#584165' fill-opacity='0.5' stroke='none'/>\\n   <rect x='649.83' y='157.91' width='16.62' height='13.84' fill='#5600A9' fill-opacity='0.5' stroke='none'/>\\n   <rect x='652.6' y='144.07' width='16.62' height='13.84' fill='#1F4898' fill-opacity='0.5' stroke='none'/>\\n   <rect x='666.45' y='213.28' width='13.85' height='13.84' fill='#965C0E' fill-opacity='0.5' stroke='none'/>\\n   <rect x='34.8' y='38.16' width='676.23' height='197.96' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='round'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b_c1)'>\\n   <polyline points='65.54,240.61 65.54,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='204.00,240.61 204.00,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='342.46,240.61 342.46,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='480.92,240.61 480.92,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='619.37,240.61 619.37,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <text x='60.96' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>0<\\/text>\\n   <text x='194.84' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>50<\\/text>\\n   <text x='328.72' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>100<\\/text>\\n   <text x='467.18' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>150<\\/text>\\n   <text x='605.64' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>200<\\/text>\\n   <text x='337.87' y='275.29' font-size='13.5pt' font-family='DejaVu Sans'>Position<\\/text>\\n   <text x='34.8' y='24.71' font-size='16.2pt' font-family='DejaVu Sans'>Assigned class on coverage<\\/text>\\n  <\\/g>\\n <\\/g>\\n<\\/svg>\",\"js\":null,\"uid\":\"svg_dcdb3eb0_7c38_456a_83ed_fee9738f412b\",\"ratio\":2.5,\"settings\":{\"tooltip\":{\"css\":\".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}\",\"placement\":\"doc\",\"opacity\":0.9,\"offx\":10,\"offy\":10,\"use_cursor_pos\":true,\"use_fill\":false,\"use_stroke\":false,\"delay_over\":200,\"delay_out\":500},\"hover\":{\"css\":\".hover_data_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_data_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_data_SVGID_ { fill:orange;stroke:black; }\\nline.hover_data_SVGID_, polyline.hover_data_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_data_SVGID_, polygon.hover_data_SVGID_, path.hover_data_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_data_SVGID_ { stroke:orange; }\",\"reactive\":true,\"nearest_distance\":null},\"hover_inv\":{\"css\":\"\"},\"hover_key\":{\"css\":\".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_key_SVGID_ { stroke:orange; }\",\"reactive\":true},\"hover_theme\":{\"css\":\".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_theme_SVGID_ { stroke:orange; }\",\"reactive\":true},\"select\":{\"css\":\".select_data_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_data_SVGID_ { stroke:none;fill:red; }\\ncircle.select_data_SVGID_ { fill:red;stroke:black; }\\nline.select_data_SVGID_, polyline.select_data_SVGID_ { fill:none;stroke:red; }\\nrect.select_data_SVGID_, polygon.select_data_SVGID_, path.select_data_SVGID_ { fill:red;stroke:none; }\\nimage.select_data_SVGID_ { stroke:red; }\",\"type\":\"multiple\",\"only_shiny\":true,\"selected\":[]},\"select_inv\":{\"css\":\"\"},\"select_key\":{\"css\":\".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_key_SVGID_ { stroke:none;fill:red; }\\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\\nimage.select_key_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"select_theme\":{\"css\":\".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\\nimage.select_theme_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"zoom\":{\"min\":1,\"max\":1,\"duration\":300},\"toolbar\":{\"position\":\"topright\",\"pngname\":\"diagram\",\"tooltips\":null,\"fixed\":false,\"hidden\":[],\"delay_over\":200,\"delay_out\":500},\"sizing\":{\"rescale\":true,\"width\":1}}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_double_uc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots two uc plots side by side — plot_double_uc","title":"Plots two uc plots side by side — plot_double_uc","text":"function plots two plots side side peptide. left plot uc plot fitted model components. right plot singular uc without logarithmic axis comparison shape. Basically, function calls functions plots results side side. function aimed summary Plots panel HRaDeXGUI interactive mode.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_double_uc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots two uc plots side by side — plot_double_uc","text":"","code":"plot_double_uc(fit_dat, fit_values, replicate = F, fractional = T)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_double_uc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots two uc plots side by side — plot_double_uc","text":"fit_dat uptake data selected peptide. fit_values fit values selected peptide. replicate ... fractional ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_double_uc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots two uc plots side by side — plot_double_uc","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_double_uc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots two uc plots side by side — plot_double_uc","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) fit_dat <- kin_dat[kin_dat[[\"ID\"]]==1, ] fit_k_params <- get_example_fit_k_params() control <- get_example_control() fit_values_all <- create_fit_dataset(kin_dat, fit_k_params, control) fit_values <- fit_values_all[fit_values_all[[\"ID\"]]==1, ] plot_double_uc(fit_dat, fit_values) #> Error in if (!is.na(fit_values[[\"class_name\"]])) {    final_plot <- plot_lm(fit_dat, class_name = unique(fit_values[[\"class_name\"]]),         interactive = interactive)}: argument is of length zero"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_estimated_k.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots estimated k — plot_estimated_k","title":"Plots estimated k — plot_estimated_k","text":"Plots estimated k residues. Estimated k calculated classification results, treating n (population) probability getting corresponding rate exchange. aggregation results described vignette.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_estimated_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots estimated k — plot_estimated_k","text":"","code":"plot_estimated_k(hires_params, interactive = F)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_estimated_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots estimated k — plot_estimated_k","text":"hires_params data.frame hires results, calculate using calculate_hires. interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_estimated_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots estimated k — plot_estimated_k","text":"girafe object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_estimated_k.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots estimated k — plot_estimated_k","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) fit_k_params <- get_example_fit_k_params() control <- get_example_control() fit_values <- create_fit_dataset(kin_dat, fit_k_params, control) hires_params <- calculate_hires(fit_values) #> Error in if (method == \"shortest\") {    hires_params_ <- lapply(seq(1:protein_length), function(pos) {        if (fractional) {            tmp_params <- fit_values %>% filter(start <= pos &                 pos <= end & n_1 + n_2 + n_3 < 1.25)        }        else {            tmp_params <- fit_values %>% filter(start <= pos &                 pos <= end & n_1 + n_2 + n_3 - max_uptake <=                 0)        }        tmp_params <- tmp_params %>% arrange(nchar(sequence),             class_name) %>% .[1, ]        if (nrow(tmp_params) == 0) {            data.frame(Protein = Protein, State = State, position = pos,                 n_1 = NA, k_1 = NA, n_2 = NA, k_2 = NA, n_3 = NA,                 k_3 = NA, k_est = NA, class_name = NA, color = NA)        }        else {            data.frame(Protein = Protein, State = State, position = pos,                 n_1 = tmp_params[[\"n_1\"]], k_1 = tmp_params[[\"k_1\"]],                 n_2 = tmp_params[[\"n_2\"]], k_2 = tmp_params[[\"k_2\"]],                 n_3 = tmp_params[[\"n_3\"]], k_3 = tmp_params[[\"k_3\"]],                 k_est = tmp_params[[\"k_est\"]], class_name = tmp_params[[\"class_name\"]],                 color = tmp_params[[\"color\"]])        }    }) %>% bind_rows()}: the condition has length > 1 plot_estimated_k(hires_params) #> Error in eval(expr, envir, enclos): object 'hires_params' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_fitted_uc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots uptake curve with fit components — plot_fitted_uc","title":"Plots uptake curve with fit components — plot_fitted_uc","text":"FUnction plots uptake values one, selected peptide. Alongside fitted model plotted black, components (fast - red, medium - green, slow - blue). case peptide classified edge case, linear model used.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_fitted_uc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots uptake curve with fit components — plot_fitted_uc","text":"","code":"plot_fitted_uc(   fit_dat,   fit_values,   replicate = F,   fractional = T,   interactive = F )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_fitted_uc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots uptake curve with fit components — plot_fitted_uc","text":"fit_dat uptake data selected peptide. fit_values fit values selected peptide. replicate indicator replicate data plotted, aggregated. fractional ... interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_fitted_uc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots uptake curve with fit components — plot_fitted_uc","text":"ggplot object. Need converstion girafe interactivity.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_fitted_uc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots uptake curve with fit components — plot_fitted_uc","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) fit_dat <- kin_dat[kin_dat[[\"ID\"]]==1, ] fit_k_params <- get_example_fit_k_params() control <- get_example_control() fit_values_all <- create_fit_dataset(kin_dat, fit_k_params, control) fit_values <- fit_values_all[fit_values_all[[\"id\"]]==1, ] plot_fitted_uc(fit_dat, fit_values) #> Warning: Removed 101 rows containing missing values or values outside the scale range #> (`geom_function()`). #> Warning: Removed 101 rows containing missing values or values outside the scale range #> (`geom_function()`). #> Warning: Removed 65 rows containing missing values or values outside the scale range #> (`geom_function()`)."},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_hires.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots high resolution classification plot — plot_hires","title":"Plots high resolution classification plot — plot_hires","text":"Plot result color classification analysis high resolution linear form.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_hires.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots high resolution classification plot — plot_hires","text":"","code":"plot_hires(hires_params, interactive = F)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_hires.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots high resolution classification plot — plot_hires","text":"hires_params data.frame hires results, calculate using calculate_hires. interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_hires.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots high resolution classification plot — plot_hires","text":"girafe object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_hires.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots high resolution classification plot — plot_hires","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) fit_k_params <- get_example_fit_k_params() control <- get_example_control() fit_values <- create_fit_dataset(kin_dat, control, fit_k_params) #> Error in rbind(deparse.level, ...): numbers of columns of arguments do not match hires_params <- calculate_hires(fit_values) #> Error in eval(expr, envir, enclos): object 'fit_values' not found plot_hires(hires_params) #> Error in eval(expr, envir, enclos): object 'hires_params' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for interactivity — plot_interactive","title":"Wrapper for interactivity — plot_interactive","text":"Currently use.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for interactivity — plot_interactive","text":"","code":"plot_interactive(plot_function, ...)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_k_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots estimated k distance — plot_k_distance","title":"Plots estimated k distance — plot_k_distance","text":"Function plots difference two estimated k values hires parameters two biological states. sign difference indicates direction change.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_k_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots estimated k distance — plot_k_distance","text":"","code":"plot_k_distance(two_state_dataset, interactive = F)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_k_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots estimated k distance — plot_k_distance","text":"two_state_dataset data.frame produced create_two_state_dataset interactive logical, true GUI","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_k_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots estimated k distance — plot_k_distance","text":"ggiraph object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_k_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots estimated k distance — plot_k_distance","text":"","code":"fit_k_params <- get_example_fit_k_params() control <- get_example_control() kin_dat <- prepare_kin_dat(alpha_dat) fit_values <- create_fit_dataset(kin_dat, control, fit_k_params) #> Error in rbind(deparse.level, ...): numbers of columns of arguments do not match hires_params <- calculate_hires(fit_values) #> Error in eval(expr, envir, enclos): object 'fit_values' not found # the same for the second state and then: # two_states_dataset <- create_two_state_dataset(hires_params_1, hires_params_2) # plot_k_distance(two_states_dataset)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots uc with linear fit — plot_lm","title":"Plots uc with linear fit — plot_lm","text":"Plots uptake curve peptide linear fit. Used GUI present uptake curves edge cases, three-exponential model fitted.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots uc with linear fit — plot_lm","text":"","code":"plot_lm(fit_dat, class_name = NA, interactive = T)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots uc with linear fit — plot_lm","text":"fit_dat deuterium uptake data selected peptide. class_name class name assigned selected peptide. interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots uc with linear fit — plot_lm","text":"ggplot2 object. interactive mode, conversion girafe needed.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots uc with linear fit — plot_lm","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) fit_dat <- kin_dat[kin_dat[[\"ID\"]]==1, ] plot_lm(fit_dat, class_name = unique(fit_dat[[\"class_name\"]])) #> Warning: Ignoring unknown aesthetics: tooltip #> Error in geom_point(aes(x = Exposure, y = deut_uptake, tooltip = glue(\"Sequence: {sequence}\\n                                                Exposure: {Exposure}\\n                                                DU = {formatC(deut_uptake, 2) Da}\\n                                                Err DU = {formatC(err_deut_uptake, 2) Da}\")),     shape = 1, size = 3): Problem while computing aesthetics. #> ℹ Error occurred in the 1st layer. #> Caused by error: #> ! Failed to parse glue component #> Caused by error in `parse()`: #> ! <text>:1:25: unexpected symbol #> 1: formatC(deut_uptake, 2) Da #>                             ^"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots n values — plot_n","title":"Plots n values — plot_n","text":"Plots n values fit parameters. operating fractional values, n value close 1 ensure model legitimacy. operating values daltons, upper limit n value max possible uptake calculated sequence, although rarely reached due back-exchange.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots n values — plot_n","text":"","code":"plot_n(list_params, fractional = F, interactive = F)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots n values — plot_n","text":"list_params list fit parameters fractional ... interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots n values — plot_n","text":"ggplot2 object. Need convertion girafe interactive mode.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots n values — plot_n","text":"","code":"fit_k_params <- get_example_fit_k_params() control <- get_example_control() kin_dat <- prepare_kin_dat(alpha_dat) fit_values <- create_fit_dataset(kin_dat, control, fit_k_params) #> Error in rbind(deparse.level, ...): numbers of columns of arguments do not match plot_n(fit_values) #> Error in eval(expr, envir, enclos): object 'fit_values' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_params_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots map of params — plot_params_map","title":"Plots map of params — plot_params_map","text":"Currently use.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_params_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots map of params — plot_params_map","text":"","code":"plot_params_map(fit_values, interactive = F)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_params_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots map of params — plot_params_map","text":"fit_values ... interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_recovered_uc_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots recovered DU rmse — plot_recovered_uc_coverage","title":"Plots recovered DU rmse — plot_recovered_uc_coverage","text":"Function plots rmse recovered deuterium uptake high-resolution parameters respect experimental deuterium uptake, calculated whole peptide. two possible plotting methods: butterfly: peptide ID values X-axis RMSE values Y-axis coverage: form coverage plot fill color showing RMSE value. function plots results one aggregation method. comparison aggregation methods see: compare_aggregation_methods.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_recovered_uc_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots recovered DU rmse — plot_recovered_uc_coverage","text":"","code":"plot_recovered_uc_coverage(rec_uc_rmse_dat, style = c(\"coverage\", \"butterfly\"))"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_recovered_uc_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots recovered DU rmse — plot_recovered_uc_coverage","text":"rec_uc_rmse_dat recovered deuterium uptake calculated rmse, produced calculate_recovered_uc_rmse style plotting style","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_recovered_uc_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots recovered DU rmse — plot_recovered_uc_coverage","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat, state = \"Alpha_KSCN\") fit_values_all <- create_fit_dataset(kin_dat, control = get_example_control(),                                      fit_k_params = get_example_fit_k_params(),                                      fractional = T) rec_uc_dat <- create_uc_from_hires_dataset(kin_dat,                                            fit_values_all,                                            hires_method = \"shortest\") rec_uc_rmse_dat <- calculate_recovered_uc_rmse(rec_uc_dat, sort = \"ID\") plot_recovered_uc_coverage(rec_uc_rmse_dat, style = \"butterfly\")  plot_recovered_uc_coverage(rec_uc_rmse_dat, style = \"coverage\") #> Error in scale_fill_gradient(\"RMSE\", low = \"white\", high = \"red\"): could not find function \"scale_fill_gradient\""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_rss_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram of fit rss values — plot_rss_hist","title":"Histogram of fit rss values — plot_rss_hist","text":"Histogram rss values selected models peptide. Divided respect number model parameters. Plot judge goodness models.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_rss_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram of fit rss values — plot_rss_hist","text":"","code":"plot_rss_hist(fit_values, interactive = F)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_rss_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram of fit rss values — plot_rss_hist","text":"fit_values data.frame fit values interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_rss_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram of fit rss values — plot_rss_hist","text":"ggplot2 object. Needs converstion girafe interactive mode.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_rss_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram of fit rss values — plot_rss_hist","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_singular_uc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots singular uptake curve — plot_singular_uc","title":"Plots singular uptake curve — plot_singular_uc","text":"Function plots deuterium uptake plot (uc) one peptide, traditional mode. Currently use GUIs.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_singular_uc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots singular uptake curve — plot_singular_uc","text":"","code":"plot_singular_uc(   fit_dat,   fit_values,   include_uc = T,   replicate = F,   fractional = T,   interactive = F )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_singular_uc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots singular uptake curve — plot_singular_uc","text":"fit_dat deuterium uptake data one peptide fit_values fit parameters one peptide, used include_uc indicator regular uc plotted well replicate indicator data replicates plotted, aggregated fractional ... interactive ...","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_singular_uc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots singular uptake curve — plot_singular_uc","text":"ggplot object. Need conversion girafe interactive mode.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_singular_uc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots singular uptake curve — plot_singular_uc","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_start_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots initial fit parameters — plot_start_params","title":"Plots initial fit parameters — plot_start_params","text":"Plots visualization selected excahnge group limits, initial parameters fit. helpful additional self-control chosen limits.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_start_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots initial fit parameters — plot_start_params","text":"","code":"plot_start_params(fit_k_params)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_start_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots initial fit parameters — plot_start_params","text":"fit_k_params data.frame k values exchange groups","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_start_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots initial fit parameters — plot_start_params","text":"ggplot2 object.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_start_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots initial fit parameters — plot_start_params","text":"","code":"fit_k_params <- get_example_fit_k_params() plot_start_params(fit_k_params) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values."},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_two_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the classification results for two states — plot_two_states","title":"Plots the classification results for two states — plot_two_states","text":"Function plots classfication results color code two biological states time. results second state top, first state bottom. grey color indicates data.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_two_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the classification results for two states — plot_two_states","text":"","code":"plot_two_states(   hires_params_1,   hires_params_2,   type = c(\"aggregated\", \"classes\", \"coverage\"),   interactive = F )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_two_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the classification results for two states — plot_two_states","text":"hires_params_1 hires parameters first state hires_params_2 hires parameters second state type supported right now interactive logical, true GUI","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_two_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the classification results for two states — plot_two_states","text":"ggiraph object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_two_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the classification results for two states — plot_two_states","text":"","code":"fit_k_params <- get_example_fit_k_params() control <- get_example_control() control <- get_example_control() kin_dat <- prepare_kin_dat(alpha_dat) fit_values <- create_fit_dataset(kin_dat, control, fit_k_params) #> Error in rbind(deparse.level, ...): numbers of columns of arguments do not match hires_params <- calculate_hires(fit_values) #> Error in eval(expr, envir, enclos): object 'fit_values' not found # the same for the second state, and then: # plot_two_states(hires_params_1, hires_params_2)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots uc and fit parameters for peptide in two states. — plot_uc","title":"Plots uc and fit parameters for peptide in two states. — plot_uc","text":"function plots uptake curves biological states peptide, alongside fit parameters. peptides two states can compared obly position whole protein sequence.biological states distinguishable line type. part comparative feature.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots uc and fit parameters for peptide in two states. — plot_uc","text":"","code":"plot_uc(   fit_dat_1,   fit_dat_2,   fit_values_1,   fit_values_2,   fractional = F,   interactive = F )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots uc and fit parameters for peptide in two states. — plot_uc","text":"fit_dat_1 data.frame uptake data peptide first state fit_dat_2 data.frame uptake data peptide second state fit_values_1 data.frame fit values peptide first state fit_values_2 data.frame fit values peptide second state fractional indicator values fractional type interactive logical, true GUI","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots uc and fit parameters for peptide in two states. — plot_uc","text":"ggiraph object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots uc and fit parameters for peptide in two states. — plot_uc","text":"","code":"kin_dat_1 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[1]) fit_dat_1 <- kin_dat_1[kin_dat_1[[\"ID\"]] == 1, ] fit_values_1 <- create_fit_dataset(fit_dat_1, control, fit_k_params) #> Error in eval(expr, envir, enclos): object 'control' not found # the same for the second state, and then: # plot_uc(fit_dat_1, fit_dat_2, fit_values_1, fit_values_2)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the uc difference type 2 — plot_uc_distance","title":"Plots the uc difference type 2 — plot_uc_distance","text":"Function plots uc distance uc_distance_dataset. careful, uc_distance_dataset contains distances calculated using different methods, described vignette TODO.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the uc difference type 2 — plot_uc_distance","text":"","code":"plot_uc_distance(   uc_distance_dataset,   squared = F,   fractional = T,   interactive = F )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the uc difference type 2 — plot_uc_distance","text":"uc_distance_dataset ... squared indicator uc distance squared fractional ... interactive logical, true GUI","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the uc difference type 2 — plot_uc_distance","text":"ggplot2 object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the uc difference type 2 — plot_uc_distance","text":"","code":"kin_dat_1 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[1]) kin_dat_2 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[2]) uc_distance_dataset <- create_uc_distance_dataset(kin_dat_1, kin_dat_2) plot_uc_distance(uc_distance_dataset)  {\"x\":{\"html\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='ggiraph-svg' role='graphics-document' id='svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0' viewBox='0 0 720 288'>\\n <defs id='svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0_defs'>\\n  <clipPath id='svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0_c1'>\\n   <rect x='0' y='0' width='720' height='288'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0_c2'>\\n   <rect x='75.02' y='38.16' width='636.01' height='197.96'/>\\n  <\\/clipPath>\\n <\\/defs>\\n <g id='svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0_rootg' class='ggiraph-svg-rootg'>\\n  <g clip-path='url(#svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0_c1)'>\\n   <rect x='0' y='0' width='720' height='288' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.75' stroke-linejoin='round' stroke-linecap='round' class='ggiraph-svg-bg'/>\\n   <rect x='0' y='0' width='720' height='288' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='round'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0_c2)'>\\n   <rect x='75.02' y='38.16' width='636.01' height='197.96' fill='#FFFFFF' fill-opacity='1' stroke='none'/>\\n   <polyline points='75.02,202.89 711.03,202.89' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='75.02,154.20 711.03,154.20' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='75.02,105.52 711.03,105.52' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='75.02,56.84 711.03,56.84' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='169.04,236.13 169.04,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='299.27,236.13 299.27,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='429.49,236.13 429.49,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='559.71,236.13 559.71,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='689.94,236.13 689.94,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='75.02,227.23 711.03,227.23' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='75.02,178.54 711.03,178.54' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='75.02,129.86 711.03,129.86' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='75.02,81.18 711.03,81.18' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='103.93,236.13 103.93,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='234.16,236.13 234.16,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='364.38,236.13 364.38,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='494.60,236.13 494.60,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='624.83,236.13 624.83,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='106.54' y1='220.02' x2='132.58' y2='220.02' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='109.14' y1='223' x2='132.58' y2='223' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='111.75' y1='223.84' x2='132.58' y2='223.84' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='116.95' y1='156.53' x2='129.98' y2='156.53' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='116.95' y1='224.86' x2='132.58' y2='224.86' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='127.37' y1='222.91' x2='140.39' y2='222.91' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='135.19' y1='196.4' x2='145.6' y2='196.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='135.19' y1='215.75' x2='148.21' y2='215.75' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='143' y1='216.62' x2='156.02' y2='216.62' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='143' y1='209.07' x2='158.63' y2='209.07' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='148.21' y1='219.13' x2='161.23' y2='219.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='148.21' y1='205.77' x2='163.83' y2='205.77' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='148.21' y1='222.71' x2='189.88' y2='222.71' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='153.42' y1='224.57' x2='189.88' y2='224.57' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='158.63' y1='222.93' x2='189.88' y2='222.93' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='161.23' y1='224.8' x2='171.65' y2='224.8' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='161.23' y1='220.45' x2='189.88' y2='220.45' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='163.83' y1='225.5' x2='189.88' y2='225.5' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='166.44' y1='226.39' x2='179.46' y2='226.39' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='166.44' y1='226.11' x2='187.28' y2='226.11' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='166.44' y1='223.38' x2='189.88' y2='223.38' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='174.25' y1='214.39' x2='189.88' y2='214.39' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='192.48' y1='222.4' x2='202.9' y2='222.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='200.3' y1='227.05' x2='226.34' y2='227.05' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='200.3' y1='226.21' x2='228.95' y2='226.21' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='200.3' y1='225.73' x2='234.16' y2='225.73' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='200.3' y1='226.49' x2='236.76' y2='226.49' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='202.9' y1='225.56' x2='228.95' y2='225.56' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='202.9' y1='222.95' x2='234.16' y2='222.95' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='202.9' y1='225.88' x2='236.76' y2='225.88' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='205.51' y1='227.01' x2='228.95' y2='227.01' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='208.11' y1='227.13' x2='228.95' y2='227.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='208.11' y1='225.99' x2='234.16' y2='225.99' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='236.76' y1='205.62' x2='252.39' y2='205.62' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='239.36' y1='188.67' x2='252.39' y2='188.67' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='254.99' y1='226.51' x2='294.06' y2='226.51' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='254.99' y1='226.72' x2='307.08' y2='226.72' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='270.62' y1='226.97' x2='307.08' y2='226.97' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='270.62' y1='227' x2='317.5' y2='227' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='270.62' y1='226.77' x2='322.71' y2='226.77' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='275.83' y1='225.89' x2='317.5' y2='225.89' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='296.66' y1='226.4' x2='322.71' y2='226.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='320.1' y1='224.95' x2='369.59' y2='224.95' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='325.31' y1='225.49' x2='369.59' y2='225.49' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='327.92' y1='224.17' x2='369.59' y2='224.17' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='356.57' y1='222.33' x2='369.59' y2='222.33' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='369.59' y1='227.04' x2='382.61' y2='227.04' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='372.19' y1='226.96' x2='382.61' y2='226.96' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='372.19' y1='226.52' x2='413.86' y2='226.52' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='372.19' y1='225.36' x2='416.47' y2='225.36' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='372.19' y1='226.61' x2='421.68' y2='226.61' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='382.61' y1='226.77' x2='426.89' y2='226.77' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='385.21' y1='226.45' x2='426.89' y2='226.45' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='424.28' y1='225.53' x2='455.54' y2='225.53' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='429.49' y1='225.37' x2='455.54' y2='225.37' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='458.14' y1='182.14' x2='473.77' y2='182.14' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='458.14' y1='142.19' x2='476.37' y2='142.19' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='460.74' y1='211.19' x2='473.77' y2='211.19' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='476.37' y1='208.26' x2='494.6' y2='208.26' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='476.37' y1='195.4' x2='502.42' y2='195.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='478.98' y1='210.41' x2='505.02' y2='210.41' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='505.02' y1='212.29' x2='518.04' y2='212.29' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='507.62' y1='206.38' x2='518.04' y2='206.38' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='520.65' y1='208.06' x2='536.27' y2='208.06' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='520.65' y1='223.91' x2='541.48' y2='223.91' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='520.65' y1='224.55' x2='544.09' y2='224.55' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='520.65' y1='221.29' x2='562.32' y2='221.29' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='523.25' y1='223.4' x2='544.09' y2='223.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='523.25' y1='223.01' x2='562.32' y2='223.01' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='528.46' y1='226.6' x2='544.09' y2='226.6' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='528.46' y1='226.3' x2='562.32' y2='226.3' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='528.46' y1='213.16' x2='598.78' y2='213.16' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='536.27' y1='225.97' x2='585.76' y2='225.97' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='538.88' y1='221.97' x2='557.11' y2='221.97' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='538.88' y1='226.47' x2='562.32' y2='226.47' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='538.88' y1='225.32' x2='575.34' y2='225.32' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='538.88' y1='224.65' x2='577.95' y2='224.65' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='544.09' y1='222.41' x2='575.34' y2='222.41' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='559.71' y1='215.34' x2='598.78' y2='215.34' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='564.92' y1='216.51' x2='598.78' y2='216.51' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='585.76' y1='220.4' x2='598.78' y2='220.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='598.78' y1='220.82' x2='627.43' y2='220.82' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='598.78' y1='211.43' x2='630.03' y2='211.43' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='601.39' y1='203.4' x2='627.43' y2='203.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='601.39' y1='217.34' x2='630.03' y2='217.34' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='601.39' y1='224.26' x2='632.64' y2='224.26' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='609.2' y1='225.31' x2='627.43' y2='225.31' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='609.2' y1='215.76' x2='630.03' y2='215.76' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='611.8' y1='222.61' x2='627.43' y2='222.61' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='611.8' y1='211.89' x2='630.03' y2='211.89' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='617.01' y1='225.39' x2='630.03' y2='225.39' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='630.03' y1='211.49' x2='643.06' y2='211.49' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='630.03' y1='215.93' x2='645.66' y2='215.93' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='630.03' y1='220.82' x2='648.27' y2='220.82' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='632.64' y1='221.01' x2='645.66' y2='221.01' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='632.64' y1='219.35' x2='648.27' y2='219.35' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='632.64' y1='161.39' x2='650.87' y2='161.39' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='635.24' y1='222.2' x2='648.27' y2='222.2' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='637.85' y1='211.08' x2='648.27' y2='211.08' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='648.27' y1='218.55' x2='666.5' y2='218.55' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='650.87' y1='220.5' x2='666.5' y2='220.5' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='650.87' y1='221.42' x2='669.1' y2='221.42' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='650.87' y1='47.16' x2='671.71' y2='47.16' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='653.47' y1='220.53' x2='666.5' y2='220.53' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='656.08' y1='222.9' x2='669.1' y2='222.9' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='669.1' y1='211.4' x2='679.52' y2='211.4' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <rect x='75.02' y='38.16' width='636.01' height='197.96' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='round'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0_c1)'>\\n   <text x='57.79' y='232.47' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>0<\\/text>\\n   <text x='39.48' y='183.79' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>500<\\/text>\\n   <text x='30.32' y='135.11' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>1000<\\/text>\\n   <text x='30.32' y='86.42' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>1500<\\/text>\\n   <polyline points='70.54,227.23 75.02,227.23' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='70.54,178.54 75.02,178.54' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='70.54,129.86 75.02,129.86' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='70.54,81.18 75.02,81.18' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='103.93,240.61 103.93,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='234.16,240.61 234.16,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='364.38,240.61 364.38,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='494.60,240.61 494.60,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='624.83,240.61 624.83,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <text x='99.35' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>0<\\/text>\\n   <text x='225' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>50<\\/text>\\n   <text x='350.64' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>100<\\/text>\\n   <text x='480.86' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>150<\\/text>\\n   <text x='611.09' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>200<\\/text>\\n   <text x='357.98' y='275.29' font-size='13.5pt' font-family='DejaVu Sans'>Position<\\/text>\\n   <text transform='translate(22.09,226.12) rotate(-90.00)' font-size='13.5pt' font-family='DejaVu Sans'>Abs frac diff DU [%]<\\/text>\\n   <text x='75.02' y='24.71' font-size='16.2pt' font-family='DejaVu Sans'>Fractional uptake difference<\\/text>\\n  <\\/g>\\n <\\/g>\\n<\\/svg>\",\"js\":null,\"uid\":\"svg_cdb7e4fc_f780_4e59_b6ed_4db20ec4eff0\",\"ratio\":2.5,\"settings\":{\"tooltip\":{\"css\":\".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}\",\"placement\":\"doc\",\"opacity\":0.9,\"offx\":10,\"offy\":10,\"use_cursor_pos\":true,\"use_fill\":false,\"use_stroke\":false,\"delay_over\":200,\"delay_out\":500},\"hover\":{\"css\":\".hover_data_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_data_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_data_SVGID_ { fill:orange;stroke:black; }\\nline.hover_data_SVGID_, polyline.hover_data_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_data_SVGID_, polygon.hover_data_SVGID_, path.hover_data_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_data_SVGID_ { stroke:orange; }\",\"reactive\":true,\"nearest_distance\":null},\"hover_inv\":{\"css\":\"\"},\"hover_key\":{\"css\":\".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_key_SVGID_ { stroke:orange; }\",\"reactive\":true},\"hover_theme\":{\"css\":\".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_theme_SVGID_ { stroke:orange; }\",\"reactive\":true},\"select\":{\"css\":\".select_data_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_data_SVGID_ { stroke:none;fill:red; }\\ncircle.select_data_SVGID_ { fill:red;stroke:black; }\\nline.select_data_SVGID_, polyline.select_data_SVGID_ { fill:none;stroke:red; }\\nrect.select_data_SVGID_, polygon.select_data_SVGID_, path.select_data_SVGID_ { fill:red;stroke:none; }\\nimage.select_data_SVGID_ { stroke:red; }\",\"type\":\"multiple\",\"only_shiny\":true,\"selected\":[]},\"select_inv\":{\"css\":\"\"},\"select_key\":{\"css\":\".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_key_SVGID_ { stroke:none;fill:red; }\\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\\nimage.select_key_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"select_theme\":{\"css\":\".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\\nimage.select_theme_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"zoom\":{\"min\":1,\"max\":1,\"duration\":300},\"toolbar\":{\"position\":\"topright\",\"pngname\":\"diagram\",\"tooltips\":null,\"fixed\":false,\"hidden\":[],\"delay_over\":200,\"delay_out\":500},\"sizing\":{\"rescale\":true,\"width\":1}}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_real_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the uc difference type 1 — plot_uc_real_dist","title":"Plots the uc difference type 1 — plot_uc_real_dist","text":"Function plots uc distance uc_distance_dataset. careful, uc_distance_dataset contains distances calculated using different methods, described vignette TODO.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_real_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the uc difference type 1 — plot_uc_real_dist","text":"","code":"plot_uc_real_dist(   uc_distance_dataset,   squared = F,   fractional = T,   interactive = F )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_real_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the uc difference type 1 — plot_uc_real_dist","text":"uc_distance_dataset ... squared indicator uc distance squared fractional ... interactive logical, true GUI","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_real_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the uc difference type 1 — plot_uc_real_dist","text":"ggiraph object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/plot_uc_real_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the uc difference type 1 — plot_uc_real_dist","text":"","code":"kin_dat_1 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[1]) kin_dat_2 <- prepare_kin_dat(alpha_dat, state = unique(alpha_dat[[\"State\"]])[2]) uc_distance_dataset <- create_uc_distance_dataset(kin_dat_1, kin_dat_2) plot_uc_real_dist(uc_distance_dataset)  {\"x\":{\"html\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='ggiraph-svg' role='graphics-document' id='svg_441abc33_6880_483d_908f_4e0f8ed72e8f' viewBox='0 0 720 288'>\\n <defs id='svg_441abc33_6880_483d_908f_4e0f8ed72e8f_defs'>\\n  <clipPath id='svg_441abc33_6880_483d_908f_4e0f8ed72e8f_c1'>\\n   <rect x='0' y='0' width='720' height='288'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_441abc33_6880_483d_908f_4e0f8ed72e8f_c2'>\\n   <rect x='56.71' y='38.16' width='654.33' height='197.96'/>\\n  <\\/clipPath>\\n <\\/defs>\\n <g id='svg_441abc33_6880_483d_908f_4e0f8ed72e8f_rootg' class='ggiraph-svg-rootg'>\\n  <g clip-path='url(#svg_441abc33_6880_483d_908f_4e0f8ed72e8f_c1)'>\\n   <rect x='0' y='0' width='720' height='288' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.75' stroke-linejoin='round' stroke-linecap='round' class='ggiraph-svg-bg'/>\\n   <rect x='0' y='0' width='720' height='288' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='round'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_441abc33_6880_483d_908f_4e0f8ed72e8f_c2)'>\\n   <rect x='56.71' y='38.16' width='654.33' height='197.96' fill='#FFFFFF' fill-opacity='1' stroke='none'/>\\n   <polyline points='56.71,192.49 711.03,192.49' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='56.71,123.21 711.03,123.21' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='56.71,53.92 711.03,53.92' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='153.43,236.13 153.43,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='287.41,236.13 287.41,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='421.38,236.13 421.38,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='555.36,236.13 555.36,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='689.33,236.13 689.33,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.87' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='56.71,227.13 711.03,227.13' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='56.71,157.85 711.03,157.85' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='56.71,88.57 711.03,88.57' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='86.45,236.13 86.45,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='220.42,236.13 220.42,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='354.40,236.13 354.40,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='488.37,236.13 488.37,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='622.34,236.13 622.34,38.16' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='89.13' y1='168.53' x2='115.92' y2='168.53' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='91.81' y1='182.48' x2='115.92' y2='182.48' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='94.49' y1='188.92' x2='115.92' y2='188.92' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='99.85' y1='179.29' x2='113.24' y2='179.29' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='99.85' y1='183.33' x2='115.92' y2='183.33' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='110.56' y1='176.31' x2='123.96' y2='176.31' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='118.6' y1='152.73' x2='129.32' y2='152.73' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='118.6' y1='192.44' x2='132' y2='192.44' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='126.64' y1='151.27' x2='140.04' y2='151.27' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='126.64' y1='172.68' x2='142.72' y2='172.68' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='132' y1='193.56' x2='145.4' y2='193.56' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='132' y1='168.12' x2='148.08' y2='168.12' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='132' y1='201.88' x2='174.87' y2='201.88' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='137.36' y1='201.11' x2='174.87' y2='201.11' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='142.72' y1='195.44' x2='174.87' y2='195.44' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='145.4' y1='198.11' x2='156.11' y2='198.11' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='145.4' y1='198.43' x2='174.87' y2='198.43' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='148.08' y1='207.61' x2='174.87' y2='207.61' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='150.76' y1='189.31' x2='164.15' y2='189.31' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='150.76' y1='204.36' x2='172.19' y2='204.36' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='150.76' y1='190.01' x2='174.87' y2='190.01' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='158.79' y1='160.2' x2='174.87' y2='160.2' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='177.55' y1='196.75' x2='188.27' y2='196.75' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='185.59' y1='227.13' x2='212.38' y2='227.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='185.59' y1='220.14' x2='215.06' y2='220.14' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='185.59' y1='202.35' x2='220.42' y2='202.35' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='185.59' y1='215.57' x2='223.1' y2='215.57' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='188.27' y1='211.65' x2='215.06' y2='211.65' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='188.27' y1='186.04' x2='220.42' y2='186.04' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='188.27' y1='195.57' x2='223.1' y2='195.57' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='190.95' y1='219.85' x2='215.06' y2='219.85' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='193.63' y1='227.13' x2='215.06' y2='227.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='193.63' y1='216.28' x2='220.42' y2='216.28' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='223.1' y1='146.1' x2='239.18' y2='146.1' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='225.78' y1='146.45' x2='239.18' y2='146.45' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='241.86' y1='218.48' x2='282.05' y2='218.48' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='241.86' y1='218.51' x2='295.45' y2='218.51' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='257.93' y1='223.73' x2='295.45' y2='223.73' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='257.93' y1='227.13' x2='306.16' y2='227.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='257.93' y1='217.81' x2='311.52' y2='217.81' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='263.29' y1='217.78' x2='306.16' y2='217.78' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='284.73' y1='213.01' x2='311.52' y2='213.01' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='308.84' y1='174.29' x2='359.75' y2='174.29' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='314.2' y1='185.38' x2='359.75' y2='185.38' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='316.88' y1='173.8' x2='359.75' y2='173.8' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='346.36' y1='111.35' x2='359.75' y2='111.35' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='359.75' y1='227.13' x2='373.15' y2='227.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='362.43' y1='227.13' x2='373.15' y2='227.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='362.43' y1='214.83' x2='405.31' y2='214.83' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='362.43' y1='213.71' x2='407.98' y2='213.71' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='362.43' y1='216.38' x2='413.34' y2='216.38' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='373.15' y1='217.75' x2='418.7' y2='217.75' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='375.83' y1='216.93' x2='418.7' y2='216.93' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='416.02' y1='207.67' x2='448.18' y2='207.67' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='421.38' y1='193.91' x2='448.18' y2='193.91' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='450.86' y1='47.16' x2='466.93' y2='47.16' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='450.86' y1='82.94' x2='469.61' y2='82.94' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='453.54' y1='79.31' x2='466.93' y2='79.31' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='469.61' y1='54.44' x2='488.37' y2='54.44' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='469.61' y1='72.47' x2='496.41' y2='72.47' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='472.29' y1='143.79' x2='499.09' y2='143.79' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='499.09' y1='137.81' x2='512.48' y2='137.81' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='501.77' y1='129.53' x2='512.48' y2='129.53' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='515.16' y1='159.36' x2='531.24' y2='159.36' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='515.16' y1='164.8' x2='536.6' y2='164.8' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='515.16' y1='183.97' x2='539.28' y2='183.97' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='515.16' y1='180.38' x2='558.04' y2='180.38' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='517.84' y1='190.57' x2='539.28' y2='190.57' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='517.84' y1='182.32' x2='558.04' y2='182.32' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='523.2' y1='218.34' x2='539.28' y2='218.34' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='523.2' y1='209.41' x2='558.04' y2='209.41' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='523.2' y1='186.99' x2='595.55' y2='186.99' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='531.24' y1='184.33' x2='582.15' y2='184.33' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='533.92' y1='201.84' x2='552.68' y2='201.84' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='533.92' y1='201.99' x2='558.04' y2='201.99' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='533.92' y1='195.93' x2='571.43' y2='195.93' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='533.92' y1='191.49' x2='574.11' y2='191.49' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='539.28' y1='197.71' x2='571.43' y2='197.71' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='555.36' y1='180.54' x2='595.55' y2='180.54' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='560.72' y1='170.14' x2='595.55' y2='170.14' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='582.15' y1='147.28' x2='595.55' y2='147.28' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='595.55' y1='184.37' x2='625.02' y2='184.37' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='595.55' y1='165.27' x2='627.7' y2='165.27' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='598.23' y1='174.57' x2='625.02' y2='174.57' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='598.23' y1='170.06' x2='627.7' y2='170.06' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='598.23' y1='182.66' x2='630.38' y2='182.66' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='606.27' y1='187.71' x2='625.02' y2='187.71' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='606.27' y1='172.13' x2='627.7' y2='172.13' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='608.95' y1='192.46' x2='625.02' y2='192.46' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='608.95' y1='181.81' x2='627.7' y2='181.81' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='614.3' y1='183.87' x2='627.7' y2='183.87' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='627.7' y1='158.21' x2='641.1' y2='158.21' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='627.7' y1='162.78' x2='643.78' y2='162.78' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='627.7' y1='163.7' x2='646.46' y2='163.7' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='630.38' y1='163.72' x2='643.78' y2='163.72' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='630.38' y1='162.01' x2='646.46' y2='162.01' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='630.38' y1='128.81' x2='649.14' y2='128.81' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='633.06' y1='165.46' x2='646.46' y2='165.46' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='635.74' y1='124.29' x2='646.46' y2='124.29' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='646.46' y1='171.98' x2='665.21' y2='171.98' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='649.14' y1='171.01' x2='665.21' y2='171.01' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='649.14' y1='167.96' x2='667.89' y2='167.96' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='649.14' y1='183.35' x2='670.57' y2='183.35' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='651.82' y1='181.58' x2='665.21' y2='181.58' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='654.5' y1='142.8' x2='667.89' y2='142.8' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='667.89' y1='170.89' x2='678.61' y2='170.89' stroke='#000000' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <rect x='56.71' y='38.16' width='654.33' height='197.96' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='round'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_441abc33_6880_483d_908f_4e0f8ed72e8f_c1)'>\\n   <text x='39.48' y='232.37' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>0<\\/text>\\n   <text x='39.48' y='163.09' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>5<\\/text>\\n   <text x='30.32' y='93.81' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>10<\\/text>\\n   <polyline points='52.22,227.13 56.71,227.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='52.22,157.85 56.71,157.85' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='52.22,88.57 56.71,88.57' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='86.45,240.61 86.45,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='220.42,240.61 220.42,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='354.40,240.61 354.40,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='488.37,240.61 488.37,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='622.34,240.61 622.34,236.13' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.75' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <text x='81.87' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>0<\\/text>\\n   <text x='211.26' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>50<\\/text>\\n   <text x='340.66' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>100<\\/text>\\n   <text x='474.63' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>150<\\/text>\\n   <text x='608.61' y='254.69' font-size='10.8pt' font-family='DejaVu Sans' fill='#4D4D4D' fill-opacity='1'>200<\\/text>\\n   <text x='348.82' y='275.29' font-size='13.5pt' font-family='DejaVu Sans'>Position<\\/text>\\n   <text transform='translate(22.09,225.43) rotate(-90.00)' font-size='13.5pt' font-family='DejaVu Sans'>Frac uptake diff [%]<\\/text>\\n   <text x='56.71' y='24.71' font-size='16.2pt' font-family='DejaVu Sans'>Distances between uptake points<\\/text>\\n  <\\/g>\\n <\\/g>\\n<\\/svg>\",\"js\":null,\"uid\":\"svg_441abc33_6880_483d_908f_4e0f8ed72e8f\",\"ratio\":2.5,\"settings\":{\"tooltip\":{\"css\":\".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}\",\"placement\":\"doc\",\"opacity\":0.9,\"offx\":10,\"offy\":10,\"use_cursor_pos\":true,\"use_fill\":false,\"use_stroke\":false,\"delay_over\":200,\"delay_out\":500},\"hover\":{\"css\":\".hover_data_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_data_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_data_SVGID_ { fill:orange;stroke:black; }\\nline.hover_data_SVGID_, polyline.hover_data_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_data_SVGID_, polygon.hover_data_SVGID_, path.hover_data_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_data_SVGID_ { stroke:orange; }\",\"reactive\":true,\"nearest_distance\":null},\"hover_inv\":{\"css\":\"\"},\"hover_key\":{\"css\":\".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_key_SVGID_ { stroke:orange; }\",\"reactive\":true},\"hover_theme\":{\"css\":\".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_theme_SVGID_ { stroke:orange; }\",\"reactive\":true},\"select\":{\"css\":\".select_data_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_data_SVGID_ { stroke:none;fill:red; }\\ncircle.select_data_SVGID_ { fill:red;stroke:black; }\\nline.select_data_SVGID_, polyline.select_data_SVGID_ { fill:none;stroke:red; }\\nrect.select_data_SVGID_, polygon.select_data_SVGID_, path.select_data_SVGID_ { fill:red;stroke:none; }\\nimage.select_data_SVGID_ { stroke:red; }\",\"type\":\"multiple\",\"only_shiny\":true,\"selected\":[]},\"select_inv\":{\"css\":\"\"},\"select_key\":{\"css\":\".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_key_SVGID_ { stroke:none;fill:red; }\\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\\nimage.select_key_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"select_theme\":{\"css\":\".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\\nimage.select_theme_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"zoom\":{\"min\":1,\"max\":1,\"duration\":300},\"toolbar\":{\"position\":\"topright\",\"pngname\":\"diagram\",\"tooltips\":null,\"fixed\":false,\"hidden\":[],\"delay_over\":200,\"delay_out\":500},\"sizing\":{\"rescale\":true,\"width\":1}}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_diff_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares differential data — prepare_diff_data","title":"Prepares differential data — prepare_diff_data","text":"Function prepares results format can used 3D presentation. transforms peptide data resiudal data, regard original values threshold.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_diff_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares differential data — prepare_diff_data","text":"","code":"prepare_diff_data(params, value, threshold)"},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_diff_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares differential data — prepare_diff_data","text":"params values presented. value value presented. threshold threshold values.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_diff_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares differential data — prepare_diff_data","text":"data.frame object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_kin_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates uptake data from mass measurements — prepare_kin_dat","title":"Creates uptake data from mass measurements — prepare_kin_dat","text":"Function calculates deuterium uptake time point original data respect parameters.","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_kin_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates uptake data from mass measurements — prepare_kin_dat","text":"","code":"prepare_kin_dat(   dat,   state = dat[[\"State\"]][1],   time_0 = min(dat[[\"Exposure\"]]),   time_100 = max(dat[[\"Exposure\"]]),   replicate = F,   FD = FALSE )"},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_kin_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates uptake data from mass measurements — prepare_kin_dat","text":"dat experimental data read HaDeX::read_hdx state biological state time_0 minimal exchange control time point time_100 maximal exchange control time point replicate idicator, replicate values provided, aggregated FD idicator, time_100 value shoul used fully deuterated control, normalization purposes, left time point measurement","code":""},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_kin_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates uptake data from mass measurements — prepare_kin_dat","text":"data.frame object.","code":""},{"path":[]},{"path":"https://hadexversum.github.io/HRaDeX/reference/prepare_kin_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates uptake data from mass measurements — prepare_kin_dat","text":"","code":"kin_dat <- prepare_kin_dat(alpha_dat) head(kin_dat) #>   ID Exposure   Protein    Sequence Start End       State MaxUptake #> 1  1    0.167 db_eEF1Ba GFGDLKSPAGL     1  11 ALPHA_Gamma         9 #> 2  2    0.167 db_eEF1Ba  FGDLKSPAGL     2  11 ALPHA_Gamma         8 #> 3  3    0.167 db_eEF1Ba   GDLKSPAGL     3  11 ALPHA_Gamma         7 #> 4  4    0.167 db_eEF1Ba      LKSPAG     5  10 ALPHA_Gamma         4 #> 5  5    0.167 db_eEF1Ba     LKSPAGL     5  11 ALPHA_Gamma         5 #> 6  6    0.167 db_eEF1Ba      AGLQVL     9  14 ALPHA_Gamma         5 #>   frac_deut_uptake err_frac_deut_uptake deut_uptake err_deut_uptake #> 1       0.30648518          0.002215405   1.6650534     0.003059254 #> 2       0.45857271          0.004640503   1.9851358     0.015897816 #> 3       0.46212246          0.004916810   2.0723573     0.018277096 #> 4       0.37704598          0.003147925   1.0428597     0.008524509 #> 5       0.37237034          0.002004330   1.1624757     0.006165483 #> 6       0.06834131          0.010370966   0.2395107     0.036235039"}]
